[{"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\serviceWorker.js":"2","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\index.js":"3","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\App.js":"4","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\user_reducer.js":"5","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js":"6","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js":"7","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\AdminBoard\\PatientList.js":"8","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js":"9","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorBoard.js":"10","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js":"11","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\AdminBoard\\AdminBoard.js":"12","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js":"13","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js":"14","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js":"15","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Footer\\Footer.js":"16","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"17","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\NavBar.js":"18","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"19","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"20","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\UserInfo\\UserInfo.js":"21","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\hoc\\auth.js":"22","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js":"23","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\types.js":"24","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\constant\\Constant.js":"25","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\utils\\FileUpload.js":"26","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\user_actions.js":"27","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"28","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"29","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\Config.js":"30","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js":"31","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js":"32","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js":"33","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js":"34","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js":"35","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js":"36","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientInfo.js":"37"},{"size":1236,"mtime":1619097284399,"results":"38","hashOfConfig":"39"},{"size":5141,"mtime":1619642245986,"results":"40","hashOfConfig":"39"},{"size":164,"mtime":1619081029908,"results":"41","hashOfConfig":"39"},{"size":4269,"mtime":1623085676074,"results":"42","hashOfConfig":"39"},{"size":538,"mtime":1619082122146,"results":"43","hashOfConfig":"39"},{"size":8739,"mtime":1622178922738,"results":"44","hashOfConfig":"39"},{"size":5092,"mtime":1622101335970,"results":"45","hashOfConfig":"39"},{"size":2576,"mtime":1622081262498,"results":"46","hashOfConfig":"39"},{"size":9767,"mtime":1622188339687,"results":"47","hashOfConfig":"39"},{"size":11361,"mtime":1623058584851,"results":"48","hashOfConfig":"39"},{"size":3603,"mtime":1622159487720,"results":"49","hashOfConfig":"39"},{"size":6583,"mtime":1622086792553,"results":"50","hashOfConfig":"39"},{"size":17155,"mtime":1622187561382,"results":"51","hashOfConfig":"39"},{"size":19441,"mtime":1622181350232,"results":"52","hashOfConfig":"39"},{"size":20145,"mtime":1622182811461,"results":"53","hashOfConfig":"39"},{"size":348,"mtime":1619899400108,"results":"54","hashOfConfig":"39"},{"size":8174,"mtime":1619110603994,"results":"55","hashOfConfig":"39"},{"size":1662,"mtime":1621331699498,"results":"56","hashOfConfig":"39"},{"size":6355,"mtime":1622781593604,"results":"57","hashOfConfig":"39"},{"size":132,"mtime":1619082457302,"results":"58","hashOfConfig":"39"},{"size":2718,"mtime":1619081029920,"results":"59","hashOfConfig":"39"},{"size":859,"mtime":1619081029921,"results":"60","hashOfConfig":"39"},{"size":20666,"mtime":1622182229256,"results":"61","hashOfConfig":"39"},{"size":200,"mtime":1619081920602,"results":"62","hashOfConfig":"39"},{"size":4390,"mtime":1620125079976,"results":"63","hashOfConfig":"39"},{"size":2346,"mtime":1621543688165,"results":"64","hashOfConfig":"39"},{"size":1040,"mtime":1619081967816,"results":"65","hashOfConfig":"39"},{"size":2081,"mtime":1622112933245,"results":"66","hashOfConfig":"39"},{"size":1921,"mtime":1623058578925,"results":"67","hashOfConfig":"39"},{"size":60,"mtime":1619081029909,"results":"68","hashOfConfig":"39"},{"size":4664,"mtime":1623059248786,"results":"69","hashOfConfig":"39"},{"size":16523,"mtime":1623085344882,"results":"70","hashOfConfig":"39"},{"size":16089,"mtime":1623037325495,"results":"71","hashOfConfig":"39"},{"size":16543,"mtime":1623037409392,"results":"72","hashOfConfig":"39"},{"size":12810,"mtime":1623037936191,"results":"73","hashOfConfig":"39"},{"size":7326,"mtime":1623131923124,"results":"74","hashOfConfig":"39"},{"size":20263,"mtime":1623132345044,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1hq94k9",{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\index.js",[],["170","171","172","173","174"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\serviceWorker.js",["175","176","177","178","179"],"/* eslint-disable no-param-reassign */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\index.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\App.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js",["180","181","182","183","184"],"/* eslint-disable max-len */\r\n/* eslint-disable no-loop-func */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PatientList() {\r\n  const [patients, setPatients] = useState();\r\n  const [showTable, setShowTable] = useState(false);\r\n  // state to check process\r\n  const [doctorDiagnosis, setDoctorDiagnosis] = useState([]);\r\n  const [biochemicalCheck, setBioChemicalCheck] = useState([]);\r\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState([]);\r\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState([]);\r\n  const [resultCheck, setResultCheck] = useState([]);\r\n\r\n  let count = 0;\r\n  let tempCount = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/patients/getAllPatients').then((response) => {\r\n      if (response.data.success) {\r\n        setPatients(response.data.patients);\r\n      } else {\r\n        setShowTable(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (patients) {\r\n      for (let i = 0; i < patients.length; i += 1) {\r\n        const values = {\r\n          patientId: patients[i].patientId,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/getDiagnosisById', values).then((response) => {\r\n          if (response.data.success) {\r\n            if (response.data.doc[0].doctorDiagnosis !== '') {\r\n              doctorDiagnosis[tempCount] = response.data.doc[0].doctorDiagnosis;\r\n\r\n              if (response.data.doc[0].biochemical === 'done') {\r\n                biochemicalCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].biochemical === 'pending') {\r\n                biochemicalCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].biochemical === '') {\r\n                biochemicalCheck[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].hematologyAndImmunology === 'done') {\r\n                hematologyAndImmunologyCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].hematologyAndImmunology === 'pending') {\r\n                hematologyAndImmunologyCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].hematologyAndImmunology === '') {\r\n                hematologyAndImmunologyCheck[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].fungusAndParasite === 'done') {\r\n                fungusAndParasiteCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].fungusAndParasite === 'pending') {\r\n                fungusAndParasiteCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].fungusAndParasite === '') {\r\n                fungusAndParasiteCheck[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].result === 'done') {\r\n                resultCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].result === 'pending') {\r\n                resultCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].result === '') {\r\n                resultCheck[tempCount] = 'Không';\r\n              }\r\n            } else {\r\n              doctorDiagnosis[tempCount] = 'Chưa chẩn đoán';\r\n              fungusAndParasiteCheck[tempCount] = 'Chưa xử lý';\r\n              biochemicalCheck[tempCount] = 'Chưa xử lý';\r\n              hematologyAndImmunologyCheck[tempCount] = 'Chưa xử lý';\r\n              resultCheck[tempCount] = 'Chưa xử lý';\r\n            }\r\n\r\n            tempCount += 1;\r\n            if (tempCount === patients.length) {\r\n              setShowTable(true);\r\n            }\r\n          } else {\r\n            // do something\r\n            setShowTable(false);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [patients, showTable]);\r\n\r\n  const showBiochemicalResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return (<a href={`/laboratoryStaffBoard/biochemical/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/biochemicalForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  const showFungusResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return (<a href={`/laboratoryStaffBoard/fungusAndParasite/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/fungusForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  const showHematologyResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return (<a href={`/laboratoryStaffBoard/hematologyAndImmunology/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/hematologyForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  const showResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return (<a href={`/laboratoryStaffBoard/result/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/resultForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-5 text-center\">\r\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN TIẾP NHẬN</h3>\r\n      </div>\r\n      {patients && patients.length > 0 && showTable ? (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th scope=\"col\" style={{ width: '2%' }}>\r\n                STT\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '12%' }}>\r\n                Họ tên\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                Mã bệnh nhân\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '6%' }}>\r\n                Ngày sinh\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                Giới tính\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Chẩn đoán của bác sĩ\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần xét nghiệm sinh hóa máu\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần xét nghiệm nấm - ký sinh trùng\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần xét nghiệm huyết học - miễn dịch\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Xét nghiệm tổng quát\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n                patients.map((patient) => {\r\n                  const fulltime = patient.birthDate;\r\n                  const day = fulltime.substring(8, 10);\r\n                  const month = fulltime.substring(5, 7);\r\n                  const year = fulltime.substring(0, 4);\r\n                  const time = `${day}/${month}/${year}`;\r\n                  count += 1;\r\n                  const pCount = count - 1;\r\n\r\n                  return ((\r\n                    <tr>\r\n                      <td className=\"text-center\">{count}</td>\r\n                      <td className=\"text-center\">{patient.name}</td>\r\n                      <td className=\"text-center\">{patient.patientId}</td>\r\n                      <td className=\"text-center\">{time}</td>\r\n                      <td className=\"text-center\">{patient.gender}</td>\r\n                      <td className=\"text-center\">{doctorDiagnosis[pCount]}</td>\r\n                      <td className=\"text-center\">\r\n                        {showBiochemicalResult(biochemicalCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                        {showFungusResult(fungusAndParasiteCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                        {showHematologyResult(hematologyAndImmunologyCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                        {showResult(resultCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                    </tr>\r\n                  ));\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js",["185","186"],"/* eslint-disable max-len */\r\n/* eslint-disable no-loop-func */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PatientList() {\r\n  const [patients, setPatients] = useState();\r\n  const [showTable, setShowTable] = useState(false);\r\n  const [imagingState, setImagingState] = useState([]);\r\n  const [doctorDiagnosis, setDoctorDiagnosis] = useState([]);\r\n\r\n  let count = 0;\r\n  let tempCount = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/patients/getAllPatients').then((response) => {\r\n      if (response.data.success) {\r\n        setPatients(response.data.patients);\r\n      } else {\r\n        setShowTable(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (patients) {\r\n      for (let i = 0; i < patients.length; i += 1) {\r\n        const values = {\r\n          patientId: patients[i].patientId,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/getDiagnosisById', values).then((response) => {\r\n          if (response.data.success) {\r\n            if (response.data.doc[0].doctorDiagnosis !== '') {\r\n              doctorDiagnosis[tempCount] = response.data.doc[0].doctorDiagnosis;\r\n\r\n              if (response.data.doc[0].imaging === 'done') {\r\n                imagingState[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].biochemical === 'pending') {\r\n                imagingState[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].biochemical === '') {\r\n                imagingState[tempCount] = 'Không';\r\n              }\r\n            } else {\r\n              doctorDiagnosis[tempCount] = 'Chưa chẩn đoán';\r\n              imagingState[tempCount] = 'Chưa xử lý';\r\n            }\r\n\r\n            tempCount += 1;\r\n            if (tempCount === patients.length) {\r\n              setShowTable(true);\r\n            }\r\n          } else {\r\n            // do something\r\n            setShowTable(false);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [patients, showTable]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-5 text-center\">\r\n        <h3 className=\"mb-3\">HƯỚNG DẪN</h3>\r\n        <p>Ấn vào tên bệnh nhân cần chụp chẩn đoán hình ảnh để tiến hành</p>\r\n      </div>\r\n      <div className=\"p-5 text-center\">\r\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN TIẾP NHẬN</h3>\r\n      </div>\r\n      {patients && patients.length > 0 && showTable ? (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                STT\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '15%' }}>\r\n                Họ tên\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                Mã bệnh nhân\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Ngày sinh\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                Giới tính\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Chẩn đoán của bác sĩ\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần chụp chẩn đoán hình ảnh\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n                 patients.map((patient) => {\r\n                   const fulltime = patient.birthDate;\r\n                   const day = fulltime.substring(8, 10);\r\n                   const month = fulltime.substring(5, 7);\r\n                   const year = fulltime.substring(0, 4);\r\n                   const time = `${day}/${month}/${year}`;\r\n                   count += 1;\r\n                   const pCount = count - 1;\r\n\r\n                   return ((\r\n                     <tr>\r\n                       <td className=\"text-center\">{count}</td>\r\n                       <td className=\"text-center\">{imagingState[pCount] !== 'Đã xong' && imagingState[pCount] !== 'Chưa xử lý' ? (<a href={`/imagingStaffBoard/${patient.patientId}`} style={{ textDecoration: 'none' }}>{patient.name}</a>) : (patient.name)}</td>\r\n                       <td className=\"text-center\">{patient.patientId}</td>\r\n                       <td className=\"text-center\">{time}</td>\r\n                       <td className=\"text-center\">{patient.gender}</td>\r\n                       <td className=\"text-center\">{doctorDiagnosis[pCount]}</td>\r\n                       <td className=\"text-center\">{imagingState[pCount] === 'Đã xong' ? (<a href={`/imageProcessing/${patient.patientId}`} style={{ textDecoration: 'none' }}>{imagingState[pCount]}</a>) : (imagingState[pCount])}</td>\r\n                     </tr>\r\n                   ));\r\n                 })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\r\n        </div>\r\n      ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\AdminBoard\\PatientList.js",["187"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PatientList() {\r\n  const [patients, setPatients] = useState();\r\n  const [showTable, setShowTable] = useState(false);\r\n  let count = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/patients/getAllPatients').then((response) => {\r\n      if (response.data.success) {\r\n        setShowTable(true);\r\n        setPatients(response.data.patients);\r\n      } else {\r\n        setShowTable(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-5 text-center\">\r\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN</h3>\r\n      </div>\r\n      {patients && patients.length > 0 && setShowTable && (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th scope=\"col\">\r\n                STT\r\n              </th>\r\n              <th scope=\"col\">\r\n                Họ tên\r\n              </th>\r\n              <th scope=\"col\">\r\n                Mã bệnh nhân\r\n              </th>\r\n              <th scope=\"col\">\r\n                Ngày sinh\r\n              </th>\r\n              <th scope=\"col\">\r\n                Giới tính\r\n              </th>\r\n              <th scope=\"col\">\r\n                Địa chỉ\r\n              </th>\r\n              <th scope=\"col\">\r\n                Đối tượng\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n                patients.map((patient) => {\r\n                  const fulltime = patient.birthDate;\r\n                  const day = fulltime.substring(8, 10);\r\n                  const month = fulltime.substring(5, 7);\r\n                  const year = fulltime.substring(0, 4);\r\n                  const time = `${day}/${month}/${year}`;\r\n                  count += 1;\r\n                  return ((\r\n                    <tr>\r\n                      <td className=\"text-center\">{count}</td>\r\n                      <td className=\"text-center\">{patient.name}</td>\r\n                      <td className=\"text-center\">{patient.patientId}</td>\r\n                      <td className=\"text-center\">{time}</td>\r\n                      <td className=\"text-center\">{patient.gender}</td>\r\n                      <td className=\"text-center\">{patient.address}</td>\r\n                      <td className=\"text-center\">{patient.patientType}</td>\r\n                    </tr>\r\n                  ));\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js",["188","189","190","191","192","193"],"/* eslint-disable max-len */\r\n/* eslint-disable no-loop-func */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PatientList() {\r\n  const [patients, setPatients] = useState();\r\n  const [showTable, setShowTable] = useState(false);\r\n  // state to check process\r\n  const [imagingState, setImagingState] = useState([]);\r\n  const [biochemicalCheck, setBioChemicalCheck] = useState([]);\r\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState([]);\r\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState([]);\r\n  const [resultCheck, setResultCheck] = useState([]);\r\n  const [doneDiagnosis, setDoneDiagnosis] = useState([]);\r\n\r\n  let count = 0;\r\n  let tempCount = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/patients/getAllPatients').then((response) => {\r\n      if (response.data.success) {\r\n        setPatients(response.data.patients);\r\n      } else {\r\n        setShowTable(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (patients) {\r\n      for (let i = 0; i < patients.length; i += 1) {\r\n        const values = {\r\n          patientId: patients[i].patientId,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/getDiagnosisById', values).then((response) => {\r\n          if (response.data.success) {\r\n            if (response.data.doc[0].doctorDiagnosis !== '') {\r\n              doneDiagnosis[tempCount] = true;\r\n              if (response.data.doc[0].imaging === 'done') {\r\n                imagingState[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].biochemical === 'pending') {\r\n                imagingState[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].biochemical === '') {\r\n                imagingState[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].biochemical === 'done') {\r\n                biochemicalCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].biochemical === 'pending') {\r\n                biochemicalCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].biochemical === '') {\r\n                biochemicalCheck[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].hematologyAndImmunology === 'done') {\r\n                hematologyAndImmunologyCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].hematologyAndImmunology === 'pending') {\r\n                hematologyAndImmunologyCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].hematologyAndImmunology === '') {\r\n                hematologyAndImmunologyCheck[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].fungusAndParasite === 'done') {\r\n                fungusAndParasiteCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].fungusAndParasite === 'pending') {\r\n                fungusAndParasiteCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].fungusAndParasite === '') {\r\n                fungusAndParasiteCheck[tempCount] = 'Không';\r\n              }\r\n\r\n              if (response.data.doc[0].result === 'done') {\r\n                resultCheck[tempCount] = 'Đã xong';\r\n              } else if (response.data.doc[0].result === 'pending') {\r\n                resultCheck[tempCount] = 'Có';\r\n              } else if (response.data.doc[0].result === '') {\r\n                resultCheck[tempCount] = 'Không';\r\n              }\r\n            } else {\r\n              doneDiagnosis[tempCount] = false;\r\n              imagingState[tempCount] = 'Chưa xử lý';\r\n              fungusAndParasiteCheck[tempCount] = 'Chưa xử lý';\r\n              biochemicalCheck[tempCount] = 'Chưa xử lý';\r\n              hematologyAndImmunologyCheck[tempCount] = 'Chưa xử lý';\r\n              resultCheck[tempCount] = 'Chưa xử lý';\r\n            }\r\n            tempCount += 1;\r\n            if (tempCount === patients.length) {\r\n              setShowTable(true);\r\n            }\r\n          } else {\r\n            // do something\r\n            setShowTable(false);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [patients, showTable]);\r\n\r\n  const showBiochemicalResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return ('Có');\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/biochemicalForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  const showFungusResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return ('Có');\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/fungusForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  const showHematologyResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return ('Có');\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/hematologyForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  const showResult = (value, id) => {\r\n    if (value === 'Có') {\r\n      return ('Có');\r\n    } if (value === 'Đã xong') {\r\n      return (<a href={`/resultForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\r\n    }\r\n    return ('Không');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3 className=\"mb-3\">HƯỚNG DẪN:</h3>\r\n        <p>\r\n          1. Chọn bệnh nhân cần chẩn đoán (Tên bệnh nhân được in xanh)\r\n          <br />\r\n          2. Thực hiện khám và đưa ra chẩn đoán sơ bộ ban đầu\r\n          <br />\r\n          3. Sau khi chẩn đoán, theo dõi trạng thái xét nghiệm và các chẩn đoán hình ảnh của bệnh nhân\r\n          <br />\r\n          4. Có thể ấn vào xem chi tiết thông tin về các xét nghiệm và các ảnh chụp chẩn đoán của bệnh nhân nếu có trạng thái 'Đã xong'\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"p-5 text-center\">\r\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN TIẾP NHẬN</h3>\r\n      </div>\r\n      {patients && patients.length > 0 && showTable ? (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th scope=\"col\" style={{ width: '2%' }}>\r\n                STT\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '12%' }}>\r\n                Họ tên\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                Mã bệnh nhân\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '6%' }}>\r\n                Ngày sinh\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '5%' }}>\r\n                Giới tính\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần chụp chẩn đoán hình ảnh\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần xét nghiệm sinh hóa máu\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần xét nghiệm nấm - ký sinh trùng\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Cần xét nghiệm huyết học - miễn dịch\r\n              </th>\r\n              <th scope=\"col\" style={{ width: '10%' }}>\r\n                Phiếu xét nghiệm tổng quan\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n                patients.map((patient) => {\r\n                  const fulltime = patient.birthDate;\r\n                  const day = fulltime.substring(8, 10);\r\n                  const month = fulltime.substring(5, 7);\r\n                  const year = fulltime.substring(0, 4);\r\n                  const time = `${day}/${month}/${year}`;\r\n                  count += 1;\r\n                  const pCount = count - 1;\r\n\r\n                  return ((\r\n                    <tr>\r\n                      <td className=\"text-center\">{count}</td>\r\n                      <td className=\"text-center\">{doneDiagnosis[pCount] ? (`${patient.name} (Đã chẩn đoán)`) : (<a href={`/doctorBoard/${patient.patientId}`} style={{ textDecoration: 'none' }}>{patient.name}</a>)}</td>\r\n                      <td className=\"text-center\">{patient.patientId}</td>\r\n                      <td className=\"text-center\">{time}</td>\r\n                      <td className=\"text-center\">{patient.gender}</td>\r\n                      <td className=\"text-center\">{imagingState[pCount] === 'Đã xong' ? (<a href={`/imageProcessing/${patient.patientId}`} style={{ textDecoration: 'none' }}>Đã xong</a>) : (`${imagingState[pCount]}`)}</td>\r\n                      <td className=\"text-center\">\r\n                        {showBiochemicalResult(biochemicalCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                        {showFungusResult(fungusAndParasiteCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                        {showHematologyResult(hematologyAndImmunologyCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                      <td className=\"text-center\">\r\n                        {showResult(resultCheck[pCount], patient.patientId)}\r\n                      </td>\r\n                    </tr>\r\n                  ));\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorBoard.js",["194","195","196"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js",["197","198"],"/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable no-lonely-if */\r\n/* eslint-disable no-console */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport FileUpload from '../../utils/FileUpload';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction ImagingStaffBoard(props) {\r\n  const pId = props.match.params.id;\r\n\r\n  const history = useHistory();\r\n  const [images, setImages] = useState([]);\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (images && images.length > 0) {\r\n      const imagesArr = [];\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      images\r\n        // eslint-disable-next-line array-callback-return\r\n        && images.map((item) => {\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${item}`,\r\n            thumbnail: `http://localhost:5000/${item}`,\r\n          });\r\n        });\r\n      setImagesArray(imagesArr);\r\n    }\r\n  }, [images]);\r\n\r\n  const updateImages = (newImage) => {\r\n    setImages(newImage);\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setSuccessful(false);\r\n    if (images.length !== []) {\r\n      const dataToSubmit = {\r\n        pId,\r\n        images,\r\n      };\r\n\r\n      axios.post('/api/diagnosis/imagingDiagnosis/saveImage', dataToSubmit).then((response) => {\r\n        if (response.data.success) {\r\n          // alert('Save images successfully');\r\n          axios.post('/api/diagnosis/imagingDiagnosis/uploadImage', dataToSubmit).then((res) => {\r\n            if (res.data.success) {\r\n              // alert('Update images successfully');\r\n              history.push(`/imageProcessing/${pId}`);\r\n            } else {\r\n              // do something\r\n            }\r\n          });\r\n        } else {\r\n          alert('Failed to update information');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '90%', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Tải ảnh chụp chẩn đoán của bệnh nhân</Title>\r\n      </div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group form-row justify-content-center\">\r\n          <label\r\n            style={{ display: 'inline-block', marginTop: 10 }}\r\n            className=\"col-md-1\"\r\n          >\r\n            Mã BN:\r\n          </label>\r\n          {pId && (\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-md-1\"\r\n              name=\"patientId\"\r\n              value={pId}\r\n              disabled\r\n            />\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        {imagesArray && imagesArray.length > 0 && (\r\n          <div className=\"form-row justify-content-center\">\r\n            <ImageGallery items={imagesArray} />\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary btn-block form-group col-md-3\">\r\n            Tiến hành phân tích ảnh\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagingStaffBoard;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\AdminBoard\\AdminBoard.js",["199","200","201"],"/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction AdminBoard(props) {\r\n  const history = useHistory();\r\n\r\n  const [patientId, setPatientId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [birthDate, setBirthDate] = useState(new Date());\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState('');\r\n  const [patientType, setPatientType] = useState('');\r\n\r\n  const onChangePatientId = (e) => {\r\n    setPatientId(e.target.value);\r\n  };\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeDate = (value) => {\r\n    setBirthDate(value);\r\n  };\r\n\r\n  const onChangeAddress = (e) => {\r\n    setAddress(e.target.value);\r\n  };\r\n\r\n  const onChangeGender = (e) => {\r\n    setGender(e.target.value);\r\n  };\r\n\r\n  const onChangePatientType = (e) => {\r\n    setPatientType(e.target.value);\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (checkAllTableField) {\r\n      const values = {\r\n        writer: props.user.userData._id,\r\n        patientId,\r\n        name,\r\n        birthDate,\r\n        gender,\r\n        address,\r\n        patientType,\r\n        doctor: '',\r\n        department: '',\r\n      };\r\n      axios.post('/api/patients/uploadInfo', values).then((response) => {\r\n        if (response.data.success) {\r\n          const data = {\r\n            patientId,\r\n          };\r\n          axios.post('/api/diagnosis/putDiagnosis', data).then((res) => {\r\n            if (res.data.success) {\r\n              history.push('/patientsList');\r\n            } else {\r\n              alert('Failed to put primary information');\r\n            }\r\n          });\r\n        } else {\r\n          alert('Failed to upload information');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex', flexDirection: 'column', justifyContent: 'center',\r\n    }}\r\n    >\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Nhập thông tin bệnh nhân</Title>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"patientId\">Mã BN:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"patientId\"\r\n                value={patientId}\r\n                onChange={onChangePatientId}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={onChangeName}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"datebirth\">Năm sinh:</label>\r\n              <br />\r\n              <DatePicker\r\n                className=\"form-control\"\r\n                mode=\"date\"\r\n                format=\"YYYY-MM-DD\"\r\n                selected={birthDate}\r\n                onChange={onChangeDate}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                onChange={onChangeGender}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn giới tính bệnh nhân</option>\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={onChangeAddress}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                onChange={onChangePatientType}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn đối tượng</option>\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <button className=\"btn btn-primary btn-block form-group col-md-2\">\r\n              Thêm thông tin bệnh nhân\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful ? 'alert alert-success' : 'alert alert-danger'\r\n              }\r\n              role=\"alert\"\r\n              style={{ textAlign: 'center', margin: 10 }}\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminBoard;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js",["202","203","204","205","206","207","208","209","210"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction Result(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [normalRate, setNormalRate] = useState([]);\r\n  const [unit, setUnit] = useState([]);\r\n  const [note, setNote] = useState([]);\r\n  const [machine, setMachine] = useState([]);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n          setDoctor(response.data.patient[0].doctor);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeResult = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    result[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeNormalRate = (e) => {\r\n    const cntStr = e.target.name.substring(10);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    normalRate[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    unit[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeNote = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    note[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeMachine = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    machine[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = result[tempCount - 1] ? result[tempCount - 1] : '';\r\n      const value3 = normalRate[tempCount - 1] ? normalRate[tempCount - 1] : '';\r\n      const value4 = unit[tempCount - 1] ? unit[tempCount - 1] : '';\r\n      const value5 = note[tempCount - 1] ? note[tempCount - 1] : '';\r\n      const value6 = machine[tempCount - 1] ? machine[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell1.onchange = onChangeTestName;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"result${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell2.onchange = onChangeResult;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"normalrate${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell3.onchange = onChangeNormalRate;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"unit${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell4.onchange = onChangeUnit;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"note${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell5.onchange = onChangeNote;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"machine${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell6.onchange = onChangeMachine;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      if (checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          diagnosis,\r\n          testName,\r\n          result,\r\n          normalRate,\r\n          unit,\r\n          note,\r\n          machine,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/result/saveResultForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                result: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateResultDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/resultForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n          <div>\r\n            {/* form header */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU KẾT QUẢ XÉT NGHIỆM</b>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <div>\r\n                  <label htmlFor=\"patientId\">\r\n                    Mã BN:\r\n                    {' '}\r\n                    {patientId}\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Ngày NM:\r\n                    {' '}\r\n                    {date.substring(0, 10)}\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Giờ NM:\r\n                    {' '}\r\n                    {date.substring(11)}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"birthDate\"\r\n                  value={birthDate}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"gender\">Giới tính:</label>\r\n                <select\r\n                  name=\"gender\"\r\n                  className=\"form-control\"\r\n                  value={gender}\r\n                  disabled\r\n                >\r\n                  <option value=\"Nam\">Nam</option>\r\n                  <option value=\"Nữ\">Nữ</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"diagnosis\"\r\n                  value={diagnosis}\r\n                  onChange={onChangeDiagnosis}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"number\">Số BHYT:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"number\"\r\n                  value=\"\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"patientType\">Đối tượng:</label>\r\n                <select\r\n                  name=\"patientType\"\r\n                  className=\"form-control\"\r\n                  value={patientType}\r\n                  disabled\r\n                >\r\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"department\">Khoa phòng:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"department\"\r\n                  value={department}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"doctor\">Bác sĩ chỉ định:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"doctor\"\r\n                  value={doctor}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"getPerson\">Người lấy mẫu:</label>\r\n              </div>\r\n\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"get\">\r\n                  Thời gian lấy mẫu:\r\n                  {date.substring(11)}\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                  {date.substring(0, 10)}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"receivePerson\">Người nhận mẫu: Administrator</label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"receive\">\r\n                  {' '}\r\n                  Thời gian nhận mẫu:\r\n                  {date.substring(11)}\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                  {date.substring(0, 10)}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '10%' }}>\r\n                    TÊN XÉT NGHIỆM\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '10%' }}>\r\n                    KẾT QUẢ\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '15%' }}>\r\n                    TRỊ SỐ BÌNH THƯỜNG\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    ĐƠN VỊ\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    GHI CHÚ\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    MÁY XÉT NGHIỆM\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                {/* add row button */}\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"text-center\">\r\n                    <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                      <i className=\"bi bi-plus-square\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                        </svg>\r\n                        {' '}\r\n                      </i>\r\n                      <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                        Thêm dòng\r\n                      </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js",["211","212","213","214","215","216","217","218","219","220","221"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction FungusAndParasite(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  // const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const [caseType, setCaseType] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n  const [checkForm, setCheckForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeCaseType = (e) => {\r\n    setCaseType(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeQuantity = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    quantity[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePrice = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    price[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    amount[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeInsurance = (e) => {\r\n    const cntStr = e.target.name.substring(9);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    insurance[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePayment = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    payment[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeDiff = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    diff[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeTotal = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    total[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\r\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\r\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\r\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\r\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\r\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\r\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell2.onchange = onChangeTestName;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell3.onchange = onChangeQuantity;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell4.onchange = onChangePrice;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell5.onchange = onChangeAmount;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell6.onchange = onChangeInsurance;\r\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell7.onchange = onChangePayment;\r\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\r\n      newCell8.onchange = onChangeDiff;\r\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\r\n      newCell9.onchange = onChangeTotal;\r\n    }\r\n  };\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (checkAllTableField) {\r\n      if (amount.length >= 1) {\r\n        setAmountSum(calculateSum(amount));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (checkAllTableField) {\r\n      if (payment.length >= 1) {\r\n        setPaymentSum(calculateSum(payment));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (checkAllTableField) {\r\n      if (total.length >= 1) {\r\n        setTotalSum(calculateSum(total));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      setCheckForm(true);\r\n      // if true then save to database\r\n\r\n      if (checkForm && checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          caseType,\r\n          diagnosis,\r\n          testName,\r\n          quantity,\r\n          price,\r\n          amount,\r\n          insurance,\r\n          payment,\r\n          diff,\r\n          total,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/fungusAndParasiteDiagnosis/saveFungusAndParasiteForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                fungusAndParasite: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateFungusDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/fungusForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n        <div>\r\n          {/* form header */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-2\">\r\n              <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n            </div>\r\n            <div className=\"form-group col-md-8\">\r\n              <p>\r\n                <b>\r\n                  Bệnh viện Da liễu Trung ương\r\n                  <br />\r\n                  15A Phương Mai - Đống Đa - Hà Nội\r\n                  <br />\r\n                  Website:\r\n                  {' '}\r\n                  <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                    http://dalieu.vn\r\n                  </a>\r\n                </b>\r\n              </p>\r\n              <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                <b>PHIẾU NẤM - KÝ SINH TRÙNG</b>\r\n              </p>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Thường\"\r\n                    required\r\n                  />\r\n                  Thường\r\n                </div>\r\n\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Cấp cứu\"\r\n                    required\r\n                  />\r\n                  Cấp cứu\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"patientId\">\r\n                Mã BN:\r\n                {' '}\r\n                {patientId}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n            <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\r\n          </div>\r\n\r\n          {/* form fields */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"birthDate\"\r\n                value={birthDate}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                disabled\r\n              >\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"address\">Địa chỉ:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              value={address}\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                disabled\r\n              >\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-8\">\r\n              <label htmlFor=\"department\">Khoa phòng:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"department\"\r\n                value={department}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"diagnosis\"\r\n              value={diagnosis}\r\n              onChange={onChangeDiagnosis}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* TODO: add rows to table */}\r\n          <table className=\"table table-bordered\" id=\"myTable\">\r\n            <thead>\r\n              <tr style={{ textAlign: 'center' }}>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  STT\r\n                  <br />\r\n                  {' '}\r\n                  (1)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '25%' }}>\r\n                  Tên xét nghiệm\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (2)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  S.L\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (3)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Đơn giá\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (4)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Thành tiền\r\n                  <br />\r\n                  {' '}\r\n                  (5)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Bảo hiểm\r\n                  <br />\r\n                  {' '}\r\n                  (6)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN chi trả\r\n                  <br />\r\n                  {' '}\r\n                  (7)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Chênh lệch\r\n                  <br />\r\n                  {' '}\r\n                  (8)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN phải trả\r\n                  <br />\r\n                  {' '}\r\n                  (7+8)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody />\r\n            <tfoot>\r\n              {/* add row button */}\r\n              <tr>\r\n                <td colSpan=\"9\" className=\"text-center\">\r\n                  <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                    <i className=\"bi bi-plus-square\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                      </svg>\r\n                      {' '}\r\n                    </i>\r\n                    <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                      Thêm dòng\r\n                    </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {/* TODO: complete function to count total amount */}\r\n              <tr>\r\n                <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Tổng\r\n                </td>\r\n                <td className=\"text-center\">\r\n                  {amountSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {paymentSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {totalSum}\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          {/* TODO: update time realtime */}\r\n          <div className=\"form-row\">\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                Chỉ định ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                In phiếu ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n              <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                BÁC SĨ ĐIỀU TRỊ\r\n              </p>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FungusAndParasite;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js",["222","223","224","225","226","227","228","229","230","231","232"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction HematologyAndImmunology(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  // const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const [caseType, setCaseType] = useState();\r\n  const [initialSample, setInitialSample] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n  const [checkForm, setCheckForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeCaseType = (e) => {\r\n    setCaseType(e.target.value);\r\n  };\r\n\r\n  const onChangeInitialSample = (e) => {\r\n    setInitialSample(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeQuantity = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    quantity[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePrice = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    price[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    amount[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeInsurance = (e) => {\r\n    const cntStr = e.target.name.substring(9);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    insurance[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePayment = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    payment[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeDiff = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    diff[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeTotal = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    total[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\r\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\r\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\r\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\r\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\r\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\r\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell2.onchange = onChangeTestName;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell3.onchange = onChangeQuantity;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell4.onchange = onChangePrice;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell5.onchange = onChangeAmount;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell6.onchange = onChangeInsurance;\r\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell7.onchange = onChangePayment;\r\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\r\n      newCell8.onchange = onChangeDiff;\r\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\r\n      newCell9.onchange = onChangeTotal;\r\n    }\r\n  };\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (checkAllTableField) {\r\n      if (amount.length >= 1) {\r\n        setAmountSum(calculateSum(amount));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (checkAllTableField) {\r\n      if (payment.length >= 1) {\r\n        setPaymentSum(calculateSum(payment));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (checkAllTableField) {\r\n      if (total.length >= 1) {\r\n        setTotalSum(calculateSum(total));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      setCheckForm(true);\r\n      // if true then save to database\r\n\r\n      if (checkForm && checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          initialSample,\r\n          caseType,\r\n          diagnosis,\r\n          testName,\r\n          quantity,\r\n          price,\r\n          amount,\r\n          insurance,\r\n          payment,\r\n          diff,\r\n          total,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/hematologyDiagnosis/saveHematologyForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                hematologyAndImmunology: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateHematologyDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/hematologyForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n        <div>\r\n          {/* form header */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-2\">\r\n              <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n            </div>\r\n            <div className=\"form-group col-md-8\">\r\n              <p>\r\n                <b>\r\n                  Bệnh viện Da liễu Trung ương\r\n                  <br />\r\n                  15A Phương Mai - Đống Đa - Hà Nội\r\n                  <br />\r\n                  Website:\r\n                  {' '}\r\n                  <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                    http://dalieu.vn\r\n                  </a>\r\n                </b>\r\n              </p>\r\n              <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                <b>PHIẾU HUYẾT HỌC - MIỄN DỊCH</b>\r\n              </p>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Thường\"\r\n                    required\r\n                  />\r\n                  Thường\r\n                </div>\r\n\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Cấp cứu\"\r\n                    required\r\n                  />\r\n                  Cấp cứu\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"patientId\">\r\n                Mã BN:\r\n                {' '}\r\n                {patientId}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n            <div className=\"form-group row justify-content-center\">\r\n              <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\r\n                Mẫu ban đầu:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-md-2\"\r\n                name=\"initialSample\"\r\n                value={initialSample}\r\n                onChange={onChangeInitialSample}\r\n                required\r\n              />\r\n            </div>\r\n            <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\r\n          </div>\r\n\r\n          {/* form fields */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"birthDate\"\r\n                value={birthDate}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                disabled\r\n              >\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"address\">Địa chỉ:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              value={address}\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                disabled\r\n              >\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-8\">\r\n              <label htmlFor=\"department\">Khoa phòng:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"department\"\r\n                value={department}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"diagnosis\"\r\n              value={diagnosis}\r\n              onChange={onChangeDiagnosis}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* TODO: add rows to table */}\r\n          <table className=\"table table-bordered\" id=\"myTable\">\r\n            <thead>\r\n              <tr style={{ textAlign: 'center' }}>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  STT\r\n                  <br />\r\n                  {' '}\r\n                  (1)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '25%' }}>\r\n                  Tên xét nghiệm\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (2)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  S.L\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (3)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Đơn giá\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (4)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Thành tiền\r\n                  <br />\r\n                  {' '}\r\n                  (5)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Bảo hiểm\r\n                  <br />\r\n                  {' '}\r\n                  (6)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN chi trả\r\n                  <br />\r\n                  {' '}\r\n                  (7)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Chênh lệch\r\n                  <br />\r\n                  {' '}\r\n                  (8)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN phải trả\r\n                  <br />\r\n                  {' '}\r\n                  (7+8)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody />\r\n            <tfoot>\r\n              {/* add row button */}\r\n              <tr>\r\n                <td colSpan=\"9\" className=\"text-center\">\r\n                  <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                    <i className=\"bi bi-plus-square\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                      </svg>\r\n                      {' '}\r\n                    </i>\r\n                    <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                      Thêm dòng\r\n                    </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {/* TODO: complete function to count total amount */}\r\n              <tr>\r\n                <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Tổng\r\n                </td>\r\n                <td className=\"text-center\">\r\n                  {amountSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {paymentSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {totalSum}\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          {/* TODO: update time realtime */}\r\n          <div className=\"form-row\">\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                Chỉ định ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                In phiếu ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n              <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                BÁC SĨ ĐIỀU TRỊ\r\n              </p>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HematologyAndImmunology;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["233","234","235"],"/* eslint-disable no-shadow */\r\nimport React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Input, Button, Select,\r\n} from 'antd';\r\nimport { registerUser } from '../../../_actions/user_actions';\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        firstName: Yup.string().required('First name is required'),\r\n        lastName: Yup.string().required('Last name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm password is required'),\r\n        role: Yup.string().required('Role is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          const dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            firstname: values.firstName,\r\n            lastname: values.lastName,\r\n            role: values.role,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push('/login');\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: '450px' }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"First Name\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  placeholder=\"Enter your first name\"\r\n                  type=\"text\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.firstName && touched.firstName\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.firstName && touched.firstName && (\r\n                  <div className=\"input-feedback\">{errors.firstName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your last name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirm password\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Role\" hasFeedback>\r\n                <Select\r\n                  id=\"role\"\r\n                  placeholder=\"Select your role\"\r\n                  value={values.role}\r\n                  onChange={(selectedOption) => handleChange('role')(selectedOption)}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.role && touched.role\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                >\r\n                  <Option value=\"admin\">Admin</Option>\r\n                  <Option value=\"doctor\">Doctor</Option>\r\n                  <Option value=\"laboratory staff\">Laboratory staff</Option>\r\n                  <Option value=\"imaging staff\">Imaging staff</Option>\r\n                </Select>\r\n                {errors.role && touched.role && (\r\n                  <div className=\"input-feedback\">{errors.role}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\NavBar.js",["236"],"import React, { useState } from 'react';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport './Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  // TODO: only show right nav bar\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: 'fixed', zIndex: 999, width: '100%' }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a\r\n          href=\"/\"\r\n          style={{ display: 'flex', justifyContent: 'space-between', textDecoration: 'none' }}\r\n        >\r\n          Trang chủ\r\n        </a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["237","238","239"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-shadow */\r\nimport React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox, Typography,\r\n} from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../../../_actions/user_actions';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = !!localStorage.getItem('rememberMe');\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem('rememberMe')\r\n    ? localStorage.getItem('rememberMe')\r\n    : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required')\r\n          .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          const dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                // set id of user to local storage\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push('/');\r\n              } else {\r\n                setFormErrorMessage(\r\n                  'Check out your email address or password again',\r\n                );\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\r\n                'Check out your email address or password again',\r\n              );\r\n              setTimeout(() => {\r\n                setFormErrorMessage('');\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p\r\n                    style={{\r\n                      color: '#ff0000bf',\r\n                      fontSize: '0.7rem',\r\n                      border: '1px solid',\r\n                      padding: '1rem',\r\n                      borderRadius: '10px',\r\n                    }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  id=\"rememberMe\"\r\n                  onChange={handleRememberMe}\r\n                  checked={rememberMe}\r\n                >\r\n                  Remember me\r\n                </Checkbox>\r\n                <a\r\n                  className=\"login-form-forgot\"\r\n                  href=\"/reset_user\"\r\n                  style={{ float: 'right' }}\r\n                >\r\n                  Forget password?\r\n                </a>\r\n                <div>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ minWidth: '100%' }}\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or\r\n                {' '}\r\n                <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["240","241"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction LandingPage() {\r\n  return <></>;\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\UserInfo\\UserInfo.js",["242","243"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Form, Input, Button, Typography,\r\n} from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst UserInfo = (props) => {\r\n  const [password, setPassword] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [firstName, setFirstName] = useState();\r\n  const [lastName, setLastName] = useState();\r\n\r\n  const onPasswordChange = (evt) => {\r\n    setPassword(evt.target.value);\r\n  };\r\n\r\n  const onEmailChange = (evt) => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const onFirstNameChange = (evt) => {\r\n    setFirstName(evt.target.value);\r\n  };\r\n\r\n  const onLastNameChange = (evt) => {\r\n    setLastName(evt.target.value);\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const values = {\r\n      userId: props.match.params.userId,\r\n      lastName,\r\n      firstName,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    axios.post('/api/users/updateInformation', values).then((response) => {\r\n      if (response.data.success) {\r\n        alert('Update information successfully');\r\n        props.history.push('/');\r\n      } else {\r\n        alert('Failed to update information');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Update Information</Title>\r\n      </div>\r\n\r\n      <form onSubmit={onSubmit} style={{ width: '800px' }}>\r\n        <Form.Item>\r\n          <label>First name:</label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter your new first name\"\r\n            value={firstName}\r\n            onChange={onFirstNameChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <label>Last name:</label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter your new last name\"\r\n            value={lastName}\r\n            onChange={onLastNameChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <label>Email:</label>\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter your new email\"\r\n            value={email}\r\n            onChange={onEmailChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <label>Password:</label>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Enter your new password\"\r\n            value={password}\r\n            onChange={onPasswordChange}\r\n          />\r\n        </Form.Item>\r\n        <Button size=\"default\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\hoc\\auth.js",["244"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { auth } from '../_actions/user_actions';\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(auth()).then((response) => {\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push('/login');\r\n          }\r\n        } else if (adminRoute && !response.payload.isAdmin) {\r\n          props.history.push('/');\r\n        } else if (option === false) {\r\n          props.history.push('/');\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent {...props} user={user} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js",["245","246","247","248","249","250","251","252","253","254","255"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction Biochemical(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  // const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const [caseType, setCaseType] = useState();\r\n  const [initialSample, setInitialSample] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n  const [checkForm, setCheckForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeCaseType = (e) => {\r\n    setCaseType(e.target.value);\r\n  };\r\n\r\n  const onChangeInitialSample = (e) => {\r\n    setInitialSample(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeQuantity = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    quantity[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePrice = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    price[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    amount[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeInsurance = (e) => {\r\n    const cntStr = e.target.name.substring(9);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    insurance[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePayment = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    payment[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeDiff = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    diff[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeTotal = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    total[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\r\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\r\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\r\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\r\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\r\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\r\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell2.onchange = onChangeTestName;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell3.onchange = onChangeQuantity;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell4.onchange = onChangePrice;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell5.onchange = onChangeAmount;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell6.onchange = onChangeInsurance;\r\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell7.onchange = onChangePayment;\r\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\r\n      newCell8.onchange = onChangeDiff;\r\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\r\n      newCell9.onchange = onChangeTotal;\r\n    }\r\n  };\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (checkAllTableField) {\r\n      if (amount.length >= 1) {\r\n        setAmountSum(calculateSum(amount));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (checkAllTableField) {\r\n      if (payment.length >= 1) {\r\n        setPaymentSum(calculateSum(payment));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (checkAllTableField) {\r\n      if (total.length >= 1) {\r\n        setTotalSum(calculateSum(total));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      setCheckForm(true);\r\n      // if true then save to database\r\n\r\n      if (checkForm && checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          initialSample,\r\n          caseType,\r\n          diagnosis,\r\n          testName,\r\n          quantity,\r\n          price,\r\n          amount,\r\n          insurance,\r\n          payment,\r\n          diff,\r\n          total,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/biochemicalDiagnosis/saveBiochemicalForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                biochemical: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateBiochemicalDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/biochemicalForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n          <div>\r\n            {/* form header */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU SINH HÓA MÁU</b>\r\n                </p>\r\n\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div\r\n                    className=\"form-check form-check-inline\"\r\n                    onChange={onChangeCaseType}\r\n                  >\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"casetype\"\r\n                      value=\"Thường\"\r\n                      required\r\n                    />\r\n                    Thường\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"form-check form-check-inline\"\r\n                    onChange={onChangeCaseType}\r\n                  >\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"casetype\"\r\n                      value=\"Cấp cứu\"\r\n                      required\r\n                    />\r\n                    Cấp cứu\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n              <div className=\"form-group row justify-content-center\">\r\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\r\n                  Mẫu ban đầu:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-md-2\"\r\n                  name=\"initialSample\"\r\n                  value={initialSample}\r\n                  onChange={onChangeInitialSample}\r\n                  required\r\n                />\r\n              </div>\r\n              <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"birthDate\"\r\n                  value={birthDate}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"gender\">Giới tính:</label>\r\n                <select\r\n                  name=\"gender\"\r\n                  className=\"form-control\"\r\n                  value={gender}\r\n                  disabled\r\n                >\r\n                  <option value=\"Nam\">Nam</option>\r\n                  <option value=\"Nữ\">Nữ</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"patientType\">Đối tượng:</label>\r\n                <select\r\n                  name=\"patientType\"\r\n                  className=\"form-control\"\r\n                  value={patientType}\r\n                  disabled\r\n                >\r\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"department\">Khoa phòng:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"department\"\r\n                  value={department}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"diagnosis\"\r\n                value={diagnosis}\r\n                onChange={onChangeDiagnosis}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    STT\r\n                    <br />\r\n                    {' '}\r\n                    (1)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '25%' }}>\r\n                    Tên xét nghiệm\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (2)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    S.L\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (3)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Đơn giá\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (4)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Thành tiền\r\n                    <br />\r\n                    {' '}\r\n                    (5)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Bảo hiểm\r\n                    <br />\r\n                    {' '}\r\n                    (6)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN chi trả\r\n                    <br />\r\n                    {' '}\r\n                    (7)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Chênh lệch\r\n                    <br />\r\n                    {' '}\r\n                    (8)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN phải trả\r\n                    <br />\r\n                    {' '}\r\n                    (7+8)\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                {/* add row button */}\r\n                <tr>\r\n                  <td colSpan=\"9\" className=\"text-center\">\r\n                    <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                      <i className=\"bi bi-plus-square\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                        </svg>\r\n                        {' '}\r\n                      </i>\r\n                      <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                        Thêm dòng\r\n                      </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                {/* TODO: complete function to count total amount */}\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                    Tổng\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    {amountSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {paymentSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {totalSum}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Biochemical;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\types.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\constant\\Constant.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\utils\\FileUpload.js",["256"],"import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const onDrop = (files) => {\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    Axios.post('/api/patients/uploadImage', formData, config).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          setImages([...images, response.data.image]);\r\n          props.refreshFunction([...images, response.data.image]);\r\n        } else {\r\n          alert('Failed to save images');\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = images.indexOf(image);\r\n\r\n    const newImages = [...images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: '35%',\r\n              height: '400px',\r\n              border: '1px solid lightgray',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '60%',\r\n          height: '400px',\r\n          border: '1px solid lightgray',\r\n          overflowX: 'scroll',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {images.map((image, index) => (\r\n          <div key={`diagnosis-${image}}`} onClick={() => onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: '512px', width: '285px', height: '400px' }}\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`patientImage-${index}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",["257","258"],"/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { USER_SERVER } from '../../../Config';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n  let name;\r\n  if (user !== undefined) {\r\n    if (user.userData !== undefined) {\r\n      name = `${user.userData.firstname} ${user.userData.lastname}`;\r\n    }\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push('/login');\r\n      } else {\r\n        alert('Failed to log out');\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"signin\">\r\n          <a href=\"/login\" style={{ textDecoration: 'none' }}>Đăng nhập</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"signup\">\r\n          <a href=\"/register\" style={{ textDecoration: 'none' }}>Đăng ký</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {user !== undefined && user.userData !== undefined && (\r\n      <Menu mode={props.mode}>\r\n        <SubMenu title={(\r\n          <span>\r\n            {' '}\r\n            Xin chào,\r\n            {' '}\r\n            {name}\r\n          </span>\r\n    )}\r\n        >\r\n          <MenuItemGroup>\r\n            <Menu.Item key=\"user info\">\r\n              <a href={`/user/${localStorage.userId}`} style={{ textDecoration: 'none' }}>\r\n                Cập nhật thông tin\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"logout\">\r\n              <a onClick={logoutHandler}>Đăng xuất</a>\r\n            </Menu.Item>\r\n          </MenuItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n      )}\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",["259","260"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\Config.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js",["261","262","263"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js",["264","265"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js",["266","267"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js",["268","269"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js",["270","271","272","273"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js",["274","275","276","277","278"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientInfo.js",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":39,"column":15,"nodeType":"308","messageId":"309","endLine":39,"endColumn":26},{"ruleId":"306","severity":1,"message":"307","line":52,"column":15,"nodeType":"308","messageId":"309","endLine":52,"endColumn":26},{"ruleId":"306","severity":1,"message":"307","line":64,"column":7,"nodeType":"308","messageId":"309","endLine":64,"endColumn":20},{"ruleId":"306","severity":1,"message":"307","line":90,"column":7,"nodeType":"308","messageId":"309","endLine":90,"endColumn":18},{"ruleId":"306","severity":1,"message":"307","line":117,"column":11,"nodeType":"308","messageId":"309","endLine":117,"endColumn":22},{"ruleId":"310","severity":1,"message":"311","line":11,"column":27,"nodeType":"312","messageId":"313","endLine":11,"endColumn":45},{"ruleId":"310","severity":1,"message":"314","line":12,"column":28,"nodeType":"312","messageId":"313","endLine":12,"endColumn":47},{"ruleId":"310","severity":1,"message":"315","line":13,"column":34,"nodeType":"312","messageId":"313","endLine":13,"endColumn":59},{"ruleId":"310","severity":1,"message":"316","line":14,"column":40,"nodeType":"312","messageId":"313","endLine":14,"endColumn":71},{"ruleId":"310","severity":1,"message":"317","line":15,"column":23,"nodeType":"312","messageId":"313","endLine":15,"endColumn":37},{"ruleId":"310","severity":1,"message":"318","line":10,"column":24,"nodeType":"312","messageId":"313","endLine":10,"endColumn":39},{"ruleId":"310","severity":1,"message":"311","line":11,"column":27,"nodeType":"312","messageId":"313","endLine":11,"endColumn":45},{"ruleId":"310","severity":1,"message":"319","line":6,"column":10,"nodeType":"312","messageId":"313","endLine":6,"endColumn":19},{"ruleId":"310","severity":1,"message":"318","line":11,"column":24,"nodeType":"312","messageId":"313","endLine":11,"endColumn":39},{"ruleId":"310","severity":1,"message":"314","line":12,"column":28,"nodeType":"312","messageId":"313","endLine":12,"endColumn":47},{"ruleId":"310","severity":1,"message":"315","line":13,"column":34,"nodeType":"312","messageId":"313","endLine":13,"endColumn":59},{"ruleId":"310","severity":1,"message":"316","line":14,"column":40,"nodeType":"312","messageId":"313","endLine":14,"endColumn":71},{"ruleId":"310","severity":1,"message":"317","line":15,"column":23,"nodeType":"312","messageId":"313","endLine":15,"endColumn":37},{"ruleId":"310","severity":1,"message":"320","line":16,"column":25,"nodeType":"312","messageId":"313","endLine":16,"endColumn":41},{"ruleId":"310","severity":1,"message":"321","line":24,"column":10,"nodeType":"312","messageId":"313","endLine":24,"endColumn":18},{"ruleId":"306","severity":1,"message":"307","line":81,"column":5,"nodeType":"308","messageId":"309","endLine":81,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":86,"column":5,"nodeType":"308","messageId":"309","endLine":86,"endColumn":16},{"ruleId":"310","severity":1,"message":"322","line":7,"column":27,"nodeType":"312","messageId":"313","endLine":7,"endColumn":33},{"ruleId":"310","severity":1,"message":"323","line":22,"column":10,"nodeType":"312","messageId":"313","endLine":22,"endColumn":20},{"ruleId":"310","severity":1,"message":"322","line":3,"column":27,"nodeType":"312","messageId":"313","endLine":3,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":80,"column":15,"nodeType":"326","messageId":"309","endLine":80,"endColumn":57},{"ruleId":"324","severity":1,"message":"325","line":84,"column":11,"nodeType":"326","messageId":"309","endLine":84,"endColumn":48},{"ruleId":"310","severity":1,"message":"327","line":30,"column":20,"nodeType":"312","messageId":"313","endLine":30,"endColumn":31},{"ruleId":"310","severity":1,"message":"328","line":31,"column":18,"nodeType":"312","messageId":"313","endLine":31,"endColumn":27},{"ruleId":"310","severity":1,"message":"329","line":32,"column":22,"nodeType":"312","messageId":"313","endLine":32,"endColumn":35},{"ruleId":"310","severity":1,"message":"330","line":33,"column":16,"nodeType":"312","messageId":"313","endLine":33,"endColumn":23},{"ruleId":"310","severity":1,"message":"331","line":34,"column":16,"nodeType":"312","messageId":"313","endLine":34,"endColumn":23},{"ruleId":"310","severity":1,"message":"332","line":35,"column":19,"nodeType":"312","messageId":"313","endLine":35,"endColumn":29},{"ruleId":"324","severity":1,"message":"325","line":57,"column":11,"nodeType":"326","messageId":"309","endLine":57,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":189,"column":19,"nodeType":"326","messageId":"309","endLine":189,"endColumn":56},{"ruleId":"306","severity":1,"message":"307","line":193,"column":15,"nodeType":"308","messageId":"309","endLine":193,"endColumn":26},{"ruleId":"310","severity":1,"message":"327","line":32,"column":20,"nodeType":"312","messageId":"313","endLine":32,"endColumn":31},{"ruleId":"310","severity":1,"message":"333","line":33,"column":20,"nodeType":"312","messageId":"313","endLine":33,"endColumn":31},{"ruleId":"310","severity":1,"message":"334","line":34,"column":17,"nodeType":"312","messageId":"313","endLine":34,"endColumn":25},{"ruleId":"310","severity":1,"message":"335","line":35,"column":18,"nodeType":"312","messageId":"313","endLine":35,"endColumn":27},{"ruleId":"310","severity":1,"message":"336","line":36,"column":21,"nodeType":"312","messageId":"313","endLine":36,"endColumn":33},{"ruleId":"310","severity":1,"message":"337","line":37,"column":19,"nodeType":"312","messageId":"313","endLine":37,"endColumn":29},{"ruleId":"310","severity":1,"message":"338","line":38,"column":16,"nodeType":"312","messageId":"313","endLine":38,"endColumn":23},{"ruleId":"310","severity":1,"message":"339","line":39,"column":17,"nodeType":"312","messageId":"313","endLine":39,"endColumn":25},{"ruleId":"324","severity":1,"message":"325","line":65,"column":11,"nodeType":"326","messageId":"309","endLine":65,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":265,"column":19,"nodeType":"326","messageId":"309","endLine":265,"endColumn":56},{"ruleId":"306","severity":1,"message":"307","line":269,"column":15,"nodeType":"308","messageId":"309","endLine":269,"endColumn":26},{"ruleId":"310","severity":1,"message":"327","line":33,"column":20,"nodeType":"312","messageId":"313","endLine":33,"endColumn":31},{"ruleId":"310","severity":1,"message":"333","line":34,"column":20,"nodeType":"312","messageId":"313","endLine":34,"endColumn":31},{"ruleId":"310","severity":1,"message":"334","line":35,"column":17,"nodeType":"312","messageId":"313","endLine":35,"endColumn":25},{"ruleId":"310","severity":1,"message":"335","line":36,"column":18,"nodeType":"312","messageId":"313","endLine":36,"endColumn":27},{"ruleId":"310","severity":1,"message":"336","line":37,"column":21,"nodeType":"312","messageId":"313","endLine":37,"endColumn":33},{"ruleId":"310","severity":1,"message":"337","line":38,"column":19,"nodeType":"312","messageId":"313","endLine":38,"endColumn":29},{"ruleId":"310","severity":1,"message":"338","line":39,"column":16,"nodeType":"312","messageId":"313","endLine":39,"endColumn":23},{"ruleId":"310","severity":1,"message":"339","line":40,"column":17,"nodeType":"312","messageId":"313","endLine":40,"endColumn":25},{"ruleId":"324","severity":1,"message":"325","line":66,"column":11,"nodeType":"326","messageId":"309","endLine":66,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":271,"column":19,"nodeType":"326","messageId":"309","endLine":271,"endColumn":56},{"ruleId":"306","severity":1,"message":"307","line":275,"column":15,"nodeType":"308","messageId":"309","endLine":275,"endColumn":26},{"ruleId":"324","severity":1,"message":"325","line":77,"column":15,"nodeType":"326","messageId":"309","endLine":77,"endColumn":49},{"ruleId":"310","severity":1,"message":"340","line":90,"column":11,"nodeType":"312","messageId":"313","endLine":90,"endColumn":16},{"ruleId":"310","severity":1,"message":"341","line":95,"column":11,"nodeType":"312","messageId":"313","endLine":95,"endColumn":22},{"ruleId":"310","severity":1,"message":"342","line":10,"column":9,"nodeType":"312","messageId":"313","endLine":10,"endColumn":13},{"ruleId":"310","severity":1,"message":"343","line":69,"column":21,"nodeType":"312","messageId":"313","endLine":69,"endColumn":24},{"ruleId":"310","severity":1,"message":"340","line":86,"column":11,"nodeType":"312","messageId":"313","endLine":86,"endColumn":16},{"ruleId":"310","severity":1,"message":"341","line":91,"column":11,"nodeType":"312","messageId":"313","endLine":91,"endColumn":22},{"ruleId":"310","severity":1,"message":"344","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":25},{"ruleId":"310","severity":1,"message":"345","line":1,"column":27,"nodeType":"312","messageId":"313","endLine":1,"endColumn":36},{"ruleId":"324","severity":1,"message":"325","line":45,"column":9,"nodeType":"326","messageId":"309","endLine":45,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":48,"column":9,"nodeType":"326","messageId":"309","endLine":48,"endColumn":46},{"ruleId":"346","severity":1,"message":"347","line":5,"column":16,"nodeType":"348","messageId":"349","endLine":5,"endColumn":25},{"ruleId":"310","severity":1,"message":"327","line":33,"column":20,"nodeType":"312","messageId":"313","endLine":33,"endColumn":31},{"ruleId":"310","severity":1,"message":"333","line":34,"column":20,"nodeType":"312","messageId":"313","endLine":34,"endColumn":31},{"ruleId":"310","severity":1,"message":"334","line":35,"column":17,"nodeType":"312","messageId":"313","endLine":35,"endColumn":25},{"ruleId":"310","severity":1,"message":"335","line":36,"column":18,"nodeType":"312","messageId":"313","endLine":36,"endColumn":27},{"ruleId":"310","severity":1,"message":"336","line":37,"column":21,"nodeType":"312","messageId":"313","endLine":37,"endColumn":33},{"ruleId":"310","severity":1,"message":"337","line":38,"column":19,"nodeType":"312","messageId":"313","endLine":38,"endColumn":29},{"ruleId":"310","severity":1,"message":"338","line":39,"column":16,"nodeType":"312","messageId":"313","endLine":39,"endColumn":23},{"ruleId":"310","severity":1,"message":"339","line":40,"column":17,"nodeType":"312","messageId":"313","endLine":40,"endColumn":25},{"ruleId":"324","severity":1,"message":"325","line":66,"column":11,"nodeType":"326","messageId":"309","endLine":66,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":271,"column":19,"nodeType":"326","messageId":"309","endLine":271,"endColumn":56},{"ruleId":"306","severity":1,"message":"307","line":275,"column":15,"nodeType":"308","messageId":"309","endLine":275,"endColumn":26},{"ruleId":"324","severity":1,"message":"325","line":21,"column":11,"nodeType":"326","messageId":"309","endLine":21,"endColumn":41},{"ruleId":"310","severity":1,"message":"350","line":4,"column":16,"nodeType":"312","messageId":"313","endLine":4,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":27,"column":9,"nodeType":"326","messageId":"309","endLine":27,"endColumn":35},{"ruleId":"310","severity":1,"message":"344","line":2,"column":17,"nodeType":"312","messageId":"313","endLine":2,"endColumn":25},{"ruleId":"310","severity":1,"message":"345","line":2,"column":27,"nodeType":"312","messageId":"313","endLine":2,"endColumn":36},{"ruleId":"324","severity":1,"message":"325","line":69,"column":17,"nodeType":"326","messageId":"309","endLine":69,"endColumn":54},{"ruleId":"306","severity":1,"message":"307","line":74,"column":11,"nodeType":"308","messageId":"309","endLine":74,"endColumn":22},{"ruleId":"306","severity":1,"message":"307","line":92,"column":7,"nodeType":"308","messageId":"309","endLine":92,"endColumn":18},{"ruleId":"324","severity":1,"message":"325","line":123,"column":11,"nodeType":"326","messageId":"309","endLine":123,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":149,"column":11,"nodeType":"308","messageId":"309","endLine":149,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":122,"column":11,"nodeType":"326","messageId":"309","endLine":122,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":147,"column":11,"nodeType":"308","messageId":"309","endLine":147,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":123,"column":11,"nodeType":"326","messageId":"309","endLine":123,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":149,"column":11,"nodeType":"308","messageId":"309","endLine":149,"endColumn":22},{"ruleId":"310","severity":1,"message":"323","line":23,"column":10,"nodeType":"312","messageId":"313","endLine":23,"endColumn":20},{"ruleId":"310","severity":1,"message":"351","line":23,"column":22,"nodeType":"312","messageId":"313","endLine":23,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":83,"column":11,"nodeType":"326","messageId":"309","endLine":83,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":105,"column":11,"nodeType":"308","messageId":"309","endLine":105,"endColumn":22},{"ruleId":"310","severity":1,"message":"352","line":11,"column":10,"nodeType":"312","messageId":"313","endLine":11,"endColumn":19},{"ruleId":"310","severity":1,"message":"353","line":17,"column":17,"nodeType":"312","messageId":"313","endLine":17,"endColumn":25},{"ruleId":"310","severity":1,"message":"354","line":18,"column":20,"nodeType":"312","messageId":"313","endLine":18,"endColumn":31},{"ruleId":"310","severity":1,"message":"355","line":19,"column":23,"nodeType":"312","messageId":"313","endLine":19,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":33,"column":13,"nodeType":"326","messageId":"309","endLine":33,"endColumn":37},{"ruleId":"310","severity":1,"message":"323","line":25,"column":10,"nodeType":"312","messageId":"313","endLine":25,"endColumn":20},{"ruleId":"310","severity":1,"message":"351","line":25,"column":22,"nodeType":"312","messageId":"313","endLine":25,"endColumn":35},{"ruleId":"310","severity":1,"message":"356","line":41,"column":10,"nodeType":"312","messageId":"313","endLine":41,"endColumn":20},{"ruleId":"310","severity":1,"message":"357","line":41,"column":22,"nodeType":"312","messageId":"313","endLine":41,"endColumn":35},{"ruleId":"310","severity":1,"message":"358","line":42,"column":10,"nodeType":"312","messageId":"313","endLine":42,"endColumn":20},{"ruleId":"310","severity":1,"message":"359","line":42,"column":22,"nodeType":"312","messageId":"313","endLine":42,"endColumn":35},{"ruleId":"310","severity":1,"message":"360","line":43,"column":10,"nodeType":"312","messageId":"313","endLine":43,"endColumn":20},{"ruleId":"310","severity":1,"message":"361","line":43,"column":22,"nodeType":"312","messageId":"313","endLine":43,"endColumn":35},{"ruleId":"310","severity":1,"message":"362","line":44,"column":10,"nodeType":"312","messageId":"313","endLine":44,"endColumn":20},{"ruleId":"310","severity":1,"message":"363","line":44,"column":22,"nodeType":"312","messageId":"313","endLine":44,"endColumn":35},{"ruleId":"310","severity":1,"message":"364","line":45,"column":10,"nodeType":"312","messageId":"313","endLine":45,"endColumn":20},{"ruleId":"310","severity":1,"message":"365","line":45,"column":22,"nodeType":"312","messageId":"313","endLine":45,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":127,"column":15,"nodeType":"308","messageId":"309","endLine":127,"endColumn":26},{"ruleId":"306","severity":1,"message":"307","line":142,"column":15,"nodeType":"308","messageId":"309","endLine":142,"endColumn":26},{"ruleId":"306","severity":1,"message":"307","line":157,"column":15,"nodeType":"308","messageId":"309","endLine":157,"endColumn":26},{"ruleId":"306","severity":1,"message":"307","line":172,"column":15,"nodeType":"308","messageId":"309","endLine":172,"endColumn":26},{"ruleId":"306","severity":1,"message":"307","line":189,"column":15,"nodeType":"308","messageId":"309","endLine":189,"endColumn":26},"lines-around-directive",["366"],"no-spaced-func",["367"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'setDoctorDiagnosis' is assigned a value but never used.","Identifier","unusedVar","'setBioChemicalCheck' is assigned a value but never used.","'setFungusAndParasiteCheck' is assigned a value but never used.","'setHematologyAndImmunologyCheck' is assigned a value but never used.","'setResultCheck' is assigned a value but never used.","'setImagingState' is assigned a value but never used.","'showTable' is assigned a value but never used.","'setDoneDiagnosis' is assigned a value but never used.","'notFound' is assigned a value but never used.","'useRef' is defined but never used.","'successful' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","'setTestName' is assigned a value but never used.","'setResult' is assigned a value but never used.","'setNormalRate' is assigned a value but never used.","'setUnit' is assigned a value but never used.","'setNote' is assigned a value but never used.","'setMachine' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setInsurance' is assigned a value but never used.","'setPayment' is assigned a value but never used.","'setDiff' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'user' is assigned a value but never used.","'err' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","func-names","Unexpected unnamed function.","FunctionDeclaration","unnamed","'Icon' is defined but never used.","'setSuccessful' is assigned a value but never used.","'patientId' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setPostSize' is assigned a value but never used.","'setSearchTerms' is assigned a value but never used.","'stateDone1' is assigned a value but never used.","'setStateDone1' is assigned a value but never used.","'stateDone2' is assigned a value but never used.","'setStateDone2' is assigned a value but never used.","'stateDone3' is assigned a value but never used.","'setStateDone3' is assigned a value but never used.","'stateDone4' is assigned a value but never used.","'setStateDone4' is assigned a value but never used.","'stateDone5' is assigned a value but never used.","'setStateDone5' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]