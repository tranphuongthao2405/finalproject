[{"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\serviceWorker.js":"2","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_reducers\\index.js":"3","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_reducers\\user_reducer.js":"4","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_actions\\types.js":"5","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\App.js":"6","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\hoc\\auth.js":"7","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Footer\\Footer.js":"8","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"9","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"10","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\NavBar\\NavBar.js":"11","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"12","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Staff\\PatientList.js":"13","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js":"14","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js":"15","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Staff\\PatientsUpdate.js":"16","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Staff\\PatientsInfoInput.js":"17","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js":"18","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js":"19","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorDiagnosis.js":"20","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js":"21","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js":"22","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js":"23","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js":"24","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js":"25","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js":"26","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js":"27","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js":"28","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js":"29","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js":"30","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\PatientProfile\\PatientSearch.js":"31","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Admin\\UserInput.js":"32","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Admin\\UserList.js":"33","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Admin\\UserEdit.js":"34","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_actions\\user_actions.js":"35","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FormFooter.js":"36","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"37","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"38","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\utils\\FileUpload.js":"39","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\constant\\Constant.js":"40","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\Config.js":"41"},{"size":1196,"mtime":1626001231000,"results":"42","hashOfConfig":"43"},{"size":5005,"mtime":1626001231000,"results":"44","hashOfConfig":"43"},{"size":156,"mtime":1626001231000,"results":"45","hashOfConfig":"43"},{"size":516,"mtime":1626001231000,"results":"46","hashOfConfig":"43"},{"size":195,"mtime":1626001231000,"results":"47","hashOfConfig":"43"},{"size":4661,"mtime":1626015644529,"results":"48","hashOfConfig":"43"},{"size":864,"mtime":1626001231000,"results":"49","hashOfConfig":"43"},{"size":2381,"mtime":1626001231000,"results":"50","hashOfConfig":"43"},{"size":10445,"mtime":1626001231000,"results":"51","hashOfConfig":"43"},{"size":6196,"mtime":1626001231000,"results":"52","hashOfConfig":"43"},{"size":1469,"mtime":1626001231000,"results":"53","hashOfConfig":"43"},{"size":8227,"mtime":1626001231000,"results":"54","hashOfConfig":"43"},{"size":5471,"mtime":1626001231000,"results":"55","hashOfConfig":"43"},{"size":3574,"mtime":1626018506638,"results":"56","hashOfConfig":"43"},{"size":7442,"mtime":1626001231000,"results":"57","hashOfConfig":"43"},{"size":9280,"mtime":1626001231000,"results":"58","hashOfConfig":"43"},{"size":8476,"mtime":1626001231000,"results":"59","hashOfConfig":"43"},{"size":10376,"mtime":1626018494341,"results":"60","hashOfConfig":"43"},{"size":11725,"mtime":1626001231000,"results":"61","hashOfConfig":"43"},{"size":9588,"mtime":1626001231000,"results":"62","hashOfConfig":"43"},{"size":10912,"mtime":1626001231000,"results":"63","hashOfConfig":"43"},{"size":18111,"mtime":1626001231000,"results":"64","hashOfConfig":"43"},{"size":15909,"mtime":1626001231000,"results":"65","hashOfConfig":"43"},{"size":19265,"mtime":1626001231000,"results":"66","hashOfConfig":"43"},{"size":14832,"mtime":1626001231000,"results":"67","hashOfConfig":"43"},{"size":15249,"mtime":1626001231000,"results":"68","hashOfConfig":"43"},{"size":18796,"mtime":1626001231000,"results":"69","hashOfConfig":"43"},{"size":11672,"mtime":1626001231000,"results":"70","hashOfConfig":"43"},{"size":8729,"mtime":1626001231000,"results":"71","hashOfConfig":"43"},{"size":15283,"mtime":1626001231000,"results":"72","hashOfConfig":"43"},{"size":7261,"mtime":1626001231000,"results":"73","hashOfConfig":"43"},{"size":6315,"mtime":1626001231000,"results":"74","hashOfConfig":"43"},{"size":5820,"mtime":1626001231000,"results":"75","hashOfConfig":"43"},{"size":6777,"mtime":1626001231000,"results":"76","hashOfConfig":"43"},{"size":988,"mtime":1626001231000,"results":"77","hashOfConfig":"43"},{"size":787,"mtime":1626001231000,"results":"78","hashOfConfig":"43"},{"size":1696,"mtime":1626001231000,"results":"79","hashOfConfig":"43"},{"size":2272,"mtime":1626001231000,"results":"80","hashOfConfig":"43"},{"size":2272,"mtime":1626018485928,"results":"81","hashOfConfig":"43"},{"size":4207,"mtime":1626001231000,"results":"82","hashOfConfig":"43"},{"size":58,"mtime":1626019318681,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"eznb9b",{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"86"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\index.js",[],["194","195","196","197","198"],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\serviceWorker.js",["199","200","201","202","203"],"/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_reducers\\index.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_actions\\types.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\App.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\hoc\\auth.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["204"],"/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Footer from '../Footer/Footer';\n\nfunction LandingPage() {\n  const user = useSelector((state) => state.user);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      {user.userData && user.userData.role === 'doctor' && (\n      <div className=\"card\" style={{ width: '80%' }}>\n        <h3 className=\"mb-3 note note-primary\">Hướng dẫn dùng hệ thống dành cho bác sĩ:</h3>\n        <p>\n          1. Bác sĩ xem danh sách bệnh nhân tiếp nhận bằng cách ấn vào mục Danh sách bệnh nhân tiếp nhận.\n          Bác sĩ có thể tìm kiếm bệnh nhân trong danh sách theo mã bệnh nhân.\n          <br />\n          <br />\n          2. Những bệnh nhân đã khám và chẩn đoán sẽ được đánh dấu Đã chẩn đoán. Tên những bệnh nhân cần khám và chẩn đoán được in xanh.\n          <br />\n          <br />\n          3. Ấn vào tên bệnh nhân cần chẩn đoán và điền các kết quả tương ứng, đồng thời có thể\n          điều phối bệnh nhân làm xét nghiệm hoặc chụp chẩn đoán hình ảnh nếu cần thiết.\n          <br />\n          <br />\n          4. Sau khi chẩn đoán, theo dõi trạng thái xét nghiệm và các chẩn đoán hình ảnh của bệnh nhân.\n          <br />\n          <br />\n          5. Có thể ấn vào xem chi tiết thông tin về các xét nghiệm và các ảnh chụp chẩn đoán của bệnh nhân nếu có trạng thái 'Đã xong'.\n          <br />\n          <br />\n          6. Bác sĩ có thể tìm kiếm thông tin bệnh nhân bằng cách ấn vào mục Hồ sơ bệnh nhân.\n          Trong mục này, sau khi nhập 1 trong 2 trường thông tin yêu cầu, bác sĩ ấn Tìm kiếm, hệ thống sẽ trả về kết quả\n          và bác sĩ có thể ấn vào Xem chi tiết để xem thông tin về bệnh nhân.\n          <br />\n          <br />\n          <footer style={{ textAlign: 'end', color: '#007bff' }}>\n            Nếu có khó khăn trong quá trình sử dụng hệ thống,\n            vui lòng liên hệ tới SĐT: 0964086794\n            <br />\n            hoặc gửi mail tới địa chỉ: tranphuongthao24051999@gmail.com để được hỗ trợ.\n          </footer>\n        </p>\n      </div>\n      )}\n\n      {user.userData && user.userData.role === 'staff' && (\n      <div className=\"card\" style={{ width: '80%' }}>\n        <h3 className=\"mb-3 note note-primary\">Hướng dẫn dùng hệ thống dành cho nhân viên:</h3>\n        <p>\n          1. Chọn mục Nhập thông tin bệnh nhân để bắt đầu.\n          <br />\n          <br />\n          2. Nhập đầy đủ thông tin bệnh nhân và ấn Thêm thông tin bệnh nhân sau khi nhập xong.\n          <br />\n          <br />\n          3. Nhân viên có thể xem danh sách bệnh nhân tại mục Danh sách bệnh nhân. Tại đây,\n          nhân viên có thể xem danh sách bệnh nhân, tìm kiếm bệnh nhân theo mã bệnh nhân\n          hoặc chỉnh sửa thông tin bệnh nhân bằng cách ấn vào biểu tượng chỉnh sửa.\n          <br />\n          <br />\n          4. Nếu nhân viên chỉnh sửa thông tin bệnh nhân, sau khi chỉnh sửa cần nhấn nút Cập nhật thông tin bệnh nhân\n          để thông tin của bệnh nhân được cập nhật trên hệ thống.\n          <br />\n          <br />\n          <footer style={{ textAlign: 'end', color: '#007bff' }}>\n            Nếu có khó khăn trong quá trình sử dụng hệ thống,\n            vui lòng liên hệ tới SĐT: 0964086794\n            <br />\n            hoặc gửi mail tới địa chỉ: tranphuongthao24051999@gmail.com để được hỗ trợ.\n          </footer>\n        </p>\n      </div>\n      )}\n\n      {user.userData && user.userData.role === 'laboratory staff' && (\n      <div className=\"card\" style={{ width: '80%' }}>\n        <h3 className=\"mb-3 note note-primary\">Hướng dẫn dùng hệ thống dành cho nhân viên xét nghiệm:</h3>\n        <p>\n          1. Nhân viên xét nghiệm xem danh sách bệnh nhân tiếp nhận bằng cách ấn vào mục Danh sách bệnh nhân tiếp nhận.\n          Nhân viên xét nghiệm có thể tìm kiếm bệnh nhân trong danh sách theo mã bệnh nhân.\n          <br />\n          <br />\n          2. Những bệnh nhân đã khám và chẩn đoán có chẩn đoán của bác sĩ kèm theo, nếu chưa thì sẽ hiện là 'Chưa xử lý'.\n          Những bệnh nhân cần xét nghiệm sẽ có các trường thông tin phiếu xét nghiệm đánh dấu là 'Có'.\n          <br />\n          <br />\n          3. Sau khi xét nghiệm, nhân viên xét nghiệm ấn vào những mục xét nghiệm hiển thị chữ 'Có' của bệnh nhân để tiến hành điền phiếu xét nghiệm.\n          <br />\n          <br />\n          4. Sau khi điền xong phiếu xét nghiệm, nhân viên tiến hành ấn Xem phiếu xét nghiệm để xem chi tiết phiếu xét nghiệm\n          và tải phiếu xét nghiệm lên hệ thống. Sau đó hệ thống sẽ hiển thị phiếu xét nghiệm đầy đủ. Tại đây, nhân viên xét nghiệm có thể\n          lựa chọn tải phiếu xét nghiệm dưới dạng pdf bằng cách nhấn nút Tải phiếu xét nghiệm.\n          <br />\n          <br />\n          5. Nhân viên xét nghiệm có thể ấn vào xem chi tiết thông tin về các xét nghiệm của bệnh nhân nếu có trạng thái 'Đã xong'.\n          <br />\n          <br />\n          <footer style={{ textAlign: 'end', color: '#007bff' }}>\n            Nếu có khó khăn trong quá trình sử dụng hệ thống,\n            vui lòng liên hệ tới SĐT: 0964086794\n            <br />\n            hoặc gửi mail tới địa chỉ: tranphuongthao24051999@gmail.com để được hỗ trợ.\n          </footer>\n        </p>\n      </div>\n      )}\n\n      {user.userData && user.userData.role === 'imaging staff' && (\n      <div className=\"card\" style={{ width: '80%' }}>\n        <h3 className=\"mb-3 note note-primary\">Hướng dẫn dùng hệ thống dành cho nhân viên chẩn đoán hình ảnh:</h3>\n        <p>\n          1. Nhân viên chẩn đoán hình ảnh xem danh sách bệnh nhân tiếp nhận bằng cách ấn vào mục Danh sách bệnh nhân tiếp nhận.\n          Nhân viên chẩn đoán hình ảnh có thể tìm kiếm bệnh nhân trong danh sách theo mã bệnh nhân.\n          <br />\n          <br />\n          2. Những bệnh nhân đã khám và chẩn đoán có chẩn đoán của bác sĩ kèm theo, nếu chưa thì sẽ hiện là 'Chưa xử lý'.\n          Những bệnh nhân cần chẩn đoán hình ảnh sẽ có trường thông tin cần chẩn đoán hình ảnh đánh dấu là 'Có'.\n          <br />\n          <br />\n          3. Sau khi chẩn đoán hình ảnh, nhân viên chẩn đoán hình ảnh ấn vào tên bệnh nhân được in xanh có mục cần chẩn đoán hình ảnh\n          hiển thị chữ 'Có' để tiến hành tải ảnh lên hệ thống.\n          <br />\n          <br />\n          4. Sau khi tải ảnh lên hệ thống, nhân viên ấn Tiến hành phân tích ảnh để hệ thống xử lý ảnh của bệnh nhân và đưa vào mô hình\n          chẩn đoán ung thư hắc tố da. Sau đó, hệ thống sẽ hiển thị phiếu chẩn đoán hình ảnh đầy đủ của bệnh nhân kèm các kết quả phân tích.\n          Tại đây, nhân viên chẩn đoán hình ảnh có thể lựa chọn tải phiếu chẩn đoán hình ảnh dưới dạng pdf bằng cách nhấn nút\n          Tải kết quả chẩn đoán hình ảnh.\n          <br />\n          <br />\n          5. Nhân viên chẩn đoán hình ảnh có thể ấn vào xem chi tiết thông tin về kết quả chẩn đoán hình ảnh\n          của bệnh nhân nếu có trạng thái 'Đã xong'.\n          <br />\n          <br />\n          <footer style={{ textAlign: 'end', color: '#007bff' }}>\n            Nếu có khó khăn trong quá trình sử dụng hệ thống,\n            vui lòng liên hệ tới SĐT: 0964086794\n            <br />\n            hoặc gửi mail tới địa chỉ: tranphuongthao24051999@gmail.com để được hỗ trợ.\n          </footer>\n        </p>\n      </div>\n      )}\n\n      {user.userData && user.userData.role === 'admin' && (\n      <div className=\"card\" style={{ width: '80%' }}>\n        <h3 className=\"mb-3 note note-primary\">Hướng dẫn dùng hệ thống dành cho quản trị viên:</h3>\n        <p>\n          1. Quản trị viên có thể thêm mới tài khoản người dùng bằng cách chọn mục Nhập thông tin người dùng.\n          <br />\n          <br />\n          2. Quản trị viên cần nhập đầy đủ thông tin và ấn Thêm thông tin người dùng để thêm mới tài khoản người dùng trong hệ thống.\n          <br />\n          <br />\n          3. Quản trị viên có thể xem danh sách người dùng tại mục Danh sách người dùng. Tại đây,\n          quản trị viên có thể xem danh sách người dùng, tìm kiếm người dùng theo vai trò, chỉnh sửa thông tin người dùng\n          bằng cách ấn vào biểu tượng chỉnh sửa hoặc xóa một tài khoản người dùng bằng cách ấn vào biểu tượng xóa.\n          <br />\n          <br />\n          4. Nếu quản trị viên chỉnh sửa thông tin người dùng, sau khi chỉnh sửa cần nhấn nút Cập nhật thông tin người dùng\n          để thông tin của người dùng được cập nhật trên hệ thống.\n          <br />\n          <br />\n          <footer style={{ textAlign: 'end', color: '#007bff' }}>\n            Nếu có khó khăn trong quá trình sử dụng hệ thống,\n            vui lòng liên hệ tới SĐT: 0964086794\n            <br />\n            hoặc gửi mail tới địa chỉ: tranphuongthao24051999@gmail.com để được hỗ trợ.\n          </footer>\n        </p>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default LandingPage;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["205","206","207"],"/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form, Icon, Input, Button, Checkbox, Typography,\n} from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../../_actions/user_actions';\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = !!localStorage.getItem('rememberMe');\n\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem('rememberMe')\n    ? localStorage.getItem('rememberMe')\n    : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email không hợp lệ')\n          .required('Yêu cầu nhập địa chỉ email'),\n        password: Yup.string()\n          .min(6, 'Password phải có độ dài tối thiểu là 6 ký tự')\n          .required('Yêu cầu nhập password')\n          .matches(/(?=.*[0-9])/, 'Password phải bao gồm ít nhất 1 chữ số'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          const dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then((response) => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                // set id of user to local storage\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push('/');\n              } else {\n                setFormErrorMessage(\n                  'Kiểm tra lại email hoặc password của bạn',\n                );\n              }\n            })\n            .catch((err) => {\n              setFormErrorMessage(\n                'Kiểm tra lại email hoặc password của bạn',\n              );\n              setTimeout(() => {\n                setFormErrorMessage('');\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title style={{ textAlign: 'center' }} level={2}>Đăng nhập</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"Nhập email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"Nhập password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: '#ff0000bf',\n                      fontSize: '0.8rem',\n                      border: '1px solid',\n                      padding: '0.5rem',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n\n              <Form.Item>\n                <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  Ghi nhớ tài khoản\n                </Checkbox>\n                <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{ float: 'right' }}\n                >\n                  Quên mật khẩu\n                </a>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: '100%' }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    Đăng nhập\n                  </Button>\n                </div>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Staff\\PatientList.js",["208"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './PatientsList.css';\n\nfunction PatientList() {\n  const [patients, setPatients] = useState();\n  const [showTable, setShowTable] = useState(false);\n  let count = 0;\n\n  useEffect(() => {\n    axios.get('/api/patients/getAllPatients').then((response) => {\n      if (response.data.success) {\n        setShowTable(true);\n        setPatients(response.data.patients);\n      } else {\n        setShowTable(false);\n        alert('Không thể tải danh sách bệnh nhân');\n      }\n    });\n  }, []);\n\n  const search = () => {\n    // Declare variables\n    let td; let i; let txtValue;\n    const input = document.getElementById('searchInput');\n    const filter = input.value.toUpperCase();\n    const table = document.getElementById('staffTable');\n    const tr = table.getElementsByTagName('tr');\n\n    // Loop through all table rows, and hide those who don't match the search query\n    for (i = 0; i < tr.length; i += 1) {\n      td = tr[i].getElementsByTagName('td')[2];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = '';\n        } else {\n          tr[i].style.display = 'none';\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"p-5 text-center\">\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN</h3>\n      </div>\n      {patients && patients.length > 0 && showTable ? (\n        <div className=\"container-fluid\">\n          <div className=\"table-responsive\">\n            <div className=\"table-wrapper\">\n              <div className=\"table-title\">\n                <div className=\"row\">\n                  <div className=\"col-sm-8\" />\n                  <div className=\"col-sm-4\">\n                    <div className=\"search-box\" style={{ width: '70%' }}>\n                      <i className=\"material-icons\">&#xE8B6;</i>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Tìm kiếm theo mã bệnh nhân&hellip;\"\n                        id=\"searchInput\"\n                        onKeyUp={search}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <table\n                data-search=\"true\"\n                tabIndex={-1}\n                data-search-on-enter-key=\"true\"\n                className=\"table table-striped table-hover table-bordered\"\n                id=\"staffTable\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      STT\n                    </th>\n                    <th>\n                      Họ tên\n                    </th>\n                    <th>\n                      Mã bệnh nhân\n                    </th>\n                    <th>\n                      Ngày sinh\n                    </th>\n                    <th>\n                      Giới tính\n                    </th>\n                    <th>\n                      Địa chỉ\n                    </th>\n                    <th>\n                      Đối tượng\n                    </th>\n                    <th>\n                      Bác sĩ điều trị\n                    </th>\n                    <th>\n                      Phòng khám\n                    </th>\n                    <th>Hành động</th>\n                  </tr>\n                </thead>\n                <tbody>\n\n                  {patients.map(((patient) => {\n                    const fulltime = patient.birthDate;\n                    const day = fulltime.substring(8, 10);\n                    const month = fulltime.substring(5, 7);\n                    const year = fulltime.substring(0, 4);\n                    const time = `${day}/${month}/${year}`;\n                    count += 1;\n                    return (\n                      <tr id={patient.patientId}>\n                        <td>{count}</td>\n                        <td>{patient.name}</td>\n                        <td>{patient.patientId}</td>\n                        <td>{time}</td>\n                        <td>{patient.gender}</td>\n                        <td>{patient.address}</td>\n                        <td>{patient.patientType}</td>\n                        <td>{patient.doctor}</td>\n                        <td>{patient.department}</td>\n                        <td>\n                          <a\n                            href={`/patientsInfoUpdate/${patient.patientId}`}\n                            className=\"edit\"\n                            title=\"Sửa\"\n                            data-toggle=\"tooltip\"\n                          >\n                            <i\n                              className=\"material-icons\"\n                            >\n                              &#xE254;\n                            </i>\n                          </a>\n                        </td>\n                      </tr>\n                    );\n                  }))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(PatientList);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js",["209","210"],"/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-alert */\n/* eslint-disable react/button-has-type */\n/* eslint-disable no-lonely-if */\n/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from 'antd';\nimport axios from 'axios';\nimport ImageGallery from 'react-image-gallery';\nimport FileUpload from '../../utils/FileUpload';\n\nconst { Title } = Typography;\n\nfunction ImagingStaffBoard(props) {\n  const pId = props.match.params.id;\n\n  const history = useHistory();\n  const [images, setImages] = useState([]);\n  const [imagesArray, setImagesArray] = useState([]);\n  const [successful, setSuccessful] = useState(false);\n\n  useEffect(() => {\n    if (images && images.length > 0) {\n      const imagesArr = [];\n\n      // eslint-disable-next-line no-unused-expressions\n      images\n        // eslint-disable-next-line array-callback-return\n        && images.map((item) => {\n          imagesArr.push({\n            original: `http://localhost:8000/${item}`,\n            thumbnail: `http://localhost:8000/${item}`,\n          });\n        });\n      setImagesArray(imagesArr);\n    }\n  }, [images]);\n\n  const updateImages = (newImage) => {\n    setImages(newImage);\n  };\n\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n    setSuccessful(false);\n    if (images.length !== []) {\n      const dataToSubmit = {\n        pId,\n        images,\n      };\n\n      axios.post('/api/diagnosis/imagingDiagnosis/saveImage', dataToSubmit).then((response) => {\n        if (response.data.success) {\n          // alert('Save images successfully');\n          axios.post('/api/diagnosis/imagingDiagnosis/uploadImage', dataToSubmit).then((res) => {\n            if (res.data.success) {\n              // alert('Update images successfully');\n              history.push(`/imageProcessing/${pId}`);\n            } else {\n              alert('Không thể tải kết quả chẩn đoán hình ảnh');\n            }\n          });\n        } else {\n          alert('Lỗi lưu hình ảnh vào hệ thống');\n        }\n      });\n    }\n  };\n\n  return (\n    <div style={{ width: '90%', margin: '2rem auto' }}>\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n        <Title level={2}>Tải ảnh chụp chẩn đoán của bệnh nhân</Title>\n      </div>\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group form-row justify-content-center\">\n          <label\n            style={{ display: 'inline-block', marginTop: 10 }}\n            className=\"col-md-1\"\n          >\n            Mã BN:\n          </label>\n          {pId && (\n            <input\n              type=\"text\"\n              className=\"form-control col-md-1\"\n              name=\"patientId\"\n              value={pId}\n              disabled\n            />\n          )}\n        </div>\n        <br />\n        <br />\n        <FileUpload refreshFunction={updateImages} />\n        <br />\n        <br />\n        {imagesArray && imagesArray.length > 0 && (\n          <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10%' }}>\n            <ImageGallery items={imagesArray} />\n          </div>\n        )}\n\n        <br />\n        <br />\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary btn-block form-group col-md-3\">\n            Tiến hành phân tích ảnh\n          </button>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n\nexport default ImagingStaffBoard;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js",["211","212","213","214","215"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-loop-func */\n/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction PatientList() {\n  const [patients, setPatients] = useState();\n  const [showTable, setShowTable] = useState(false);\n  const [imagingState, setImagingState] = useState([]);\n  const [doctorDiagnosis, setDoctorDiagnosis] = useState([]);\n  const [pId, setPId] = useState([]);\n\n  let count = 0;\n  let tempCount = 0;\n\n  useEffect(() => {\n    axios.get('/api/patients/getAllPatients').then((response) => {\n      if (response.data.success) {\n        setPatients(response.data.patients);\n      } else {\n        setShowTable(false);\n        alert('Không thể tải danh sách bệnh nhân');\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (patients) {\n      for (let i = 0; i < patients.length; i += 1) {\n        const values = {\n          patientId: patients[i].patientId,\n        };\n\n        axios.post('/api/diagnosis/getDiagnosisById', values).then((response) => {\n          if (response.data.success) {\n            pId[tempCount] = [response.data.doc[0].patientId];\n            if (response.data.doc[0].doctorDiagnosis !== '') {\n              doctorDiagnosis[tempCount] = response.data.doc[0].doctorDiagnosis;\n\n              if (response.data.doc[0].imaging === 'done') {\n                imagingState[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].imaging === 'pending') {\n                imagingState[tempCount] = 'Có';\n              } else if (response.data.doc[0].imaging === '') {\n                imagingState[tempCount] = 'Không';\n              }\n            } else {\n              doctorDiagnosis[tempCount] = 'Chưa chẩn đoán';\n              imagingState[tempCount] = 'Chưa xử lý';\n            }\n\n            tempCount += 1;\n            if (tempCount === patients.length) {\n              setShowTable(true);\n            }\n          } else {\n            setShowTable(false);\n            alert('Không thể tải thông tin chẩn đoán của bệnh nhân');\n          }\n        });\n      }\n    }\n  }, [patients, showTable]);\n\n  const search = () => {\n    // Declare variables\n    let td; let i; let txtValue;\n    const input = document.getElementById('searchInput');\n    const filter = input.value.toUpperCase();\n    const table = document.getElementById('imgTable');\n    const tr = table.getElementsByTagName('tr');\n\n    // Loop through all table rows, and hide those who don't match the search query\n    for (i = 0; i < tr.length; i += 1) {\n      td = tr[i].getElementsByTagName('td')[2];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = '';\n        } else {\n          tr[i].style.display = 'none';\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      {/* <div className=\"p-5 text-center\">\n        <h3 className=\"mb-3\">HƯỚNG DẪN</h3>\n        <p>Ấn vào tên bệnh nhân cần chụp chẩn đoán hình ảnh để tiến hành</p>\n      </div> */}\n      <div className=\"p-5 text-center\">\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN TIẾP NHẬN</h3>\n      </div>\n      {patients && patients.length > 0 && showTable ? (\n        <div className=\"container-fluid\">\n          <div className=\"table-responsive\">\n            <div className=\"table-wrapper\">\n              <div className=\"table-title\">\n                <div className=\"row\">\n                  <div className=\"col-sm-8\" />\n                  <div className=\"col-sm-4\">\n                    <div className=\"search-box\" style={{ width: '70%' }}>\n                      <i className=\"material-icons\">&#xE8B6;</i>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Tìm kiếm theo mã bệnh nhân&hellip;\"\n                        id=\"searchInput\"\n                        onKeyUp={search}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <table\n                data-search=\"true\"\n                tabIndex={-1}\n                data-search-on-enter-key=\"true\"\n                className=\"table table-striped table-hover table-bordered\"\n                id=\"imgTable\"\n              >\n                <thead>\n                  <tr style={{ textAlign: 'center' }}>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      STT\n                    </th>\n                    <th scope=\"col\" style={{ width: '15%' }}>\n                      Họ tên\n                    </th>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      Mã bệnh nhân\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Ngày sinh\n                    </th>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      Giới tính\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Chẩn đoán của bác sĩ\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần chụp chẩn đoán hình ảnh\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                 patients.map((patient) => {\n                   const fulltime = patient.birthDate;\n                   const day = fulltime.substring(8, 10);\n                   const month = fulltime.substring(5, 7);\n                   const year = fulltime.substring(0, 4);\n                   const time = `${day}/${month}/${year}`;\n                   count += 1;\n                   let pCount;\n\n                   for (let i = 0; i < pId.length; i += 1) {\n                     if (pId[i].toString() === patient.patientId) {\n                       pCount = i;\n                       break;\n                     }\n                   }\n\n                   return ((\n                     <tr>\n                       <td className=\"text-center\">{count}</td>\n                       <td className=\"text-center\">{imagingState[pCount] !== 'Đã xong' && imagingState[pCount] !== 'Chưa xử lý' ? (<a href={`/imagingStaffBoard/${patient.patientId}`} style={{ textDecoration: 'none' }}>{patient.name}</a>) : (patient.name)}</td>\n                       <td className=\"text-center\">{patient.patientId}</td>\n                       <td className=\"text-center\">{time}</td>\n                       <td className=\"text-center\">{patient.gender}</td>\n                       <td className=\"text-center\">{doctorDiagnosis[pCount]}</td>\n                       <td className=\"text-center\">{imagingState[pCount] === 'Đã xong' ? (<a href={`/imageProcessing/${patient.patientId}`} style={{ textDecoration: 'none' }}>{imagingState[pCount]}</a>) : (imagingState[pCount])}</td>\n                     </tr>\n                   ));\n                 })\n            }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\n        </div>\n      ) }\n    </div>\n  );\n}\n\nexport default React.memo(PatientList);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Staff\\PatientsUpdate.js",["216","217"],"/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from 'antd';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport SCHEDULE from '../../../constant/Constant';\n\nconst { Title } = Typography;\n\nfunction PatientsUpdate(props) {\n  const history = useHistory();\n  let doctors = [];\n  const pId = props.match.params.id;\n\n  const [patientId, setPatientId] = useState('');\n  const [name, setName] = useState('');\n  const [birthDate, setBirthDate] = useState(new Date());\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState('');\n  const [patientType, setPatientType] = useState('');\n  const [doctor, setDoctor] = useState();\n  const [department, setDepartment] = useState();\n  const [done, setDone] = useState(false);\n\n  const onChangePatientId = (e) => {\n    setPatientId(e.target.value);\n  };\n\n  const onChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const onChangeDate = (value) => {\n    setBirthDate(value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeGender = (e) => {\n    setGender(e.target.value);\n  };\n\n  const onChangePatientType = (e) => {\n    setPatientType(e.target.value);\n  };\n\n  const onChangeDepartment = (e) => {\n    setDepartment(e.target.value);\n  };\n\n  const onChangeDoctor = (e) => {\n    setDoctor(e.target.value);\n  };\n\n  useEffect(() => {\n    if (pId) {\n      axios.get(`/api/patients/getPatientById?id=${pId}`)\n        .then((response) => {\n          if (response.data.success) {\n            const fulltime = response.data.patient[0].birthDate;\n            const day = fulltime.substring(8, 10);\n            const month = fulltime.substring(5, 7);\n            const year = fulltime.substring(0, 4);\n            const time = `${year}-${month}-${day}`;\n            setPatientId(pId);\n            setBirthDate(new Date(time));\n            setName(response.data.patient[0].name);\n            setAddress(response.data.patient[0].address);\n            setGender(response.data.patient[0].gender);\n            setPatientType(response.data.patient[0].patientType);\n            setDoctor(response.data.patient[0].doctor);\n            setDepartment(response.data.patient[0].department);\n            setDone(true);\n          } else {\n            alert('Không thể tải thông tin bệnh nhân');\n          }\n        });\n    }\n  }, []);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const values = {\n      writer: props.user.userData._id,\n      patientId,\n      name,\n      birthDate,\n      gender,\n      address,\n      patientType,\n      doctor,\n      department,\n    };\n\n    axios.post('/api/patients/updateInformation', values)\n      .then((response) => {\n        if (response.data.success) {\n          history.push('/patientsList');\n        } else {\n          alert('Không thể cập nhật thông tin bệnh nhân');\n        }\n      });\n  };\n\n  return (\n    <div style={{\n      display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%',\n    }}\n    >\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n        <Title level={2}>Cập nhật thông tin bệnh nhân</Title>\n      </div>\n      {done ? (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"patientId\">Mã BN:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"patientId\"\n                  value={patientId}\n                  onChange={onChangePatientId}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={onChangeName}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"datebirth\">Năm sinh:</label>\n                <br />\n                <DatePicker\n                  className=\"form-control\"\n                  mode=\"date\"\n                  format=\"YYYY-MM-DD\"\n                  selected={birthDate}\n                  onChange={onChangeDate}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"gender\">Giới tính:</label>\n                <select\n                  name=\"gender\"\n                  className=\"form-control\"\n                  value={gender}\n                  onChange={onChangeGender}\n                >\n                  <option value=\"\">Chọn giới tính bệnh nhân</option>\n                  <option value=\"Nam\">Nam</option>\n                  <option value=\"Nữ\">Nữ</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"address\">Địa chỉ:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"address\"\n                  value={address}\n                  onChange={onChangeAddress}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"patientType\">Đối tượng:</label>\n                <select\n                  name=\"patientType\"\n                  className=\"form-control\"\n                  value={patientType}\n                  onChange={onChangePatientType}\n                >\n                  <option value=\"\">Chọn đối tượng</option>\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <h6 className=\"mb-3\">Phòng khám:</h6>\n                <select\n                  name=\"department\"\n                  className=\"form-control\"\n                  value={department}\n                  onChange={onChangeDepartment}\n                >\n                  <option value=\"\">Chọn phòng khám</option>\n                  {\n                  SCHEDULE.map((item) => (\n                    <option key={item.PK} value={item.PK}>\n                      PK\n                      {item.PK}\n                    </option>\n                  ))\n                }\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\n                <select\n                  name=\"doctor\"\n                  className=\"form-control\"\n                  value={doctor}\n                  onChange={onChangeDoctor}\n                >\n                  <option value=\"\">Chọn bác sĩ</option>\n                  {SCHEDULE.forEach((item) => {\n                    if (item.PK === department) {\n                      doctors = item.doctor;\n                    }\n                  })}\n                  {\n                  doctors !== [] && doctors.map((dr) => (\n                    <option key={`${dr.name}${dr.level}`} value={dr.name}>\n                      {dr.level}\n                      .\n                      {' '}\n                      {dr.name}\n                    </option>\n                  ))\n                }\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <button className=\"btn btn-primary btn-block form-group col-md-2\">\n                Cập nhật thông tin bệnh nhân\n              </button>\n            </div>\n          </div>\n\n          {/* {message && (\n          <div className=\"form-group\">\n            <div\n              className={\n                successful ? 'alert alert-success' : 'alert alert-danger'\n              }\n              role=\"alert\"\n              style={{ textAlign: 'center', margin: 10 }}\n            >\n              {message}\n            </div>\n          </div>\n        )} */}\n        </form>\n      ) : (\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải thông tin bệnh nhân...</h6>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PatientsUpdate;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Staff\\PatientsInfoInput.js",["218"],"/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from 'antd';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport SCHEDULE from '../../../constant/Constant';\n\nconst { Title } = Typography;\n\nfunction PatientsInfoInput(props) {\n  const history = useHistory();\n  let doctors = [];\n\n  const [patientId, setPatientId] = useState('');\n  const [name, setName] = useState('');\n  const [birthDate, setBirthDate] = useState(new Date());\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState('');\n  const [patientType, setPatientType] = useState('');\n  const [doctor, setDoctor] = useState();\n  const [department, setDepartment] = useState();\n\n  const onChangePatientId = (e) => {\n    setPatientId(e.target.value);\n  };\n\n  const onChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const onChangeDate = (value) => {\n    setBirthDate(value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeGender = (e) => {\n    setGender(e.target.value);\n  };\n\n  const onChangePatientType = (e) => {\n    setPatientType(e.target.value);\n  };\n\n  const onChangeDepartment = (e) => {\n    setDepartment(e.target.value);\n  };\n\n  const onChangeDoctor = (e) => {\n    setDoctor(e.target.value);\n  };\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (checkAllTableField) {\n      const values = {\n        writer: props.user.userData._id,\n        patientId,\n        name,\n        birthDate,\n        gender,\n        address,\n        patientType,\n        doctor,\n        department,\n      };\n      axios.post('/api/patients/uploadInfo', values).then((response) => {\n        if (response.data.success) {\n          const data = {\n            patientId,\n          };\n          axios.post('/api/diagnosis/putDiagnosis', data).then((res) => {\n            if (res.data.success) {\n              history.push('/patientsList');\n            } else {\n              // alert('Failed to put primary information');\n            }\n          });\n        } else {\n          alert('Thêm mới thông tin bệnh nhân lỗi');\n        }\n      });\n    }\n  };\n\n  return (\n    <div style={{\n      display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%',\n    }}\n    >\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n        <Title level={2}>Nhập thông tin bệnh nhân</Title>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"patientId\">Mã BN:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"patientId\"\n                value={patientId}\n                onChange={onChangePatientId}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={name}\n                onChange={onChangeName}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"datebirth\">Năm sinh:</label>\n              <br />\n              <DatePicker\n                className=\"form-control\"\n                mode=\"date\"\n                format=\"YYYY-MM-DD\"\n                selected={birthDate}\n                onChange={onChangeDate}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"gender\">Giới tính:</label>\n              <select\n                name=\"gender\"\n                className=\"form-control\"\n                value={gender}\n                onChange={onChangeGender}\n                required\n              >\n                <option value=\"\">Chọn giới tính bệnh nhân</option>\n                <option value=\"Nam\">Nam</option>\n                <option value=\"Nữ\">Nữ</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"address\">Địa chỉ:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                value={address}\n                onChange={onChangeAddress}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"patientType\">Đối tượng:</label>\n              <select\n                name=\"patientType\"\n                className=\"form-control\"\n                value={patientType}\n                onChange={onChangePatientType}\n                required\n              >\n                <option value=\"\">Chọn đối tượng</option>\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <h6 className=\"mb-3\">Phòng khám:</h6>\n              <select\n                name=\"department\"\n                className=\"form-control\"\n                value={department}\n                onChange={onChangeDepartment}\n                required\n              >\n                <option value=\"\">Chọn phòng khám</option>\n                {\n                  SCHEDULE.map((item) => (\n                    <option key={item.PK} value={item.PK}>\n                      PK\n                      {item.PK}\n                    </option>\n                  ))\n                }\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\n              <select\n                name=\"doctor\"\n                className=\"form-control\"\n                value={doctor}\n                onChange={onChangeDoctor}\n                required\n              >\n                <option value=\"\">Chọn bác sĩ</option>\n                {SCHEDULE.forEach((item) => {\n                  if (item.PK === department) {\n                    doctors = item.doctor;\n                  }\n                })}\n                {\n                  doctors !== [] && doctors.map((dr) => (\n                    <option key={`${dr.name}${dr.level}`} value={dr.name}>\n                      {dr.level}\n                      .\n                      {' '}\n                      {dr.name}\n                    </option>\n                  ))\n                }\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <button className=\"btn btn-primary btn-block form-group col-md-2\">\n              Thêm thông tin bệnh nhân\n            </button>\n          </div>\n        </div>\n\n        {/* {message && (\n          <div className=\"form-group\">\n            <div\n              className={\n                successful ? 'alert alert-success' : 'alert alert-danger'\n              }\n              role=\"alert\"\n              style={{ textAlign: 'center', margin: 10 }}\n            >\n              {message}\n            </div>\n          </div>\n        )} */}\n      </form>\n    </div>\n  );\n}\n\nexport default PatientsInfoInput;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js",["219","220"],"/* eslint-disable new-cap */\n/* eslint-disable react/button-has-type */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useEffect } from 'react';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport ImageGallery from 'react-image-gallery';\nimport Logo from '../LaboratoryStaffBoard/medicalTests/images/logo.jpg';\n\nfunction ImageProcessing(props) {\n  const patientId = props.match.params.id;\n  const date = new Date().toLocaleString('en-GB');\n  const user = useSelector((state) => state.user);\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n\n  const [images, setImages] = useState([]);\n  const [imagesArray, setImagesArray] = useState([]);\n  const [imageProcessing, setImageProcessing] = useState([]);\n  const [done, setDone] = useState(false);\n  let tempCount = 0;\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (images && images.length > 0) {\n      const imagesArr = [];\n\n      // eslint-disable-next-line no-unused-expressions\n      images\n        // eslint-disable-next-line array-callback-return\n        && images.map((item) => {\n          const folder = item.substring(0, 8);\n          const mimage = `m${item.substring(8)}`;\n          const mitem = folder + mimage;\n          const dimage = `d${item.substring(8)}`;\n          const ditem = folder + dimage;\n          imagesArr.push({\n            original: `http://localhost:8000/${item}`,\n            thumbnail: `http://localhost:8000/${item}`,\n          });\n          imagesArr.push({\n            original: `http://localhost:8000/${mitem}`,\n            thumbnail: `http://localhost:8000/${mitem}`,\n          });\n          imagesArr.push({\n            original: `http://localhost:8000/${ditem}`,\n            thumbnail: `http://localhost:8000/${ditem}`,\n          });\n        });\n      setImagesArray(imagesArr);\n    }\n  }, [images]);\n\n  useEffect(() => {\n    const dataToSubmit = {\n      patientId,\n    };\n\n    axios.post('/api/diagnosis/imagingDiagnosis/getImagingDiagnosisById', dataToSubmit)\n      .then((response) => {\n        if (response.data.success) {\n          if (response.data.doc[0] !== undefined) {\n            setImages(response.data.doc[0].images);\n            setImageProcessing(response.data.doc[0].imagingDiagnosis);\n            const dataToSubmit2 = {\n              patientId,\n              imaging: 'done',\n            };\n\n            axios.post('/api/diagnosis/updateImagingDiagnosis', dataToSubmit2).then((res) => {\n              if (res.data.success) {\n                // alert('Update information successfully');\n                setDone(true);\n              } else {\n                // alert('Failed to update information');\n              }\n            });\n          }\n        } else {\n          console.log(response.data.err);\n        }\n      });\n  }, []);\n\n  const downloadForm = () => {\n    const divToDownload = document.getElementById('download-form');\n    html2canvas(divToDownload, {\n      scrollY: -window.scrollY,\n      useCORS: true,\n    }).then((canvas) => {\n      const divImage = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(divImage);\n      const width = 210;\n      const height = (imgProps.height * width) / imgProps.width;\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\n      const title = `${patientId}_chandoanhinhanh.pdf`;\n      pdf.save(title);\n    });\n  };\n\n  const imgType = (value) => {\n    let returnType;\n    if (value % 3 === 1) {\n      returnType = 'Ảnh gốc';\n    } else if (value % 3 === 2) {\n      returnType = 'Ảnh mask';\n    } else if (value % 3 === 0) {\n      returnType = 'Ảnh so sánh';\n    }\n    return returnType;\n  };\n\n  const returnPercentage = (value) => {\n    let percentage;\n    let returnString;\n    if (value % 3 === 1) {\n      percentage = parseFloat(imageProcessing[value - 1]) % 100;\n      returnString = `${percentage}%`;\n    } else {\n      returnString = '';\n    }\n    return returnString;\n  };\n\n  return (\n    <>\n      {done && images && images.length > 0 && imagesArray && user.userData ? (\n        <div className=\"outer-form\">\n          <div className=\"laboratory-form\" id=\"download-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU CHỤP CHẨN ĐOÁN HÌNH ẢNH</b>\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"patientId\">\n                  Mã BN:\n                  {' '}\n                  {patientId}\n                </label>\n              </div>\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"username\">\n                  Họ tên người bệnh:\n                  {' '}\n                  {name}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"birthDate\">\n                  Năm sinh:\n                  {' '}\n                  {birthDate}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <label htmlFor=\"gender\">\n                  Giới tính:\n                  {' '}\n                  {gender}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">\n                Địa chỉ:\n                {' '}\n                {address}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"patientType\">\n                Đối tượng:\n                {' '}\n                {patientType}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"department\">\n                Khoa phòng:\n                {' '}\n                PK\n                {department}\n              </label>\n            </div>\n            <p style={{ textAlign: 'center', fontSize: '18px' }}>\n              <b>KẾT QUẢ PHÂN TÍCH HÌNH ẢNH</b>\n            </p>\n            {imagesArray && imagesArray.length > 0 && (\n            <table className=\"table table-bordered\">\n              <thead>\n                <th scope=\"col\" className=\"text-center\">STT</th>\n                <th scope=\"col\" className=\"text-center\">Ảnh</th>\n                <th scope=\"col\" className=\"text-center\">Loại ảnh</th>\n                <th scope=\"col\" className=\"text-center\">Tỉ lệ bị Melanoma</th>\n              </thead>\n                {imagesArray.map((img) => {\n                  tempCount += 1;\n                  return (\n                    <tbody>\n                      <td className=\"text-center\">{tempCount}</td>\n                      <td className=\"text-center\"><img style={{ width: 256, height: 256 }} src={img.original} alt=\"img-diagnosis\" /></td>\n                      <td className=\"text-center\">{imgType(tempCount)}</td>\n                      <td className=\"text-center\">{returnPercentage(tempCount)}</td>\n                    </tbody>\n                  );\n                })}\n            </table>\n            )}\n\n            <div className=\"form-row\">\n              <div className=\"col\" />\n              <div className=\"col\">\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\n                  In phiếu ngày\n                  {' '}\n                  {date}\n                </p>\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                  NHÂN VIÊN CHỤP CHẨN ĐOÁN HÌNH ẢNH\n                  <br />\n                  {user.userData.firstname}\n                  {' '}\n                  {user.userData.lastname}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : ((\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải phiếu chẩn đoán hình ảnh...</h6>\n        </div>\n      ))}\n\n      {done && images && images.length > 0 && imagesArray && (\n      <div>\n        <br />\n        <br />\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '25%' }} className=\"not-download\">\n          <ImageGallery items={imagesArray} />\n        </div>\n\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\n            Tải kết quả chẩn đoán hình ảnh\n          </button>\n        </div>\n      </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(ImageProcessing);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js",["221","222","223","224","225","226","227","228","229"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-loop-func */\n/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction PatientList() {\n  const user = useSelector((state) => state.user);\n  const [patients, setPatients] = useState();\n  const [showTable, setShowTable] = useState(false);\n  // state to check process\n  const [imagingState, setImagingState] = useState([]);\n  const [biochemicalCheck, setBioChemicalCheck] = useState([]);\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState([]);\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState([]);\n  const [resultCheck, setResultCheck] = useState([]);\n  const [doneDiagnosis, setDoneDiagnosis] = useState([]);\n  const [pId, setPId] = useState([]);\n\n  let count = 0;\n  let tempCount = 0;\n\n  useEffect(() => {\n    if (user.userData !== undefined && user.userData.department !== undefined) {\n      const dataToSubmit = {\n        department: user.userData.department,\n      };\n\n      axios.post('/api/patients/getPatientsByDepartment', dataToSubmit).then((response) => {\n        if (response.data.success) {\n          setPatients(response.data.patients);\n        } else {\n          alert('Không thể tải danh sách bệnh nhân tiếp nhân');\n        }\n      });\n    }\n  }, [user.userData]);\n\n  useEffect(() => {\n    if (patients) {\n      for (let i = 0; i < patients.length; i += 1) {\n        const values = {\n          patientId: patients[i].patientId,\n        };\n\n        axios.post('/api/diagnosis/getDiagnosisById', values).then((response) => {\n          if (response.data.success) {\n            pId[tempCount] = [response.data.doc[0].patientId];\n            if (response.data.doc[0].imaging !== '') {\n              doneDiagnosis[tempCount] = true;\n              if (response.data.doc[0].imaging === 'done') {\n                imagingState[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].imaging === 'pending') {\n                imagingState[tempCount] = 'Có';\n              } else if (response.data.doc[0].imaging === '') {\n                imagingState[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].biochemical === 'done') {\n                biochemicalCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].biochemical === 'pending') {\n                biochemicalCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].biochemical === '') {\n                biochemicalCheck[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].hematologyAndImmunology === 'done') {\n                hematologyAndImmunologyCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].hematologyAndImmunology === 'pending') {\n                hematologyAndImmunologyCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].hematologyAndImmunology === '') {\n                hematologyAndImmunologyCheck[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].fungusAndParasite === 'done') {\n                fungusAndParasiteCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].fungusAndParasite === 'pending') {\n                fungusAndParasiteCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].fungusAndParasite === '') {\n                fungusAndParasiteCheck[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].result === 'done') {\n                resultCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].result === 'pending') {\n                resultCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].result === '') {\n                resultCheck[tempCount] = 'Không';\n              }\n            } else {\n              doneDiagnosis[tempCount] = false;\n              imagingState[tempCount] = 'Chưa xử lý';\n              fungusAndParasiteCheck[tempCount] = 'Chưa xử lý';\n              biochemicalCheck[tempCount] = 'Chưa xử lý';\n              hematologyAndImmunologyCheck[tempCount] = 'Chưa xử lý';\n              resultCheck[tempCount] = 'Chưa xử lý';\n            }\n            tempCount += 1;\n            if (tempCount === patients.length) {\n              setShowTable(true);\n            }\n          } else {\n            setShowTable(false);\n            alert('Không thể tải danh sách bệnh nhân tiếp nhân');\n          }\n        });\n      }\n    }\n  }, [patients, showTable]);\n\n  const showBiochemicalResult = (value, id) => {\n    if (value === 'Có') {\n      return ('Có');\n    } if (value === 'Đã xong') {\n      return (<a href={`/biochemicalForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const showFungusResult = (value, id) => {\n    if (value === 'Có') {\n      return ('Có');\n    } if (value === 'Đã xong') {\n      return (<a href={`/fungusForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const showHematologyResult = (value, id) => {\n    if (value === 'Có') {\n      return ('Có');\n    } if (value === 'Đã xong') {\n      return (<a href={`/hematologyForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const showResult = (value, id) => {\n    if (value === 'Có') {\n      return ('Có');\n    } if (value === 'Đã xong') {\n      return (<a href={`/resultForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const search = () => {\n    // Declare variables\n    let td; let i; let txtValue;\n    const input = document.getElementById('searchInput');\n    const filter = input.value.toUpperCase();\n    const table = document.getElementById('doctorTable');\n    const tr = table.getElementsByTagName('tr');\n\n    // Loop through all table rows, and hide those who don't match the search query\n    for (i = 0; i < tr.length; i += 1) {\n      td = tr[i].getElementsByTagName('td')[2];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = '';\n        } else {\n          tr[i].style.display = 'none';\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"p-5 text-center\">\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN TIẾP NHẬN</h3>\n      </div>\n      {patients && patients.length > 0 && showTable ? (\n        <div className=\"container-fluid\">\n          <div className=\"table-responsive\">\n            <div className=\"table-wrapper\">\n              <div className=\"table-title\">\n                <div className=\"row\">\n                  <div className=\"col-sm-8\" />\n                  <div className=\"col-sm-4\">\n                    <div className=\"search-box\" style={{ width: '70%' }}>\n                      <i className=\"material-icons\">&#xE8B6;</i>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Tìm kiếm theo mã bệnh nhân&hellip;\"\n                        id=\"searchInput\"\n                        onKeyUp={search}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <table\n                data-search=\"true\"\n                tabIndex={-1}\n                data-search-on-enter-key=\"true\"\n                id=\"doctorTable\"\n                className=\"table table-striped table-hover table-bordered\"\n              >\n                <thead>\n                  <tr style={{ textAlign: 'center' }}>\n                    <th scope=\"col\" style={{ width: '2%' }}>\n                      STT\n                    </th>\n                    <th scope=\"col\" style={{ width: '12%' }}>\n                      Họ tên\n                    </th>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      Mã bệnh nhân\n                    </th>\n                    <th scope=\"col\" style={{ width: '6%' }}>\n                      Ngày sinh\n                    </th>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      Giới tính\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần chụp chẩn đoán hình ảnh\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần xét nghiệm sinh hóa máu\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần xét nghiệm nấm - ký sinh trùng\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần xét nghiệm huyết học - miễn dịch\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Phiếu xét nghiệm tổng quan\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                patients.map((patient) => {\n                  const fulltime = patient.birthDate;\n                  const day = fulltime.substring(8, 10);\n                  const month = fulltime.substring(5, 7);\n                  const year = fulltime.substring(0, 4);\n                  const time = `${day}/${month}/${year}`;\n                  count += 1;\n                  let pCount;\n\n                  for (let i = 0; i < pId.length; i += 1) {\n                    if (pId[i].toString() === patient.patientId) {\n                      pCount = i;\n                      break;\n                    }\n                  }\n\n                  return ((\n                    <tr>\n                      <td className=\"text-center\">{count}</td>\n                      <td className=\"text-center\">{doneDiagnosis[pCount] ? (`${patient.name} (Đã chẩn đoán)`) : (<a href={`/doctorDiagnosis/${patient.patientId}`} style={{ textDecoration: 'none' }}>{patient.name}</a>)}</td>\n                      <td className=\"text-center\">{patient.patientId}</td>\n                      <td className=\"text-center\">{time}</td>\n                      <td className=\"text-center\">{patient.gender}</td>\n                      <td className=\"text-center\">{imagingState[pCount] === 'Đã xong' ? (<a href={`/imageProcessing/${patient.patientId}`} style={{ textDecoration: 'none' }}>Đã xong</a>) : (`${imagingState[pCount]}`)}</td>\n                      <td className=\"text-center\">\n                        {showBiochemicalResult(biochemicalCheck[pCount], patient.patientId)}\n                      </td>\n                      <td className=\"text-center\">\n                        {showFungusResult(fungusAndParasiteCheck[pCount], patient.patientId)}\n                      </td>\n                      <td className=\"text-center\">\n                        {showHematologyResult(hematologyAndImmunologyCheck[pCount], patient.patientId)}\n                      </td>\n                      <td className=\"text-center\">\n                        {showResult(resultCheck[pCount], patient.patientId)}\n                      </td>\n                    </tr>\n                  ));\n                })\n            }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(PatientList);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorDiagnosis.js",["230","231","232"],"/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction DoctorDiagnosis(props) {\n  const history = useHistory();\n  const patientId = props.match.params.id;\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [doctor, setDoctor] = useState();\n  const [department, setDepartment] = useState();\n  const [primaryDiagnosis, setPrimaryDiagnosis] = useState();\n  const [necessaryWork, setNecessaryWork] = useState([]);\n\n  const [showInfo, setShowInfo] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n  // state to check process\n  const [imagingCheck, setImagingCheck] = useState(false);\n  const [biochemicalCheck, setBioChemicalCheck] = useState(false);\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState(false);\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState(false);\n\n  const onChangePrimaryDiagnosis = (e) => {\n    setPrimaryDiagnosis(e.target.value);\n  };\n\n  const onChangeNecessaryWork = (e) => {\n    setNecessaryWork([...necessaryWork, e.target.value]);\n  };\n\n  useEffect(() => {\n    if (necessaryWork.includes('Chụp chẩn đoán hình ảnh')) {\n      setImagingCheck(true);\n    }\n    if (necessaryWork.includes('Xét nghiệm sinh hóa máu')) {\n      setBioChemicalCheck(true);\n    }\n    if (necessaryWork.includes('Xét nghiệm nấm - kí sinh trùng')) {\n      setFungusAndParasiteCheck(true);\n    }\n    if (necessaryWork.includes('Xét nghiệm huyết học - miễn dịch')) {\n      setHematologyAndImmunologyCheck(true);\n    }\n  }, [necessaryWork]);\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setBirthDate(time);\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setPatientType(response.data.patient[0].patientType);\n          setDoctor(response.data.patient[0].doctor);\n          setDepartment(response.data.patient[0].department);\n          setShowInfo(true);\n          setNotFound(false);\n        } else {\n          setShowInfo(false);\n          setNotFound(true);\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n  }, []);\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n\n      if (element.type === 'radio') {\n        let radioValueCheck = false;\n        document.getElementById('checkForm').querySelectorAll(`[name=${element.name}]`).forEach((r) => {\n          if (r.checked) radioValueCheck = true;\n        });\n        allFieldFilled = radioValueCheck;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (checkAllTableField) {\n      const value1 = imagingCheck ? 'pending' : '';\n      const value2 = biochemicalCheck ? 'pending' : '';\n      const value3 = fungusAndParasiteCheck ? 'pending' : '';\n      const value4 = hematologyAndImmunologyCheck ? 'pending' : '';\n      const dataToUpdate2 = {\n        patientId,\n        value1,\n        value2,\n        value3,\n        value4,\n        primaryDiagnosis,\n      };\n      axios.post('/api/diagnosis/updateDiagnosis', dataToUpdate2).then((response) => {\n        if (response.data.success) {\n          history.push('/doctorPatientList');\n        } else {\n          alert('Không thể lưu thông tin chẩn đoán');\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      {/* show information of patient */}\n      {showInfo && (\n      <div>\n        <div className=\"p-5 text-center\">\n          <h3 className=\"mb-3\">THÔNG TIN BỆNH NHÂN</h3>\n        </div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr style={{ textAlign: 'center' }}>\n              <th scope=\"col\">\n                Họ tên\n              </th>\n              <th scope=\"col\">\n                Mã bệnh nhân\n              </th>\n              <th scope=\"col\">\n                Ngày sinh\n              </th>\n              <th scope=\"col\">\n                Giới tính\n              </th>\n              <th scope=\"col\">\n                Địa chỉ\n              </th>\n              <th scope=\"col\">\n                Đối tượng\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"text-center\">{name}</td>\n              <td className=\"text-center\">{patientId}</td>\n              <td className=\"text-center\">{birthDate}</td>\n              <td className=\"text-center\">{gender}</td>\n              <td className=\"text-center\">{address}</td>\n              <td className=\"text-center\">{patientType}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div className=\"p-5 text-center\">\n          <h3 className=\"mb-3\">PHẦN DÀNH CHO BÁC SĨ</h3>\n        </div>\n\n        {/* assign imaging */}\n        {/* assign labratory */}\n        <form id=\"checkForm\" onSubmit={onSubmit}>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-6\">\n              <h6 className=\"mb-3\">Phòng khám:</h6>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"department\"\n                value={department}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-group col-md-6\">\n              <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\n              <input\n                type=\"text\"\n                name=\"doctor\"\n                className=\"form-control\"\n                value={doctor}\n                disabled\n              />\n            </div>\n          </div>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-12\">\n              <h6 className=\"mb-3\">\n                Chẩn đoán ban đầu:\n              </h6>\n              <textarea\n                placeholder=\"Nhập chẩn đoán ban đầu của bệnh nhân\"\n                className=\"form-control \"\n                name=\"primaryDiagnosis\"\n                value={primaryDiagnosis}\n                onChange={onChangePrimaryDiagnosis}\n                required\n              />\n            </div>\n          </div>\n\n          <h6 className=\"mb-3\">Các chẩn đoán và xét nghiệm cần thiết:</h6>\n          <div>\n            <div\n              className=\"form-check form-check-inline\"\n              onChange={onChangeNecessaryWork}\n            >\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name=\"necessaryWork\"\n                value=\"Chụp chẩn đoán hình ảnh\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Chụp chẩn đoán hình ảnh</label>\n            </div>\n            <br />\n            <div\n              className=\"form-check form-check-inline\"\n              onChange={onChangeNecessaryWork}\n            >\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name=\"necessaryWork\"\n                value=\"Xét nghiệm sinh hóa máu\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm sinh hóa máu</label>\n            </div>\n            <br />\n            <div\n              className=\"form-check form-check-inline\"\n              onChange={onChangeNecessaryWork}\n            >\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name=\"necessaryWork\"\n                value=\"Xét nghiệm nấm - kí sinh trùng\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm nấm - kí sinh trùng</label>\n            </div>\n            <br />\n            <div\n              className=\"form-check form-check-inline\"\n              onChange={onChangeNecessaryWork}\n            >\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name=\"necessaryWork\"\n                value=\"Xét nghiệm huyết học - miễn dịch\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm huyết học - miễn dịch</label>\n            </div>\n          </div>\n          <br />\n          <br />\n\n          <div className=\"form-row justify-content-center\">\n            <button className=\"btn btn-primary btn-block form-group col-md-3\">\n              Tiếp tục\n            </button>\n          </div>\n        </form>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default DoctorDiagnosis;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js",["233","234","235","236","237","238","239","240"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable max-len */\n/* eslint-disable no-loop-func */\n/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction PatientList() {\n  const [patients, setPatients] = useState();\n  const [showTable, setShowTable] = useState(false);\n  // state to check process\n  const [doctorDiagnosis, setDoctorDiagnosis] = useState([]);\n  const [biochemicalCheck, setBioChemicalCheck] = useState([]);\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState([]);\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState([]);\n  const [resultCheck, setResultCheck] = useState([]);\n  const [pId, setPId] = useState([]);\n\n  let count = 0;\n  let tempCount = 0;\n\n  useEffect(() => {\n    axios.get('/api/patients/getAllPatients').then((response) => {\n      if (response.data.success) {\n        setPatients(response.data.patients);\n      } else {\n        setShowTable(false);\n        alert('Không thể tải danh sách bệnh nhân');\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (patients) {\n      for (let i = 0; i < patients.length; i += 1) {\n        const values = {\n          patientId: patients[i].patientId,\n        };\n\n        axios.post('/api/diagnosis/getDiagnosisById', values).then((response) => {\n          if (response.data.success) {\n            pId[tempCount] = [response.data.doc[0].patientId];\n            if (response.data.doc[0].doctorDiagnosis !== '') {\n              doctorDiagnosis[tempCount] = response.data.doc[0].doctorDiagnosis;\n\n              if (response.data.doc[0].biochemical === 'done') {\n                biochemicalCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].biochemical === 'pending') {\n                biochemicalCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].biochemical === '') {\n                biochemicalCheck[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].hematologyAndImmunology === 'done') {\n                hematologyAndImmunologyCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].hematologyAndImmunology === 'pending') {\n                hematologyAndImmunologyCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].hematologyAndImmunology === '') {\n                hematologyAndImmunologyCheck[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].fungusAndParasite === 'done') {\n                fungusAndParasiteCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].fungusAndParasite === 'pending') {\n                fungusAndParasiteCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].fungusAndParasite === '') {\n                fungusAndParasiteCheck[tempCount] = 'Không';\n              }\n\n              if (response.data.doc[0].result === 'done') {\n                resultCheck[tempCount] = 'Đã xong';\n              } else if (response.data.doc[0].result === 'pending') {\n                resultCheck[tempCount] = 'Có';\n              } else if (response.data.doc[0].result === '') {\n                resultCheck[tempCount] = 'Không';\n              }\n            } else {\n              doctorDiagnosis[tempCount] = 'Chưa chẩn đoán';\n              fungusAndParasiteCheck[tempCount] = 'Chưa xử lý';\n              biochemicalCheck[tempCount] = 'Chưa xử lý';\n              hematologyAndImmunologyCheck[tempCount] = 'Chưa xử lý';\n              resultCheck[tempCount] = 'Chưa xử lý';\n            }\n\n            tempCount += 1;\n            if (tempCount === patients.length) {\n              setShowTable(true);\n            }\n          } else {\n            setShowTable(false);\n            alert('Không thể tải thông tin chẩn đoán của bệnh nhân');\n          }\n        });\n      }\n    }\n  }, [patients, showTable]);\n\n  const showBiochemicalResult = (value, id) => {\n    if (value === 'Có') {\n      return (<a href={`/laboratoryStaffBoard/biochemical/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\n    } if (value === 'Đã xong') {\n      return (<a href={`/biochemicalForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const showFungusResult = (value, id) => {\n    if (value === 'Có') {\n      return (<a href={`/laboratoryStaffBoard/fungusAndParasite/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\n    } if (value === 'Đã xong') {\n      return (<a href={`/fungusForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const showHematologyResult = (value, id) => {\n    if (value === 'Có') {\n      return (<a href={`/laboratoryStaffBoard/hematologyAndImmunology/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\n    } if (value === 'Đã xong') {\n      return (<a href={`/hematologyForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const showResult = (value, id) => {\n    if (value === 'Có') {\n      return (<a href={`/laboratoryStaffBoard/result/${id}`} style={{ textDecoration: 'none' }}>Có</a>);\n    } if (value === 'Đã xong') {\n      return (<a href={`/resultForm/${id}`} style={{ textDecoration: 'none' }}>Đã xong</a>);\n    }\n    return ('Không');\n  };\n\n  const search = () => {\n    // Declare variables\n    let td; let i; let txtValue;\n    const input = document.getElementById('searchInput');\n    const filter = input.value.toUpperCase();\n    const table = document.getElementById('labTable');\n    const tr = table.getElementsByTagName('tr');\n\n    // Loop through all table rows, and hide those who don't match the search query\n    for (i = 0; i < tr.length; i += 1) {\n      td = tr[i].getElementsByTagName('td')[2];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = '';\n        } else {\n          tr[i].style.display = 'none';\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"p-5 text-center\">\n        <h3 className=\"mb-3\">DANH SÁCH BỆNH NHÂN TIẾP NHẬN</h3>\n      </div>\n      {patients && patients.length > 0 && showTable ? (\n        <div className=\"container-fluid\">\n          <div className=\"table-responsive\">\n            <div className=\"table-wrapper\">\n              <div className=\"table-title\">\n                <div className=\"row\">\n                  <div className=\"col-sm-8\" />\n                  <div className=\"col-sm-4\">\n                    <div className=\"search-box\" style={{ width: '70%' }}>\n                      <i className=\"material-icons\">&#xE8B6;</i>\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Tìm kiếm theo mã bệnh nhân&hellip;\" id=\"searchInput\" onKeyUp={search} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <table\n                data-search=\"true\"\n                tabIndex={-1}\n                data-search-on-enter-key=\"true\"\n                id=\"labTable\"\n                className=\"table table-striped table-hover table-bordered\"\n              >\n                <thead>\n                  <tr style={{ textAlign: 'center' }}>\n                    <th scope=\"col\" style={{ width: '2%' }}>\n                      STT\n                    </th>\n                    <th scope=\"col\" style={{ width: '12%' }}>\n                      Họ tên\n                    </th>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      Mã bệnh nhân\n                    </th>\n                    <th scope=\"col\" style={{ width: '6%' }}>\n                      Ngày sinh\n                    </th>\n                    <th scope=\"col\" style={{ width: '5%' }}>\n                      Giới tính\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Chẩn đoán của bác sĩ\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần xét nghiệm sinh hóa máu\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần xét nghiệm nấm - ký sinh trùng\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Cần xét nghiệm huyết học - miễn dịch\n                    </th>\n                    <th scope=\"col\" style={{ width: '10%' }}>\n                      Xét nghiệm tổng quát\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                patients.map((patient) => {\n                  const fulltime = patient.birthDate;\n                  const day = fulltime.substring(8, 10);\n                  const month = fulltime.substring(5, 7);\n                  const year = fulltime.substring(0, 4);\n                  const time = `${day}/${month}/${year}`;\n                  count += 1;\n                  let pCount;\n\n                  for (let i = 0; i < pId.length; i += 1) {\n                    if (pId[i].toString() === patient.patientId) {\n                      pCount = i;\n                      break;\n                    }\n                  }\n\n                  return ((\n                    <tr>\n                      <td className=\"text-center\">{count}</td>\n                      <td className=\"text-center\">{patient.name}</td>\n                      <td className=\"text-center\">{patient.patientId}</td>\n                      <td className=\"text-center\">{time}</td>\n                      <td className=\"text-center\">{patient.gender}</td>\n                      <td className=\"text-center\">{doctorDiagnosis[pCount]}</td>\n                      <td className=\"text-center\">\n                        {showBiochemicalResult(biochemicalCheck[pCount], patient.patientId)}\n                      </td>\n                      <td className=\"text-center\">\n                        {showFungusResult(fungusAndParasiteCheck[pCount], patient.patientId)}\n                      </td>\n                      <td className=\"text-center\">\n                        {showHematologyResult(hematologyAndImmunologyCheck[pCount], patient.patientId)}\n                      </td>\n                      <td className=\"text-center\">\n                        {showResult(resultCheck[pCount], patient.patientId)}\n                      </td>\n                    </tr>\n                  ));\n                })\n            }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải danh sách bệnh nhân...</h6>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(PatientList);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js",["241","242","243","244","245","246","247","248","249","250"],"/* eslint-disable max-len */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction FungusAndParasite(props) {\n  // eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.patientId;\n  const form = useRef();\n  const history = useHistory();\n  const [count, setCount] = useState(0);\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  // const [doctor, setDoctor] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [successful, setSuccessful] = useState(false);\n\n  const [caseType, setCaseType] = useState();\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  const [price, setPrice] = useState([]);\n  const [amount, setAmount] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [payment, setPayment] = useState([]);\n  const [diff, setDiff] = useState([]);\n  const [total, setTotal] = useState([]);\n\n  const [amountSum, setAmountSum] = useState(0);\n  const [paymentSum, setPaymentSum] = useState(0);\n  const [totalSum, setTotalSum] = useState(0);\n\n  const [submit, setSubmit] = useState(false);\n  const [checkLine, setCheckLine] = useState(false);\n  const [checkForm, setCheckForm] = useState(false);\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n  }, []);\n\n  const onChangeDiagnosis = (e) => {\n    setDiagnosis(e.target.value);\n  };\n\n  const onChangeCaseType = (e) => {\n    setCaseType(e.target.value);\n  };\n\n  const onSubmitClick = () => {\n    setSubmit(true);\n    if (count === 0) {\n      setCheckLine(false);\n    } else {\n      setCheckLine(true);\n    }\n  };\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const onChangeTestName = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    testName[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeQuantity = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    quantity[cntNum - 1] = e.target.value;\n  };\n\n  const onChangePrice = (e) => {\n    const cntStr = e.target.name.substring(5);\n    const cntNum = parseInt(cntStr, 10);\n    price[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeAmount = (e) => {\n    const cntStr = e.target.name.substring(6);\n    const cntNum = parseInt(cntStr, 10);\n    amount[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeInsurance = (e) => {\n    const cntStr = e.target.name.substring(9);\n    const cntNum = parseInt(cntStr, 10);\n    insurance[cntNum - 1] = e.target.value;\n  };\n\n  const onChangePayment = (e) => {\n    const cntStr = e.target.name.substring(7);\n    const cntNum = parseInt(cntStr, 10);\n    payment[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeDiff = (e) => {\n    const cntStr = e.target.name.substring(4);\n    const cntNum = parseInt(cntStr, 10);\n    diff[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeTotal = (e) => {\n    const cntStr = e.target.name.substring(5);\n    const cntNum = parseInt(cntStr, 10);\n    total[cntNum - 1] = e.target.value;\n  };\n\n  const onAddRow = () => {\n    if (checkAllTableField()) {\n      const tempCount = count + 1;\n      setCount(tempCount);\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n      const newCell7 = newRow.insertCell(6);\n      const newCell8 = newRow.insertCell(7);\n      const newCell9 = newRow.insertCell(8);\n\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\n      newCell2.onchange = onChangeTestName;\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\n      newCell3.onchange = onChangeQuantity;\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\n      newCell4.onchange = onChangePrice;\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\n      newCell5.onchange = onChangeAmount;\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\n      newCell6.onchange = onChangeInsurance;\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\n      newCell7.onchange = onChangePayment;\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\n      newCell8.onchange = onChangeDiff;\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\n      newCell9.onchange = onChangeTotal;\n    }\n  };\n\n  const calculateSum = (valueArr) => {\n    let sum = 0;\n    valueArr.forEach((value) => {\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\n      sum += intValue;\n    });\n    return sum;\n  };\n\n  const calculateAmountSum = () => {\n    if (checkAllTableField) {\n      if (amount.length >= 1) {\n        setAmountSum(calculateSum(amount));\n      }\n    }\n  };\n\n  const calculatePaymentSum = () => {\n    if (checkAllTableField) {\n      if (payment.length >= 1) {\n        setPaymentSum(calculateSum(payment));\n      }\n    }\n  };\n\n  const calculateTotalSum = () => {\n    if (checkAllTableField) {\n      if (total.length >= 1) {\n        setTotalSum(calculateSum(total));\n      }\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    if (submit) {\n      calculateAmountSum();\n      calculatePaymentSum();\n      calculateTotalSum();\n      setCheckForm(true);\n      // if true then save to database\n\n      if (checkForm && checkLine) {\n        const dataToSubmit = {\n          patientId,\n          caseType,\n          diagnosis,\n          testName,\n          quantity,\n          price,\n          amount,\n          insurance,\n          payment,\n          diff,\n          total,\n        };\n\n        axios.post('/api/diagnosis/fungusAndParasiteDiagnosis/saveFungusAndParasiteForm', dataToSubmit)\n          .then((response) => {\n            if (response.data.success) {\n              const dataToSubmit2 = {\n                patientId,\n                fungusAndParasite: 'done',\n              };\n\n              axios.post('/api/diagnosis/updateFungusDiagnosis', dataToSubmit2).then((res) => {\n                if (res.data.success) {\n                  // alert('Update information successfully');\n                  history.push(`/fungusForm/${patientId}`);\n                } else {\n                  // alert('Failed to update information');\n                }\n              });\n            } else {\n              alert('Không thể lưu thông tin phiếu xét nghiệm');\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"laboratory-form\">\n      <form onSubmit={handleSubmit} ref={form}>\n        {!successful && (\n        <div>\n          {/* form header */}\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-2\">\n              <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n            </div>\n            <div className=\"form-group col-md-8\">\n              <p>\n                <b>\n                  Bệnh viện Da liễu Trung ương\n                  <br />\n                  15A Phương Mai - Đống Đa - Hà Nội\n                  <br />\n                  Website:\n                  {' '}\n                  <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                    http://dalieu.vn\n                  </a>\n                </b>\n              </p>\n              <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                <b>PHIẾU NẤM - KÝ SINH TRÙNG</b>\n              </p>\n\n              <div style={{ textAlign: 'center' }}>\n                <div\n                  className=\"form-check form-check-inline\"\n                  onChange={onChangeCaseType}\n                >\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    name=\"casetype\"\n                    value=\"Thường\"\n                    required\n                  />\n                  Thường\n                </div>\n\n                <div\n                  className=\"form-check form-check-inline\"\n                  onChange={onChangeCaseType}\n                >\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    name=\"casetype\"\n                    value=\"Cấp cứu\"\n                    required\n                  />\n                  Cấp cứu\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"patientId\">\n                Mã BN:\n                {' '}\n                {patientId}\n              </label>\n            </div>\n          </div>\n\n          <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n            <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\n          </div>\n\n          {/* form fields */}\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={name}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"birthDate\">Năm sinh:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"birthDate\"\n                value={birthDate}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"gender\">Giới tính:</label>\n              <select\n                name=\"gender\"\n                className=\"form-control\"\n                value={gender}\n                disabled\n              >\n                <option value=\"Nam\">Nam</option>\n                <option value=\"Nữ\">Nữ</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"address\">Địa chỉ:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"address\"\n              value={address}\n              disabled\n            />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"patientType\">Đối tượng:</label>\n              <select\n                name=\"patientType\"\n                className=\"form-control\"\n                value={patientType}\n                disabled\n              >\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\n              </select>\n            </div>\n\n            <div className=\"form-group col-md-8\">\n              <label htmlFor=\"department\">Khoa phòng:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"department\"\n                value={department}\n                disabled\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"diagnosis\"\n              value={diagnosis}\n              onChange={onChangeDiagnosis}\n              required\n            />\n          </div>\n\n          {/* TODO: add rows to table */}\n          <table className=\"table table-bordered\" id=\"myTable\">\n            <thead>\n              <tr style={{ textAlign: 'center' }}>\n                <th scope=\"col\" style={{ width: '5%' }}>\n                  STT\n                  <br />\n                  {' '}\n                  (1)\n                </th>\n                <th scope=\"col\" style={{ width: '25%' }}>\n                  Tên xét nghiệm\n                  {' '}\n                  <br />\n                  {' '}\n                  (2)\n                </th>\n                <th scope=\"col\" style={{ width: '5%' }}>\n                  S.L\n                  {' '}\n                  <br />\n                  {' '}\n                  (3)\n                </th>\n                <th scope=\"col\">\n                  Đơn giá\n                  {' '}\n                  <br />\n                  {' '}\n                  (4)\n                </th>\n                <th scope=\"col\">\n                  Thành tiền\n                  <br />\n                  {' '}\n                  (5)\n                </th>\n                <th scope=\"col\">\n                  Bảo hiểm\n                  <br />\n                  {' '}\n                  (6)\n                </th>\n                <th scope=\"col\">\n                  BN chi trả\n                  <br />\n                  {' '}\n                  (7)\n                </th>\n                <th scope=\"col\">\n                  Chênh lệch\n                  <br />\n                  {' '}\n                  (8)\n                </th>\n                <th scope=\"col\">\n                  BN phải trả\n                  <br />\n                  {' '}\n                  (7+8)\n                </th>\n              </tr>\n            </thead>\n            <tbody />\n            <tfoot>\n              {/* add row button */}\n              <tr>\n                <td colSpan=\"9\" className=\"text-center\">\n                  <button className=\"btn btn-primary\" onClick={onAddRow}>\n                    <i className=\"bi bi-plus-square\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\n                      </svg>\n                      {' '}\n                    </i>\n                    <span style={{ marginTop: 8, marginLeft: 5 }}>\n                      Thêm dòng\n                    </span>\n                  </button>\n                </td>\n              </tr>\n              {/* TODO: complete function to count total amount */}\n              <tr>\n                <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                  Tổng\n                </td>\n                <td className=\"text-center\">\n                  {amountSum}\n                </td>\n                <td />\n                <td className=\"text-center\">\n                  {paymentSum}\n                </td>\n                <td />\n                <td className=\"text-center\">\n                  {totalSum}\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n\n          <FormFooter />\n        </div>\n        )}\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\n            Xem phiếu xét nghiệm\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default React.memo(FungusAndParasite);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js",["251","252","253","254","255","256","257","258"],"/* eslint-disable max-len */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction Result(props) {\n  // eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.patientId;\n  const form = useRef();\n  const history = useHistory();\n  const date = new Date().toLocaleString('en-GB');\n  const [count, setCount] = useState(0);\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  const [doctor, setDoctor] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [successful, setSuccessful] = useState(false);\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [result, setResult] = useState([]);\n  const [normalRate, setNormalRate] = useState([]);\n  const [unit, setUnit] = useState([]);\n  const [note, setNote] = useState([]);\n  const [machine, setMachine] = useState([]);\n\n  const [submit, setSubmit] = useState(false);\n  const [checkLine, setCheckLine] = useState(false);\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n          setDoctor(response.data.patient[0].doctor);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n  }, []);\n\n  const onChangeDiagnosis = (e) => {\n    setDiagnosis(e.target.value);\n  };\n\n  const onSubmitClick = () => {\n    setSubmit(true);\n    if (count === 0) {\n      setCheckLine(false);\n    } else {\n      setCheckLine(true);\n    }\n  };\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const onChangeTestName = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    testName[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeResult = (e) => {\n    const cntStr = e.target.name.substring(6);\n    const cntNum = parseInt(cntStr, 10);\n    result[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeNormalRate = (e) => {\n    const cntStr = e.target.name.substring(10);\n    const cntNum = parseInt(cntStr, 10);\n    normalRate[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeUnit = (e) => {\n    const cntStr = e.target.name.substring(4);\n    const cntNum = parseInt(cntStr, 10);\n    unit[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeNote = (e) => {\n    const cntStr = e.target.name.substring(4);\n    const cntNum = parseInt(cntStr, 10);\n    note[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeMachine = (e) => {\n    const cntStr = e.target.name.substring(7);\n    const cntNum = parseInt(cntStr, 10);\n    machine[cntNum - 1] = e.target.value;\n  };\n\n  const onAddRow = () => {\n    if (checkAllTableField()) {\n      const tempCount = count + 1;\n      setCount(tempCount);\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\n      const value2 = result[tempCount - 1] ? result[tempCount - 1] : '';\n      const value3 = normalRate[tempCount - 1] ? normalRate[tempCount - 1] : '';\n      const value4 = unit[tempCount - 1] ? unit[tempCount - 1] : '';\n      const value5 = note[tempCount - 1] ? note[tempCount - 1] : '';\n      const value6 = machine[tempCount - 1] ? machine[tempCount - 1] : '';\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\n      newCell1.onchange = onChangeTestName;\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"result${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\n      newCell2.onchange = onChangeResult;\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"normalrate${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\n      newCell3.onchange = onChangeNormalRate;\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"unit${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\n      newCell4.onchange = onChangeUnit;\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"note${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\n      newCell5.onchange = onChangeNote;\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"machine${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\n      newCell6.onchange = onChangeMachine;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    if (submit) {\n      if (checkLine) {\n        const dataToSubmit = {\n          patientId,\n          diagnosis,\n          testName,\n          result,\n          normalRate,\n          unit,\n          note,\n          machine,\n        };\n\n        axios.post('/api/diagnosis/result/saveResultForm', dataToSubmit)\n          .then((response) => {\n            if (response.data.success) {\n              const dataToSubmit2 = {\n                patientId,\n                result: 'done',\n              };\n\n              axios.post('/api/diagnosis/updateResultDiagnosis', dataToSubmit2).then((res) => {\n                if (res.data.success) {\n                  // alert('Update information successfully');\n                  history.push(`/resultForm/${patientId}`);\n                } else {\n                  // alert('Failed to update information');\n                }\n              });\n            } else {\n              alert('Không thể lưu thông tin phiếu xét nghiệm');\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"laboratory-form\">\n      <form onSubmit={handleSubmit} ref={form}>\n        {!successful && (\n          <div>\n            {/* form header */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU KẾT QUẢ XÉT NGHIỆM</b>\n                </p>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <div>\n                  <label htmlFor=\"patientId\">\n                    Mã BN:\n                    {' '}\n                    {patientId}\n                  </label>\n                </div>\n                <div>\n                  <label>\n                    Ngày NM:\n                    {' '}\n                    {date.substring(0, 10)}\n                  </label>\n                </div>\n                <div>\n                  <label>\n                    Giờ NM:\n                    {' '}\n                    {date.substring(11)}\n                  </label>\n                </div>\n              </div>\n\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  disabled\n                />\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"birthDate\">Năm sinh:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"birthDate\"\n                  value={birthDate}\n                  disabled\n                />\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"gender\">Giới tính:</label>\n                <select\n                  name=\"gender\"\n                  className=\"form-control\"\n                  value={gender}\n                  disabled\n                >\n                  <option value=\"Nam\">Nam</option>\n                  <option value=\"Nữ\">Nữ</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Địa chỉ:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                value={address}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"diagnosis\"\n                  value={diagnosis}\n                  onChange={onChangeDiagnosis}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"number\">Số BHYT:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"number\"\n                  value=\"\"\n                  disabled\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"patientType\">Đối tượng:</label>\n                <select\n                  name=\"patientType\"\n                  className=\"form-control\"\n                  value={patientType}\n                  disabled\n                >\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\n                </select>\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"department\">Khoa phòng:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"department\"\n                  value={department}\n                  disabled\n                />\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"doctor\">Bác sĩ chỉ định:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"doctor\"\n                  value={doctor}\n                  disabled\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-8\">\n                <label htmlFor=\"getPerson\">Người lấy mẫu:</label>\n              </div>\n\n              <div className=\"form-group \">\n                <label htmlFor=\"get\">\n                  Thời gian lấy mẫu:\n                  {date.substring(11)}\n                  {' '}\n                  {' '}\n                  {' '}\n                  {date.substring(0, 10)}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-8\">\n                <label htmlFor=\"receivePerson\">Người nhận mẫu: Administrator</label>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"receive\">\n                  {' '}\n                  Thời gian nhận mẫu:\n                  {date.substring(11)}\n                  {' '}\n                  {' '}\n                  {' '}\n                  {date.substring(0, 10)}\n                </label>\n              </div>\n            </div>\n\n            {/* TODO: add rows to table */}\n            <table className=\"table table-bordered\" id=\"myTable\">\n              <thead>\n                <tr style={{ textAlign: 'center' }}>\n                  <th scope=\"col\" style={{ width: '10%' }}>\n                    TÊN XÉT NGHIỆM\n                  </th>\n                  <th scope=\"col\" style={{ width: '10%' }}>\n                    KẾT QUẢ\n                  </th>\n                  <th scope=\"col\" style={{ width: '15%' }}>\n                    TRỊ SỐ BÌNH THƯỜNG\n                  </th>\n                  <th scope=\"col\">\n                    ĐƠN VỊ\n                  </th>\n                  <th scope=\"col\">\n                    GHI CHÚ\n                  </th>\n                  <th scope=\"col\">\n                    MÁY XÉT NGHIỆM\n                  </th>\n                </tr>\n              </thead>\n              <tbody />\n              <tfoot>\n                {/* add row button */}\n                <tr>\n                  <td colSpan=\"6\" className=\"text-center\">\n                    <button className=\"btn btn-primary\" onClick={onAddRow}>\n                      <i className=\"bi bi-plus-square\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\n                          <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\n                        </svg>\n                        {' '}\n                      </i>\n                      <span style={{ marginTop: 8, marginLeft: 5 }}>\n                        Thêm dòng\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n            <br />\n            <br />\n            <br />\n            <br />\n\n            <FormFooter />\n          </div>\n        )}\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\n            Xem phiếu xét nghiệm\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default React.memo(Result);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js",["259","260","261","262","263","264","265","266","267","268"],"/* eslint-disable max-len */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction Biochemical(props) {\n  // eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.patientId;\n  const form = useRef();\n  const history = useHistory();\n  const [count, setCount] = useState(0);\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  // const [doctor, setDoctor] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [successful, setSuccessful] = useState(false);\n\n  const [caseType, setCaseType] = useState();\n  const [initialSample, setInitialSample] = useState();\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  const [price, setPrice] = useState([]);\n  const [amount, setAmount] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [payment, setPayment] = useState([]);\n  const [diff, setDiff] = useState([]);\n  const [total, setTotal] = useState([]);\n\n  const [amountSum, setAmountSum] = useState(0);\n  const [paymentSum, setPaymentSum] = useState(0);\n  const [totalSum, setTotalSum] = useState(0);\n\n  const [submit, setSubmit] = useState(false);\n  const [checkLine, setCheckLine] = useState(false);\n  const [checkForm, setCheckForm] = useState(false);\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n  }, []);\n\n  const onChangeDiagnosis = (e) => {\n    setDiagnosis(e.target.value);\n  };\n\n  const onChangeCaseType = (e) => {\n    setCaseType(e.target.value);\n  };\n\n  const onChangeInitialSample = (e) => {\n    setInitialSample(e.target.value);\n  };\n\n  const onSubmitClick = () => {\n    setSubmit(true);\n    if (count === 0) {\n      setCheckLine(false);\n    } else {\n      setCheckLine(true);\n    }\n  };\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const onChangeTestName = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    testName[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeQuantity = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    quantity[cntNum - 1] = e.target.value;\n  };\n\n  const onChangePrice = (e) => {\n    const cntStr = e.target.name.substring(5);\n    const cntNum = parseInt(cntStr, 10);\n    price[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeAmount = (e) => {\n    const cntStr = e.target.name.substring(6);\n    const cntNum = parseInt(cntStr, 10);\n    amount[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeInsurance = (e) => {\n    const cntStr = e.target.name.substring(9);\n    const cntNum = parseInt(cntStr, 10);\n    insurance[cntNum - 1] = e.target.value;\n  };\n\n  const onChangePayment = (e) => {\n    const cntStr = e.target.name.substring(7);\n    const cntNum = parseInt(cntStr, 10);\n    payment[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeDiff = (e) => {\n    const cntStr = e.target.name.substring(4);\n    const cntNum = parseInt(cntStr, 10);\n    diff[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeTotal = (e) => {\n    const cntStr = e.target.name.substring(5);\n    const cntNum = parseInt(cntStr, 10);\n    total[cntNum - 1] = e.target.value;\n  };\n\n  const onAddRow = () => {\n    if (checkAllTableField()) {\n      const tempCount = count + 1;\n      setCount(tempCount);\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n      const newCell7 = newRow.insertCell(6);\n      const newCell8 = newRow.insertCell(7);\n      const newCell9 = newRow.insertCell(8);\n\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\n      newCell2.onchange = onChangeTestName;\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\n      newCell3.onchange = onChangeQuantity;\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\n      newCell4.onchange = onChangePrice;\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\n      newCell5.onchange = onChangeAmount;\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\n      newCell6.onchange = onChangeInsurance;\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\n      newCell7.onchange = onChangePayment;\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\n      newCell8.onchange = onChangeDiff;\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\n      newCell9.onchange = onChangeTotal;\n    }\n  };\n\n  const calculateSum = (valueArr) => {\n    let sum = 0;\n    valueArr.forEach((value) => {\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\n      sum += intValue;\n    });\n    return sum;\n  };\n\n  const calculateAmountSum = () => {\n    if (checkAllTableField) {\n      if (amount.length >= 1) {\n        setAmountSum(calculateSum(amount));\n      }\n    }\n  };\n\n  const calculatePaymentSum = () => {\n    if (checkAllTableField) {\n      if (payment.length >= 1) {\n        setPaymentSum(calculateSum(payment));\n      }\n    }\n  };\n\n  const calculateTotalSum = () => {\n    if (checkAllTableField) {\n      if (total.length >= 1) {\n        setTotalSum(calculateSum(total));\n      }\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    if (submit) {\n      calculateAmountSum();\n      calculatePaymentSum();\n      calculateTotalSum();\n      setCheckForm(true);\n      // if true then save to database\n\n      if (checkForm && checkLine) {\n        const dataToSubmit = {\n          patientId,\n          initialSample,\n          caseType,\n          diagnosis,\n          testName,\n          quantity,\n          price,\n          amount,\n          insurance,\n          payment,\n          diff,\n          total,\n        };\n\n        axios.post('/api/diagnosis/biochemicalDiagnosis/saveBiochemicalForm', dataToSubmit)\n          .then((response) => {\n            if (response.data.success) {\n              const dataToSubmit2 = {\n                patientId,\n                biochemical: 'done',\n              };\n\n              axios.post('/api/diagnosis/updateBiochemicalDiagnosis', dataToSubmit2).then((res) => {\n                if (res.data.success) {\n                  // alert('Update information successfully');\n                  history.push(`/biochemicalForm/${patientId}`);\n                } else {\n                  // alert('Failed to update information');\n                }\n              });\n            } else {\n              alert('Không thể lưu thông tin phiếu xét nghiệm');\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"laboratory-form\">\n      <form onSubmit={handleSubmit} ref={form}>\n        {!successful && (\n          <div>\n            {/* form header */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU SINH HÓA MÁU</b>\n                </p>\n\n                <div style={{ textAlign: 'center' }}>\n                  <div\n                    className=\"form-check form-check-inline\"\n                    onChange={onChangeCaseType}\n                  >\n                    <input\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      name=\"casetype\"\n                      value=\"Thường\"\n                      required\n                    />\n                    Thường\n                  </div>\n\n                  <div\n                    className=\"form-check form-check-inline\"\n                    onChange={onChangeCaseType}\n                  >\n                    <input\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      name=\"casetype\"\n                      value=\"Cấp cứu\"\n                      required\n                    />\n                    Cấp cứu\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"patientId\">\n                  Mã BN:\n                  {' '}\n                  {patientId}\n                </label>\n              </div>\n            </div>\n\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              <div className=\"form-group row justify-content-center\">\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\n                  Mẫu ban đầu:\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control col-md-2\"\n                  name=\"initialSample\"\n                  value={initialSample}\n                  onChange={onChangeInitialSample}\n                  required\n                />\n              </div>\n              <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  disabled\n                />\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"birthDate\">Năm sinh:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"birthDate\"\n                  value={birthDate}\n                  disabled\n                />\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"gender\">Giới tính:</label>\n                <select\n                  name=\"gender\"\n                  className=\"form-control\"\n                  value={gender}\n                  disabled\n                >\n                  <option value=\"Nam\">Nam</option>\n                  <option value=\"Nữ\">Nữ</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Địa chỉ:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                value={address}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"patientType\">Đối tượng:</label>\n                <select\n                  name=\"patientType\"\n                  className=\"form-control\"\n                  value={patientType}\n                  disabled\n                >\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\n                </select>\n              </div>\n\n              <div className=\"form-group col-md-8\">\n                <label htmlFor=\"department\">Khoa phòng:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"department\"\n                  value={department}\n                  disabled\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"diagnosis\"\n                value={diagnosis}\n                onChange={onChangeDiagnosis}\n                required\n              />\n            </div>\n\n            {/* TODO: add rows to table */}\n            <table className=\"table table-bordered\" id=\"myTable\">\n              <thead>\n                <tr style={{ textAlign: 'center' }}>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    STT\n                    <br />\n                    {' '}\n                    (1)\n                  </th>\n                  <th scope=\"col\" style={{ width: '25%' }}>\n                    Tên xét nghiệm\n                    {' '}\n                    <br />\n                    {' '}\n                    (2)\n                  </th>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    S.L\n                    {' '}\n                    <br />\n                    {' '}\n                    (3)\n                  </th>\n                  <th scope=\"col\">\n                    Đơn giá\n                    {' '}\n                    <br />\n                    {' '}\n                    (4)\n                  </th>\n                  <th scope=\"col\">\n                    Thành tiền\n                    <br />\n                    {' '}\n                    (5)\n                  </th>\n                  <th scope=\"col\">\n                    Bảo hiểm\n                    <br />\n                    {' '}\n                    (6)\n                  </th>\n                  <th scope=\"col\">\n                    BN chi trả\n                    <br />\n                    {' '}\n                    (7)\n                  </th>\n                  <th scope=\"col\">\n                    Chênh lệch\n                    <br />\n                    {' '}\n                    (8)\n                  </th>\n                  <th scope=\"col\">\n                    BN phải trả\n                    <br />\n                    {' '}\n                    (7+8)\n                  </th>\n                </tr>\n              </thead>\n              <tbody />\n              <tfoot>\n                {/* add row button */}\n                <tr>\n                  <td colSpan=\"9\" className=\"text-center\">\n                    <button className=\"btn btn-primary\" onClick={onAddRow}>\n                      <i className=\"bi bi-plus-square\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\n                          <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\n                        </svg>\n                        {' '}\n                      </i>\n                      <span style={{ marginTop: 8, marginLeft: 5 }}>\n                        Thêm dòng\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n                {/* TODO: complete function to count total amount */}\n                <tr>\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Tổng\n                  </td>\n                  <td className=\"text-center\">\n                    {amountSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {paymentSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {totalSum}\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <FormFooter />\n          </div>\n        )}\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\n            Xem phiếu xét nghiệm\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default React.memo(Biochemical);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js",["269","270"],"/* eslint-disable new-cap */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/button-has-type */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction FungusForm(props) {\n// eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.id;\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n\n  const [caseType, setCaseType] = useState();\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  const [price, setPrice] = useState([]);\n  const [amount, setAmount] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [payment, setPayment] = useState([]);\n  const [diff, setDiff] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  const [amountSum, setAmountSum] = useState(0);\n  const [paymentSum, setPaymentSum] = useState(0);\n  const [totalSum, setTotalSum] = useState(0);\n  const [done, setDone] = useState(false);\n\n  const calculateSum = (valueArr) => {\n    let sum = 0;\n    valueArr.forEach((value) => {\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\n      sum += intValue;\n    });\n    return sum;\n  };\n\n  const calculateAmountSum = () => {\n    if (amount.length >= 1) {\n      setAmountSum(calculateSum(amount));\n    }\n  };\n\n  const calculatePaymentSum = () => {\n    if (payment.length >= 1) {\n      setPaymentSum(calculateSum(payment));\n    }\n  };\n\n  const calculateTotalSum = () => {\n    if (total.length >= 1) {\n      setTotalSum(calculateSum(total));\n    }\n  };\n\n  const onAddRow = () => {\n    for (let i = 0; i < testName.length; i += 1) {\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n      const newCell7 = newRow.insertCell(6);\n      const newCell8 = newRow.insertCell(7);\n      const newCell9 = newRow.insertCell(8);\n\n      const value1 = testName[i];\n      const value2 = quantity[i];\n      const value3 = price[i];\n      const value4 = amount[i];\n      const value5 = insurance[i] === undefined ? '' : insurance[i];\n      const value6 = payment[i];\n      const value7 = diff[i] === undefined ? '' : diff[i];\n      const value8 = total[i];\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${i + 1}</div>`;\n      newCell2.innerHTML = `<div class=\"text-center\">${value1}</div>`;\n      newCell3.innerHTML = `<div class=\"text-center\">${value2}</div>`;\n      newCell4.innerHTML = `<div class=\"text-center\">${value3}</div>`;\n      newCell5.innerHTML = `<div class=\"text-center\">${value4}</div>`;\n      newCell6.innerHTML = `<div class=\"text-center\">${value5}</div>`;\n      newCell7.innerHTML = `<div class=\"text-center\">${value6}</div>`;\n      newCell8.innerHTML = `<div class=\"text-center\">${value7}</div>`;\n      newCell9.innerHTML = `<div class=\"text-center\">${value8}</div>`;\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n\n    const dataToSubmit = {\n      patientId,\n    };\n\n    axios.post('/api/diagnosis/fungusAndParasiteDiagnosis/getFungusDiagnosisById', dataToSubmit)\n      .then((response) => {\n        if (response.data.success) {\n          if (response.data.doc[0] !== undefined) {\n            setCaseType(response.data.doc[0].caseType);\n            setDiagnosis(response.data.doc[0].fungusDiagnosis);\n            setTestName(response.data.doc[0].testname);\n            setQuantity(response.data.doc[0].quantity);\n            setPrice(response.data.doc[0].price);\n            setAmount(response.data.doc[0].amount);\n            setInsurance(response.data.doc[0].insurance);\n            setPayment(response.data.doc[0].payment);\n            setDiff(response.data.doc[0].diff);\n            setTotal(response.data.doc[0].total);\n            setDone(true);\n          }\n        } else {\n          alert('Không thể lấy thông tin phiếu xét nghiệm nấm - kí sinh trùng của bệnh nhân');\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (done) {\n      calculateAmountSum();\n      calculatePaymentSum();\n      calculateTotalSum();\n      onAddRow();\n      setShowForm(true);\n    }\n  }, [done]);\n\n  const downloadForm = () => {\n    const divToDownload = document.getElementById('download-form');\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\n      const divImage = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(divImage);\n      const width = 210;\n      const height = (imgProps.height * width) / imgProps.width;\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\n      const title = `${patientId}_phieunamkisinhtrung.pdf`;\n      pdf.save(title);\n    });\n  };\n\n  return (\n    <>\n      {done ? (\n        <div className=\"outer-form\">\n          <div className=\"laboratory-form\" id=\"download-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU NẤM - KÍ SINH TRÙNG</b>\n                </p>\n\n                <div style={{ textAlign: 'center' }}>\n                  {caseType === 'Thường' ? (\n                    <>\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          defaultChecked\n                          value=\"Thường\"\n                          required\n                          disabled\n                        />\n                        Thường\n                      </div>\n\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          value=\"Cấp cứu\"\n                          required\n                          disabled\n                        />\n                        Cấp cứu\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          value=\"Thường\"\n                          required\n                          disabled\n                        />\n                        Thường\n                      </div>\n\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          defaultChecked\n                          value=\"Cấp cứu\"\n                          required\n                          disabled\n                        />\n                        Cấp cứu\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"patientId\">\n                  Mã BN:\n                  {' '}\n                  {patientId}\n                </label>\n              </div>\n            </div>\n\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"username\">\n                  - Họ tên người bệnh:\n                  {' '}\n                  {name}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"birthDate\">\n                  Năm sinh:\n                  {' '}\n                  {birthDate}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <label htmlFor=\"gender\">\n                  Giới tính:\n                  {' '}\n                  {gender}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">\n                - Địa chỉ:\n                {' '}\n                {address}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"patientType\">\n                - Đối tượng:\n                {' '}\n                {patientType}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"department\">\n                - Khoa phòng:\n                {' '}\n                PK\n                {department}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"diagnosis\">\n                - Chẩn đoán:\n                {' '}\n                {diagnosis}\n              </label>\n            </div>\n\n            {/* TODO: add rows to table */}\n            <table className=\"table table-bordered\" id=\"myTable\">\n              <thead>\n                <tr style={{ textAlign: 'center' }}>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    STT\n                    <br />\n                    {' '}\n                    (1)\n                  </th>\n                  <th scope=\"col\" style={{ width: '25%' }}>\n                    Tên xét nghiệm\n                    {' '}\n                    <br />\n                    {' '}\n                    (2)\n                  </th>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    S.L\n                    {' '}\n                    <br />\n                    {' '}\n                    (3)\n                  </th>\n                  <th scope=\"col\">\n                    Đơn giá\n                    {' '}\n                    <br />\n                    {' '}\n                    (4)\n                  </th>\n                  <th scope=\"col\">\n                    Thành tiền\n                    <br />\n                    {' '}\n                    (5)\n                  </th>\n                  <th scope=\"col\">\n                    Bảo hiểm\n                    <br />\n                    {' '}\n                    (6)\n                  </th>\n                  <th scope=\"col\">\n                    BN chi trả\n                    <br />\n                    {' '}\n                    (7)\n                  </th>\n                  <th scope=\"col\">\n                    Chênh lệch\n                    <br />\n                    {' '}\n                    (8)\n                  </th>\n                  <th scope=\"col\">\n                    BN phải trả\n                    <br />\n                    {' '}\n                    (7+8)\n                  </th>\n                </tr>\n              </thead>\n              <tbody />\n              <tfoot>\n                <tr />\n                {/* TODO: complete function to count total amount */}\n                <tr>\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Tổng\n                  </td>\n                  <td className=\"text-center\">\n                    {amountSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {paymentSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {totalSum}\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <FormFooter />\n          </div>\n        </div>\n      ) : ((\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\n        </div>\n      ))}\n\n      {done && showForm && (\n      <div>\n        <br />\n        <div className=\"form-row justify-content-center\">\n\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\n            Tải phiếu xét nghiệm\n          </button>\n        </div>\n      </div>\n      )}\n    </>\n  );\n}\n\nexport default FungusForm;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js",["271","272"],"/* eslint-disable new-cap */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/button-has-type */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction BiochemicalForm(props) {\n// eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.id;\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n\n  const [caseType, setCaseType] = useState();\n  const [initialSample, setInitialSample] = useState();\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  const [price, setPrice] = useState([]);\n  const [amount, setAmount] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [payment, setPayment] = useState([]);\n  const [diff, setDiff] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  const [amountSum, setAmountSum] = useState(0);\n  const [paymentSum, setPaymentSum] = useState(0);\n  const [totalSum, setTotalSum] = useState(0);\n  const [done, setDone] = useState(false);\n\n  const calculateSum = (valueArr) => {\n    let sum = 0;\n    valueArr.forEach((value) => {\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\n      sum += intValue;\n    });\n    return sum;\n  };\n\n  const calculateAmountSum = () => {\n    if (amount.length >= 1) {\n      setAmountSum(calculateSum(amount));\n    }\n  };\n\n  const calculatePaymentSum = () => {\n    if (payment.length >= 1) {\n      setPaymentSum(calculateSum(payment));\n    }\n  };\n\n  const calculateTotalSum = () => {\n    if (total.length >= 1) {\n      setTotalSum(calculateSum(total));\n    }\n  };\n\n  const onAddRow = () => {\n    for (let i = 0; i < testName.length; i += 1) {\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n      const newCell7 = newRow.insertCell(6);\n      const newCell8 = newRow.insertCell(7);\n      const newCell9 = newRow.insertCell(8);\n\n      const value1 = testName[i];\n      const value2 = quantity[i];\n      const value3 = price[i];\n      const value4 = amount[i];\n      const value5 = insurance[i] === undefined ? '' : insurance[i];\n      const value6 = payment[i];\n      const value7 = diff[i] === undefined ? '' : diff[i];\n      const value8 = total[i];\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${i + 1}</div>`;\n      newCell2.innerHTML = `<div class=\"text-center\">${value1}</div>`;\n      newCell3.innerHTML = `<div class=\"text-center\">${value2}</div>`;\n      newCell4.innerHTML = `<div class=\"text-center\">${value3}</div>`;\n      newCell5.innerHTML = `<div class=\"text-center\">${value4}</div>`;\n      newCell6.innerHTML = `<div class=\"text-center\">${value5}</div>`;\n      newCell7.innerHTML = `<div class=\"text-center\">${value6}</div>`;\n      newCell8.innerHTML = `<div class=\"text-center\">${value7}</div>`;\n      newCell9.innerHTML = `<div class=\"text-center\">${value8}</div>`;\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n\n    const dataToSubmit = {\n      patientId,\n    };\n\n    axios.post('/api/diagnosis/biochemicalDiagnosis/getBiochemicalDiagnosisById', dataToSubmit)\n      .then((response) => {\n        if (response.data.success) {\n          if (response.data.doc[0] !== undefined) {\n            setCaseType(response.data.doc[0].caseType);\n            setInitialSample(response.data.doc[0].initialSample);\n            setDiagnosis(response.data.doc[0].biochemicalDiagnosis);\n            setTestName(response.data.doc[0].testname);\n            setQuantity(response.data.doc[0].quantity);\n            setPrice(response.data.doc[0].price);\n            setAmount(response.data.doc[0].amount);\n            setInsurance(response.data.doc[0].insurance);\n            setPayment(response.data.doc[0].payment);\n            setDiff(response.data.doc[0].diff);\n            setTotal(response.data.doc[0].total);\n            setDone(true);\n          }\n        } else {\n          alert('Không thể lấy thông tin phiếu xét nghiệm sinh hóa máu của bệnh nhân');\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (done) {\n      calculateAmountSum();\n      calculatePaymentSum();\n      calculateTotalSum();\n      onAddRow();\n      setShowForm(true);\n    }\n  }, [done]);\n\n  const downloadForm = () => {\n    const divToDownload = document.getElementById('download-form');\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\n      const divImage = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(divImage);\n      const width = 210;\n      const height = (imgProps.height * width) / imgProps.width;\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\n      const title = `${patientId}_phieusinhhoamau.pdf`;\n      pdf.save(title);\n    });\n  };\n\n  return (\n    <>\n      {done ? (\n        <div className=\"outer-form\">\n          <div className=\"laboratory-form\" id=\"download-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU SINH HÓA MÁU</b>\n                </p>\n\n                <div style={{ textAlign: 'center' }}>\n                  {caseType === 'Thường' ? (\n                    <>\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          defaultChecked\n                          value=\"Thường\"\n                          required\n                          disabled\n                        />\n                        Thường\n                      </div>\n\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          value=\"Cấp cứu\"\n                          required\n                          disabled\n                        />\n                        Cấp cứu\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          value=\"Thường\"\n                          required\n                          disabled\n                        />\n                        Thường\n                      </div>\n\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          defaultChecked\n                          value=\"Cấp cứu\"\n                          required\n                          disabled\n                        />\n                        Cấp cứu\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"patientId\">\n                  Mã BN:\n                  {' '}\n                  {patientId}\n                </label>\n              </div>\n            </div>\n\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              <div className=\"form-group row justify-content-center\">\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\n                  Mẫu ban đầu:\n                  {' '}\n                  {initialSample}\n                </label>\n              </div>\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"username\">\n                  - Họ tên người bệnh:\n                  {' '}\n                  {name}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"birthDate\">\n                  Năm sinh:\n                  {' '}\n                  {birthDate}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <label htmlFor=\"gender\">\n                  Giới tính:\n                  {' '}\n                  {gender}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">\n                - Địa chỉ:\n                {' '}\n                {address}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"patientType\">\n                - Đối tượng:\n                {' '}\n                {patientType}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"department\">\n                - Khoa phòng:\n                {' '}\n                PK\n                {department}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"diagnosis\">\n                - Chẩn đoán:\n                {' '}\n                {diagnosis}\n              </label>\n            </div>\n\n            {/* TODO: add rows to table */}\n            <table className=\"table table-bordered\" id=\"myTable\">\n              <thead>\n                <tr style={{ textAlign: 'center' }}>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    STT\n                    <br />\n                    {' '}\n                    (1)\n                  </th>\n                  <th scope=\"col\" style={{ width: '25%' }}>\n                    Tên xét nghiệm\n                    {' '}\n                    <br />\n                    {' '}\n                    (2)\n                  </th>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    S.L\n                    {' '}\n                    <br />\n                    {' '}\n                    (3)\n                  </th>\n                  <th scope=\"col\">\n                    Đơn giá\n                    {' '}\n                    <br />\n                    {' '}\n                    (4)\n                  </th>\n                  <th scope=\"col\">\n                    Thành tiền\n                    <br />\n                    {' '}\n                    (5)\n                  </th>\n                  <th scope=\"col\">\n                    Bảo hiểm\n                    <br />\n                    {' '}\n                    (6)\n                  </th>\n                  <th scope=\"col\">\n                    BN chi trả\n                    <br />\n                    {' '}\n                    (7)\n                  </th>\n                  <th scope=\"col\">\n                    Chênh lệch\n                    <br />\n                    {' '}\n                    (8)\n                  </th>\n                  <th scope=\"col\">\n                    BN phải trả\n                    <br />\n                    {' '}\n                    (7+8)\n                  </th>\n                </tr>\n              </thead>\n              <tbody />\n              <tfoot>\n                <tr />\n                {/* TODO: complete function to count total amount */}\n                <tr>\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Tổng\n                  </td>\n                  <td className=\"text-center\">\n                    {amountSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {paymentSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {totalSum}\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <FormFooter />\n          </div>\n        </div>\n      ) : ((\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\n        </div>\n      ))}\n\n      {done && showForm && (\n      <div>\n        <br />\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\n            Tải phiếu xét nghiệm\n          </button>\n        </div>\n      </div>\n      )}\n    </>\n  );\n}\n\nexport default BiochemicalForm;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js",["273","274","275","276","277","278","279","280","281","282"],"/* eslint-disable max-len */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction HematologyAndImmunology(props) {\n  // eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.patientId;\n  const form = useRef();\n  const history = useHistory();\n  const [count, setCount] = useState(0);\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  // const [doctor, setDoctor] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [successful, setSuccessful] = useState(false);\n\n  const [caseType, setCaseType] = useState();\n  const [initialSample, setInitialSample] = useState();\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  const [price, setPrice] = useState([]);\n  const [amount, setAmount] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [payment, setPayment] = useState([]);\n  const [diff, setDiff] = useState([]);\n  const [total, setTotal] = useState([]);\n\n  const [amountSum, setAmountSum] = useState(0);\n  const [paymentSum, setPaymentSum] = useState(0);\n  const [totalSum, setTotalSum] = useState(0);\n\n  const [submit, setSubmit] = useState(false);\n  const [checkLine, setCheckLine] = useState(false);\n  const [checkForm, setCheckForm] = useState(false);\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n  }, []);\n\n  const onChangeDiagnosis = (e) => {\n    setDiagnosis(e.target.value);\n  };\n\n  const onChangeCaseType = (e) => {\n    setCaseType(e.target.value);\n  };\n\n  const onChangeInitialSample = (e) => {\n    setInitialSample(e.target.value);\n  };\n\n  const onSubmitClick = () => {\n    setSubmit(true);\n    if (count === 0) {\n      setCheckLine(false);\n    } else {\n      setCheckLine(true);\n    }\n  };\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const onChangeTestName = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    testName[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeQuantity = (e) => {\n    const cntStr = e.target.name.substring(8);\n    const cntNum = parseInt(cntStr, 10);\n    quantity[cntNum - 1] = e.target.value;\n  };\n\n  const onChangePrice = (e) => {\n    const cntStr = e.target.name.substring(5);\n    const cntNum = parseInt(cntStr, 10);\n    price[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeAmount = (e) => {\n    const cntStr = e.target.name.substring(6);\n    const cntNum = parseInt(cntStr, 10);\n    amount[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeInsurance = (e) => {\n    const cntStr = e.target.name.substring(9);\n    const cntNum = parseInt(cntStr, 10);\n    insurance[cntNum - 1] = e.target.value;\n  };\n\n  const onChangePayment = (e) => {\n    const cntStr = e.target.name.substring(7);\n    const cntNum = parseInt(cntStr, 10);\n    payment[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeDiff = (e) => {\n    const cntStr = e.target.name.substring(4);\n    const cntNum = parseInt(cntStr, 10);\n    diff[cntNum - 1] = e.target.value;\n  };\n\n  const onChangeTotal = (e) => {\n    const cntStr = e.target.name.substring(5);\n    const cntNum = parseInt(cntStr, 10);\n    total[cntNum - 1] = e.target.value;\n  };\n\n  const onAddRow = () => {\n    if (checkAllTableField()) {\n      const tempCount = count + 1;\n      setCount(tempCount);\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n      const newCell7 = newRow.insertCell(6);\n      const newCell8 = newRow.insertCell(7);\n      const newCell9 = newRow.insertCell(8);\n\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\n      newCell2.onchange = onChangeTestName;\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\n      newCell3.onchange = onChangeQuantity;\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\n      newCell4.onchange = onChangePrice;\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\n      newCell5.onchange = onChangeAmount;\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\n      newCell6.onchange = onChangeInsurance;\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\n      newCell7.onchange = onChangePayment;\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\n      newCell8.onchange = onChangeDiff;\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\n      newCell9.onchange = onChangeTotal;\n    }\n  };\n\n  const calculateSum = (valueArr) => {\n    let sum = 0;\n    valueArr.forEach((value) => {\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\n      sum += intValue;\n    });\n    return sum;\n  };\n\n  const calculateAmountSum = () => {\n    if (checkAllTableField) {\n      if (amount.length >= 1) {\n        setAmountSum(calculateSum(amount));\n      }\n    }\n  };\n\n  const calculatePaymentSum = () => {\n    if (checkAllTableField) {\n      if (payment.length >= 1) {\n        setPaymentSum(calculateSum(payment));\n      }\n    }\n  };\n\n  const calculateTotalSum = () => {\n    if (checkAllTableField) {\n      if (total.length >= 1) {\n        setTotalSum(calculateSum(total));\n      }\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    if (submit) {\n      calculateAmountSum();\n      calculatePaymentSum();\n      calculateTotalSum();\n      setCheckForm(true);\n      // if true then save to database\n\n      if (checkForm && checkLine) {\n        const dataToSubmit = {\n          patientId,\n          initialSample,\n          caseType,\n          diagnosis,\n          testName,\n          quantity,\n          price,\n          amount,\n          insurance,\n          payment,\n          diff,\n          total,\n        };\n\n        axios.post('/api/diagnosis/hematologyDiagnosis/saveHematologyForm', dataToSubmit)\n          .then((response) => {\n            if (response.data.success) {\n              const dataToSubmit2 = {\n                patientId,\n                hematologyAndImmunology: 'done',\n              };\n\n              axios.post('/api/diagnosis/updateHematologyDiagnosis', dataToSubmit2).then((res) => {\n                if (res.data.success) {\n                  // alert('Update information successfully');\n                  history.push(`/hematologyForm/${patientId}`);\n                } else {\n                  // alert('Failed to update information');\n                }\n              });\n            } else {\n              alert('Không thể lưu thông tin phiếu xét nghiệm');\n            }\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"laboratory-form\">\n      <form onSubmit={handleSubmit} ref={form}>\n        {!successful && (\n        <div>\n          {/* form header */}\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-2\">\n              <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n            </div>\n            <div className=\"form-group col-md-8\">\n              <p>\n                <b>\n                  Bệnh viện Da liễu Trung ương\n                  <br />\n                  15A Phương Mai - Đống Đa - Hà Nội\n                  <br />\n                  Website:\n                  {' '}\n                  <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                    http://dalieu.vn\n                  </a>\n                </b>\n              </p>\n              <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                <b>PHIẾU HUYẾT HỌC - MIỄN DỊCH</b>\n              </p>\n\n              <div style={{ textAlign: 'center' }}>\n                <div\n                  className=\"form-check form-check-inline\"\n                  onChange={onChangeCaseType}\n                >\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    name=\"casetype\"\n                    value=\"Thường\"\n                    required\n                  />\n                  Thường\n                </div>\n\n                <div\n                  className=\"form-check form-check-inline\"\n                  onChange={onChangeCaseType}\n                >\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    name=\"casetype\"\n                    value=\"Cấp cứu\"\n                    required\n                  />\n                  Cấp cứu\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"patientId\">\n                Mã BN:\n                {' '}\n                {patientId}\n              </label>\n            </div>\n          </div>\n\n          <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n            <div className=\"form-group row justify-content-center\">\n              <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\n                Mẫu ban đầu:\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control col-md-2\"\n                name=\"initialSample\"\n                value={initialSample}\n                onChange={onChangeInitialSample}\n                required\n              />\n            </div>\n            <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\n          </div>\n\n          {/* form fields */}\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={name}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"birthDate\">Năm sinh:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"birthDate\"\n                value={birthDate}\n                disabled\n              />\n            </div>\n\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"gender\">Giới tính:</label>\n              <select\n                name=\"gender\"\n                className=\"form-control\"\n                value={gender}\n                disabled\n              >\n                <option value=\"Nam\">Nam</option>\n                <option value=\"Nữ\">Nữ</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"address\">Địa chỉ:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"address\"\n              value={address}\n              disabled\n            />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"patientType\">Đối tượng:</label>\n              <select\n                name=\"patientType\"\n                className=\"form-control\"\n                value={patientType}\n                disabled\n              >\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\n              </select>\n            </div>\n\n            <div className=\"form-group col-md-8\">\n              <label htmlFor=\"department\">Khoa phòng:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"department\"\n                value={department}\n                disabled\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"diagnosis\"\n              value={diagnosis}\n              onChange={onChangeDiagnosis}\n              required\n            />\n          </div>\n\n          {/* TODO: add rows to table */}\n          <table className=\"table table-bordered\" id=\"myTable\">\n            <thead>\n              <tr style={{ textAlign: 'center' }}>\n                <th scope=\"col\" style={{ width: '5%' }}>\n                  STT\n                  <br />\n                  {' '}\n                  (1)\n                </th>\n                <th scope=\"col\" style={{ width: '25%' }}>\n                  Tên xét nghiệm\n                  {' '}\n                  <br />\n                  {' '}\n                  (2)\n                </th>\n                <th scope=\"col\" style={{ width: '5%' }}>\n                  S.L\n                  {' '}\n                  <br />\n                  {' '}\n                  (3)\n                </th>\n                <th scope=\"col\">\n                  Đơn giá\n                  {' '}\n                  <br />\n                  {' '}\n                  (4)\n                </th>\n                <th scope=\"col\">\n                  Thành tiền\n                  <br />\n                  {' '}\n                  (5)\n                </th>\n                <th scope=\"col\">\n                  Bảo hiểm\n                  <br />\n                  {' '}\n                  (6)\n                </th>\n                <th scope=\"col\">\n                  BN chi trả\n                  <br />\n                  {' '}\n                  (7)\n                </th>\n                <th scope=\"col\">\n                  Chênh lệch\n                  <br />\n                  {' '}\n                  (8)\n                </th>\n                <th scope=\"col\">\n                  BN phải trả\n                  <br />\n                  {' '}\n                  (7+8)\n                </th>\n              </tr>\n            </thead>\n            <tbody />\n            <tfoot>\n              {/* add row button */}\n              <tr>\n                <td colSpan=\"9\" className=\"text-center\">\n                  <button className=\"btn btn-primary\" onClick={onAddRow}>\n                    <i className=\"bi bi-plus-square\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\n                      </svg>\n                      {' '}\n                    </i>\n                    <span style={{ marginTop: 8, marginLeft: 5 }}>\n                      Thêm dòng\n                    </span>\n                  </button>\n                </td>\n              </tr>\n              {/* TODO: complete function to count total amount */}\n              <tr>\n                <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                  Tổng\n                </td>\n                <td className=\"text-center\">\n                  {amountSum}\n                </td>\n                <td />\n                <td className=\"text-center\">\n                  {paymentSum}\n                </td>\n                <td />\n                <td className=\"text-center\">\n                  {totalSum}\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n\n          <FormFooter />\n        </div>\n        )}\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\n            Xem phiếu xét nghiệm\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default React.memo(HematologyAndImmunology);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js",["283","284","285","286"],"/* eslint-disable new-cap */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/button-has-type */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction ResultForm(props) {\n// eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.id;\n  const date = new Date().toLocaleString('en-GB');\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  const [doctor, setDoctor] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [successful, setSuccessful] = useState(false);\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [result, setResult] = useState([]);\n  const [normalRate, setNormalRate] = useState([]);\n  const [unit, setUnit] = useState([]);\n  const [note, setNote] = useState([]);\n  const [machine, setMachine] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  const [done, setDone] = useState(false);\n\n  const onAddRow = () => {\n    for (let i = 0; i < testName.length; i += 1) {\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n\n      const value1 = testName[i];\n      const value2 = result[i];\n      const value3 = normalRate[i];\n      const value4 = unit[i];\n      const value5 = note[i] === undefined ? ' ' : note[i];\n      const value6 = machine[i];\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${value1}</div>`;\n      newCell2.innerHTML = `<div class=\"text-center\">${value2}</div>`;\n      newCell3.innerHTML = `<div class=\"text-center\">${value3}</div>`;\n      newCell4.innerHTML = `<div class=\"text-center\">${value4}</div>`;\n      newCell5.innerHTML = `<div class=\"text-center\">${value5}</div>`;\n      newCell6.innerHTML = `<div class=\"text-center\">${value6}</div>`;\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n          setDoctor(response.data.patient[0].doctor);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n\n    const dataToSubmit = {\n      patientId,\n    };\n\n    axios.post('/api/diagnosis/result/getResultDiagnosisById', dataToSubmit)\n      .then((response) => {\n        if (response.data.success) {\n          if (response.data.doc[0] !== undefined) {\n            setDiagnosis(response.data.doc[0].diagnosis);\n            setTestName(response.data.doc[0].testname);\n            setResult(response.data.doc[0].result);\n            setNormalRate(response.data.doc[0].normalRate);\n            setUnit(response.data.doc[0].unit);\n            setNote(response.data.doc[0].note);\n            setMachine(response.data.doc[0].machine);\n            setDone(true);\n          }\n        } else {\n          alert('Không thể tải thông tin chẩn đoán của bệnh nhân');\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (done) {\n      onAddRow();\n      setShowForm(true);\n    }\n  }, [done]);\n\n  const downloadForm = () => {\n    const divToDownload = document.getElementById('download-form');\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\n      const divImage = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(divImage);\n      const width = 210;\n      const height = (imgProps.height * width) / imgProps.width;\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\n      const title = `${patientId}_phieuxetnghiem.pdf`;\n      pdf.save(title);\n    });\n  };\n\n  return (\n    <>\n      {done ? (\n        <div className=\"outer-form\">\n          <div className=\"laboratory-form\" id=\"download-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU KẾT QUẢ XÉT NGHIỆM</b>\n                </p>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <div>\n                  <label htmlFor=\"patientId\">\n                    Mã BN:\n                    {' '}\n                    {patientId}\n                  </label>\n                </div>\n                <div>\n                  <label>\n                    Ngày NM:\n                    {' '}\n                    {date.substring(0, 10)}\n                  </label>\n                </div>\n                <div>\n                  <label>\n                    Giờ NM:\n                    {' '}\n                    {date.substring(11)}\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"username\">\n                  Họ tên người bệnh:\n                  {' '}\n                  {name}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-3\">\n                <label htmlFor=\"birthDate\">\n                  Năm sinh:\n                  {' '}\n                  {birthDate}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <label htmlFor=\"gender\">\n                  Giới tính:\n                  {' '}\n                  {gender}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <label htmlFor=\"address\">\n                  Địa chỉ:\n                  {' '}\n                  {address}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"patientType\">\n                  Đối tượng:\n                  {' '}\n                  {patientType}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <label htmlFor=\"diagnosis\">\n                  Chẩn đoán:\n                  {' '}\n                  {diagnosis}\n                </label>\n              </div>\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"number\">\n                  Số BHYT:\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <label htmlFor=\"department\">\n                  Khoa phòng:\n                  {' '}\n                  PK\n                  {department}\n                </label>\n              </div>\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"doctor\">\n                  Bác sĩ:\n                  {' '}\n                  {doctor}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <label htmlFor=\"getPerson\">Người lấy mẫu:</label>\n              </div>\n\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"get\">\n                  Thời gian lấy mẫu:\n                  {date.substring(11)}\n                  {' '}\n                  {' '}\n                  {' '}\n                  {date.substring(0, 10)}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-7\">\n                <label htmlFor=\"receivePerson\">Người nhận mẫu: Administrator</label>\n              </div>\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"receive\">\n                  {' '}\n                  Thời gian nhận mẫu:\n                  {date.substring(11)}\n                  {' '}\n                  {' '}\n                  {' '}\n                  {date.substring(0, 10)}\n                </label>\n              </div>\n            </div>\n\n            {/* TODO: add rows to table */}\n            <table className=\"table table-bordered\" id=\"myTable\">\n              <thead>\n                <tr style={{ textAlign: 'center' }}>\n                  <th scope=\"col\" style={{ width: '10%' }}>\n                    TÊN XÉT NGHIỆM\n                  </th>\n                  <th scope=\"col\" style={{ width: '10%' }}>\n                    KẾT QUẢ\n                  </th>\n                  <th scope=\"col\" style={{ width: '15%' }}>\n                    TRỊ SỐ BÌNH THƯỜNG\n                  </th>\n                  <th scope=\"col\">\n                    ĐƠN VỊ\n                  </th>\n                  <th scope=\"col\">\n                    GHI CHÚ\n                  </th>\n                  <th scope=\"col\">\n                    MÁY XÉT NGHIỆM\n                  </th>\n                </tr>\n              </thead>\n              <tbody />\n            </table>\n\n            <FormFooter />\n          </div>\n        </div>\n      ) : ((\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\n        </div>\n      ))}\n\n      {done && showForm && (\n      <div>\n        <br />\n        <div className=\"form-row justify-content-center\">\n\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\n            Tải phiếu xét nghiệm\n          </button>\n        </div>\n      </div>\n      )}\n    </>\n  );\n}\n\nexport default ResultForm;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js",["287","288"],"/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PatientAvatar from './images/patient_avatar.png';\nimport './PatientProfile.css';\n\nfunction PatientProfile(props) {\n  const patientId = props.match.params.id;\n  const [patient, setPatient] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          setPatient(response.data.patient[0]);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n\n    axios.get(`/api/diagnosis/getDiagnosisById?patientId=${patientId}`).then((response) => {\n      if (response.data.success) {\n        setDiagnosis(response.data.doc[0]);\n      } else {\n        alert('Không thể tải thông tin chẩn đoán của bệnh nhân');\n      }\n    });\n  }, []);\n\n  const processBirthDate = (value) => {\n    const fulltime = value;\n    const day = fulltime.substring(8, 10);\n    const month = fulltime.substring(5, 7);\n    const year = fulltime.substring(0, 4);\n    const time = `${day}/${month}/${year}`;\n    return time;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"profile-body\">\n        {patient && diagnosis && (\n        <div className=\"row gutters-sm\">\n          <div className=\"col-md-4 mb-3\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"d-flex flex-column align-items-center text-center\">\n                  <img\n                    src={PatientAvatar}\n                    alt=\"Patient\"\n                    className=\"rounded-circle\"\n                    width=\"150\"\n                  />\n                  <div className=\"mt-3\">\n                    <h4>{patient.name}</h4>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card mb-3\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Họ tên đầy đủ</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.name}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Mã bệnh nhân</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.patientId}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Ngày sinh</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {processBirthDate(patient.birthDate)}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Giới tính</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.gender}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Địa chỉ</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.address}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Đối tượng</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.patientType}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Bác sĩ điều trị</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.doctor}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Phòng khám</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {patient.department}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Chẩn đoán của bác sĩ</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {diagnosis.doctorDiagnosis}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Kết quả xét nghiệm sinh hóa máu</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {diagnosis.biochemical === 'done' ? (\n                      <a\n                        style={{ textDecoration: 'none' }}\n                        href={`/biochemicalForm/${patientId}`}\n                      >\n                        Xem chi tiết\n                      </a>\n                    ) : (<p>Chưa có thông tin</p>)}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Kết quả xét nghiệm nấm - kí sinh trùng</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {diagnosis.fungusAndParasite === 'done' ? (\n                      <a\n                        style={{ textDecoration: 'none' }}\n                        href={`/fungusForm/${patientId}`}\n                      >\n                        Xem chi tiết\n                      </a>\n                    ) : (<p>Chưa có thông tin</p>)}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Kết quả xét nghiệm huyết học - miễn dịch</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {diagnosis.hematologyAndImmunology === 'done' ? (\n                      <a\n                        style={{ textDecoration: 'none' }}\n                        href={`/hematologyForm/${patientId}`}\n                      >\n                        Xem chi tiết\n                      </a>\n                    ) : (<p>Chưa có thông tin</p>)}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Kết quả xét nghiệm tổng quan</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {diagnosis.result === 'done' ? (\n                      <a\n                        style={{ textDecoration: 'none' }}\n                        href={`/resultForm/${patientId}`}\n                      >\n                        Xem chi tiết\n                      </a>\n                    ) : (<p>Chưa có thông tin</p>)}\n                  </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <h6 className=\"mb-0\">Kết quả chẩn đoán hình ảnh</h6>\n                  </div>\n                  <div className=\"col-sm-6 text-secondary\">\n                    {diagnosis.imaging === 'done' ? (\n                      <a\n                        style={{ textDecoration: 'none' }}\n                        href={`/imageProcessing/${patientId}`}\n                      >\n                        Xem chi tiết\n                      </a>\n                    ) : (<p>Chưa có thông tin</p>)}\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PatientProfile;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js",["289","290"],"/* eslint-disable new-cap */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/button-has-type */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport FormFooter from './FormFooter';\nimport Logo from './images/logo.jpg';\n\nfunction BiochemicalForm(props) {\n// eslint-disable-next-line react/destructuring-assignment\n  const patientId = props.match.params.id;\n\n  const [name, setName] = useState();\n  const [birthDate, setBirthDate] = useState();\n  const [gender, setGender] = useState();\n  const [address, setAddress] = useState();\n  const [patientType, setPatientType] = useState();\n  const [department, setDepartment] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n\n  const [caseType, setCaseType] = useState();\n  const [initialSample, setInitialSample] = useState();\n\n  // state for form field\n  const [testName, setTestName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  const [price, setPrice] = useState([]);\n  const [amount, setAmount] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [payment, setPayment] = useState([]);\n  const [diff, setDiff] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  const [amountSum, setAmountSum] = useState(0);\n  const [paymentSum, setPaymentSum] = useState(0);\n  const [totalSum, setTotalSum] = useState(0);\n  const [done, setDone] = useState(false);\n\n  const calculateSum = (valueArr) => {\n    let sum = 0;\n    valueArr.forEach((value) => {\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\n      sum += intValue;\n    });\n    return sum;\n  };\n\n  const calculateAmountSum = () => {\n    if (amount.length >= 1) {\n      setAmountSum(calculateSum(amount));\n    }\n  };\n\n  const calculatePaymentSum = () => {\n    if (payment.length >= 1) {\n      setPaymentSum(calculateSum(payment));\n    }\n  };\n\n  const calculateTotalSum = () => {\n    if (total.length >= 1) {\n      setTotalSum(calculateSum(total));\n    }\n  };\n\n  const onAddRow = () => {\n    for (let i = 0; i < testName.length; i += 1) {\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\n      const newRow = tableRef.insertRow(tableRef.rows.length);\n\n      // Insert a cell in the row at index 0\n      const newCell1 = newRow.insertCell(0);\n      const newCell2 = newRow.insertCell(1);\n      const newCell3 = newRow.insertCell(2);\n      const newCell4 = newRow.insertCell(3);\n      const newCell5 = newRow.insertCell(4);\n      const newCell6 = newRow.insertCell(5);\n      const newCell7 = newRow.insertCell(6);\n      const newCell8 = newRow.insertCell(7);\n      const newCell9 = newRow.insertCell(8);\n\n      const value1 = testName[i];\n      const value2 = quantity[i];\n      const value3 = price[i];\n      const value4 = amount[i];\n      const value5 = insurance[i] === undefined ? '' : insurance[i];\n      const value6 = payment[i];\n      const value7 = diff[i] === undefined ? '' : diff[i];\n      const value8 = total[i];\n\n      // Append a text node to the cell\n      newCell1.innerHTML = `<div class=\"text-center\">${i + 1}</div>`;\n      newCell2.innerHTML = `<div class=\"text-center\">${value1}</div>`;\n      newCell3.innerHTML = `<div class=\"text-center\">${value2}</div>`;\n      newCell4.innerHTML = `<div class=\"text-center\">${value3}</div>`;\n      newCell5.innerHTML = `<div class=\"text-center\">${value4}</div>`;\n      newCell6.innerHTML = `<div class=\"text-center\">${value5}</div>`;\n      newCell7.innerHTML = `<div class=\"text-center\">${value6}</div>`;\n      newCell8.innerHTML = `<div class=\"text-center\">${value7}</div>`;\n      newCell9.innerHTML = `<div class=\"text-center\">${value8}</div>`;\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\n      .then((response) => {\n        if (response.data.success) {\n          const fulltime = response.data.patient[0].birthDate;\n          const day = fulltime.substring(8, 10);\n          const month = fulltime.substring(5, 7);\n          const year = fulltime.substring(0, 4);\n          const time = `${day}/${month}/${year}`;\n          setName(response.data.patient[0].name);\n          setAddress(response.data.patient[0].address);\n          setGender(response.data.patient[0].gender);\n          setBirthDate(time);\n          setDepartment(response.data.patient[0].department);\n          setPatientType(response.data.patient[0].patientType);\n        } else {\n          alert('Không thể tải thông tin bệnh nhân');\n        }\n      });\n\n    const dataToSubmit = {\n      patientId,\n    };\n\n    axios.post('/api/diagnosis/hematologyDiagnosis/getHematologyDiagnosisById', dataToSubmit)\n      .then((response) => {\n        if (response.data.success) {\n          if (response.data.doc[0] !== undefined) {\n            setCaseType(response.data.doc[0].caseType);\n            setInitialSample(response.data.doc[0].initialSample);\n            setDiagnosis(response.data.doc[0].hematologyDiagnosis);\n            setTestName(response.data.doc[0].testname);\n            setQuantity(response.data.doc[0].quantity);\n            setPrice(response.data.doc[0].price);\n            setAmount(response.data.doc[0].amount);\n            setInsurance(response.data.doc[0].insurance);\n            setPayment(response.data.doc[0].payment);\n            setDiff(response.data.doc[0].diff);\n            setTotal(response.data.doc[0].total);\n            setDone(true);\n          }\n        } else {\n          alert('Không thể tải thông tin phiếu xét nghiệm huyết học - miễn dịch của bệnh nhân');\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (done) {\n      calculateAmountSum();\n      calculatePaymentSum();\n      calculateTotalSum();\n      onAddRow();\n      setShowForm(true);\n    }\n  }, [done]);\n\n  const downloadForm = () => {\n    const divToDownload = document.getElementById('download-form');\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\n      const divImage = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(divImage);\n      const width = 210;\n      const height = (imgProps.height * width) / imgProps.width;\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\n      const title = `${patientId}_phieuhuyethocmiendich.pdf`;\n      pdf.save(title);\n    });\n  };\n\n  return (\n    <>\n      {done ? (\n        <div className=\"outer-form\">\n          <div className=\"laboratory-form\" id=\"download-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\n              </div>\n              <div className=\"form-group col-md-8\">\n                <p>\n                  <b>\n                    Bệnh viện Da liễu Trung ương\n                    <br />\n                    15A Phương Mai - Đống Đa - Hà Nội\n                    <br />\n                    Website:\n                    {' '}\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\n                      http://dalieu.vn\n                    </a>\n                  </b>\n                </p>\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\n                  <b>PHIẾU HUYẾT HỌC - MIỄN DỊCH</b>\n                </p>\n\n                <div style={{ textAlign: 'center' }}>\n                  {caseType === 'Thường' ? (\n                    <>\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          defaultChecked\n                          value=\"Thường\"\n                          required\n                          disabled\n                        />\n                        Thường\n                      </div>\n\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          value=\"Cấp cứu\"\n                          required\n                          disabled\n                        />\n                        Cấp cứu\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          value=\"Thường\"\n                          required\n                          disabled\n                        />\n                        Thường\n                      </div>\n\n                      <div\n                        className=\"form-check form-check-inline\"\n                      >\n                        <input\n                          type=\"radio\"\n                          className=\"form-check-input\"\n                          name=\"casetype\"\n                          defaultChecked\n                          value=\"Cấp cứu\"\n                          required\n                          disabled\n                        />\n                        Cấp cứu\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"patientId\">\n                  Mã BN:\n                  {' '}\n                  {patientId}\n                </label>\n              </div>\n            </div>\n\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              <div className=\"form-group row justify-content-center\">\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\n                  Mẫu ban đầu:\n                  {' '}\n                  {initialSample}\n                </label>\n              </div>\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\n            </div>\n\n            {/* form fields */}\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"username\">\n                  - Họ tên người bệnh:\n                  {' '}\n                  {name}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"birthDate\">\n                  Năm sinh:\n                  {' '}\n                  {birthDate}\n                </label>\n              </div>\n\n              <div className=\"form-group col-md-2\">\n                <label htmlFor=\"gender\">\n                  Giới tính:\n                  {' '}\n                  {gender}\n                </label>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">\n                - Địa chỉ:\n                {' '}\n                {address}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"patientType\">\n                - Đối tượng:\n                {' '}\n                {patientType}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"department\">\n                - Khoa phòng:\n                {' '}\n                PK\n                {department}\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"diagnosis\">\n                - Chẩn đoán:\n                {' '}\n                {diagnosis}\n              </label>\n            </div>\n\n            {/* TODO: add rows to table */}\n            <table className=\"table table-bordered\" id=\"myTable\">\n              <thead>\n                <tr style={{ textAlign: 'center' }}>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    STT\n                    <br />\n                    {' '}\n                    (1)\n                  </th>\n                  <th scope=\"col\" style={{ width: '25%' }}>\n                    Tên xét nghiệm\n                    {' '}\n                    <br />\n                    {' '}\n                    (2)\n                  </th>\n                  <th scope=\"col\" style={{ width: '5%' }}>\n                    S.L\n                    {' '}\n                    <br />\n                    {' '}\n                    (3)\n                  </th>\n                  <th scope=\"col\">\n                    Đơn giá\n                    {' '}\n                    <br />\n                    {' '}\n                    (4)\n                  </th>\n                  <th scope=\"col\">\n                    Thành tiền\n                    <br />\n                    {' '}\n                    (5)\n                  </th>\n                  <th scope=\"col\">\n                    Bảo hiểm\n                    <br />\n                    {' '}\n                    (6)\n                  </th>\n                  <th scope=\"col\">\n                    BN chi trả\n                    <br />\n                    {' '}\n                    (7)\n                  </th>\n                  <th scope=\"col\">\n                    Chênh lệch\n                    <br />\n                    {' '}\n                    (8)\n                  </th>\n                  <th scope=\"col\">\n                    BN phải trả\n                    <br />\n                    {' '}\n                    (7+8)\n                  </th>\n                </tr>\n              </thead>\n              <tbody />\n              <tfoot>\n                <tr />\n                {/* TODO: complete function to count total amount */}\n                <tr>\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                    Tổng\n                  </td>\n                  <td className=\"text-center\">\n                    {amountSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {paymentSum}\n                  </td>\n                  <td />\n                  <td className=\"text-center\">\n                    {totalSum}\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <FormFooter />\n          </div>\n        </div>\n      ) : ((\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\n        </div>\n      ))}\n\n      {done && showForm && (\n      <div>\n        <br />\n        <div className=\"form-row justify-content-center\">\n\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\n            Tải phiếu xét nghiệm\n          </button>\n        </div>\n      </div>\n      )}\n    </>\n  );\n}\n\nexport default BiochemicalForm;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\PatientProfile\\PatientSearch.js",["291","292","293","294","295","296","297","298"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/button-has-type */\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from 'antd';\nimport axios from 'axios';\n\nconst { Title } = Typography;\n\nfunction PatientSearch() {\n  const [patientId, setPatientId] = useState();\n  const [diagnosis, setDiagnosis] = useState();\n  const [patients, setPatients] = useState([]);\n  const [showInfo, setShowInfo] = useState(false);\n\n  const [skip, setSkip] = useState(0);\n  const [limit, setLimit] = useState(8);\n  const [postSize, setPostSize] = useState(0);\n  const [searchTerms, setSearchTerms] = useState({\n    diagnosis: '',\n    patientId: '',\n  });\n\n  const [noInfo, setNoInfo] = useState(false);\n\n  const getPatients = (variables) => {\n    if (variables.searchTerm !== undefined && variables.searchTerm.patientId !== '') {\n      axios.get(`/api/patients/getPatientById?id=${variables.searchTerm.patientId}`)\n        .then((response) => {\n          if (response.data.success) {\n            setPatients(response.data.patient);\n          } else {\n            alert('Không thể tải thông tin bệnh nhân');\n          }\n        });\n\n      axios.get(`/api/diagnosis/getDiagnosisById?patientId=${variables.searchTerm.patientId}`).then((response) => {\n        if (response.data.success) {\n          setDiagnosis(response.data.doc[0].doctorDiagnosis);\n          setShowInfo(true);\n        } else {\n          setShowInfo(false);\n          alert('Không thể tải thông tin chẩn đoán của bệnh nhân');\n        }\n      });\n    } else if (variables.searchTerm !== undefined && variables.searchTerm.patientId === '' && variables.searchTerm.diagnosis !== '') {\n      const dataToSubmit = {\n        diagnosis: variables.searchTerm.diagnosis,\n      };\n      axios.post('/api/diagnosis/getDiagnosis', dataToSubmit).then((response) => {\n        if (response.data.success) {\n          for (let i = 0; i < response.data.doc.length; i += 1) {\n            if (response.data.doc[i] !== undefined) {\n              axios.get(`/api/patients/getPatientById?id=${response.data.doc[i].patientId}`)\n                .then((res) => {\n                  if (res.data.success) {\n                    patients[i] = res.data.patient[0];\n                    if (i === response.data.doc.length - 1) {\n                      setShowInfo(true);\n                    }\n                  } else {\n                    setShowInfo(false);\n                    alert('Không thể tải thông tin bệnh nhân');\n                  }\n                });\n            }\n          }\n        } else {\n          alert('Không thể tải thông tin chẩn đoán bệnh nhân');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const variables = {\n      skip,\n      limit,\n    };\n\n    if (variables.searchTerm === undefined) {\n      setNoInfo(true);\n    }\n    getPatients(variables);\n  }, []);\n\n  const onChangePatientId = (e) => {\n    setPatientId(e.target.value);\n    searchTerms.patientId = e.target.value;\n    setShowInfo(false);\n  };\n\n  const onChangeDiagnosis = (e) => {\n    setDiagnosis(e.target.value);\n    searchTerms.diagnosis = e.target.value;\n    setShowInfo(false);\n  };\n\n  const search = () => {\n    const variables = {\n      skip: 0,\n      limit,\n      searchTerm: searchTerms,\n    };\n    if (searchTerms.patientId === '' && searchTerms.diagnosis === '') {\n      setNoInfo(true);\n    }\n    setSkip(0);\n    getPatients(variables);\n  };\n\n  const onLoadMore = () => {\n    const skipTemp = skip + limit;\n    const variables = {\n      skip: skipTemp,\n      limit,\n      loadMore: true,\n      searchTerm: searchTerms,\n    };\n    getPatients(variables);\n    setSkip(skipTemp);\n  };\n\n  return (\n    <div>\n      <div\n        className=\"searchBox\"\n        style={{\n          backgroundColor: '#eeeeee', padding: 30, borderRadius: '10px', width: '100%', marginTop: 30,\n        }}\n      >\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n          <Title level={2}>Tìm kiếm thông tin bệnh nhân</Title>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <label className=\"col-md-4\" htmlFor=\"patientId\" style={{ marginTop: 5, marginLeft: 10 }}>\n                Mã bệnh nhân:\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control col-md-7\"\n                patientId=\"patientId\"\n                value={searchTerms.patientId}\n                onChange={onChangePatientId}\n              />\n            </div>\n          </div>\n          <br />\n          <br />\n\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <label className=\"col-md-4\" htmlFor=\"diagnosis\" style={{ marginTop: 5, marginLeft: 10 }}>\n                Chẩn đoán bệnh:\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control col-md-7\"\n                patientId=\"diagnosis\"\n                value={searchTerms.diagnosis}\n                onChange={onChangeDiagnosis}\n              />\n            </div>\n          </div>\n        </div>\n\n        <br />\n\n        <div className=\"form-row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={search}>\n            Tìm kiếm\n          </button>\n        </div>\n\n        {postSize >= limit && (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <button className=\"btn btn-primary\" onClick={onLoadMore}>Tải thêm</button>\n        </div>\n        )}\n      </div>\n      <br />\n      <br />\n\n      {patients && patients.length > 0 && showInfo ? patients.map((patient) => (\n        <div>\n          <div\n            className=\"row\"\n            style={{\n              backgroundColor: '#eeeeee',\n              borderRadius: '10px',\n              width: '100%',\n              marginLeft: 2,\n              paddingLeft: 10,\n            }}\n          >\n\n            <div className=\"col-md-9\">\n              <p style={{ paddingTop: 10 }}>\n                Họ tên bệnh nhân:\n                {' '}\n                {patient.name}\n              </p>\n              <p>\n                Chẩn đoán:\n                {' '}\n                {diagnosis}\n              </p>\n            </div>\n            <div className=\"col-md-2\" style={{ marginTop: '4%' }}>\n              <a href={`/patientProfile/${patient.patientId}`} style={{ textDecoration: 'none' }}>Xem chi tiết</a>\n            </div>\n          </div>\n          <br />\n        </div>\n      )) : (\n        <div>\n          {noInfo ? (\n            <div className=\"p-5 text-center\">\n              <h6 className=\"mb-3\" style={{ fontStyle: 'italic' }}>\n                Vui lòng nhập ít nhất một trong hai trường thông tin để tìm kiếm\n                <br />\n                {' '}\n                thông tin bệnh nhân...\n              </h6>\n              {' '}\n            </div>\n          ) : (\n            <div className=\"p-5 text-center\">\n              <h6 className=\"mb-3\">Đang tải thông tin bệnh nhân...</h6>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PatientSearch;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Admin\\UserInput.js",["299","300"],"/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from 'antd';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../../_actions/user_actions';\nimport SCHEDULE from '../../../constant/Constant';\n\nconst { Title } = Typography;\n\nfunction UserInput() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [email, setEmail] = useState();\n  const [firstname, setFirstname] = useState();\n  const [lastname, setLastname] = useState();\n  const [role, setRole] = useState();\n  const [password, setPassword] = useState();\n  const [department, setDepartment] = useState();\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangeFirstname = (e) => {\n    setFirstname(e.target.value);\n  };\n\n  const onChangeLastname = (e) => {\n    setLastname(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangeRole = (e) => {\n    setRole(e.target.value);\n  };\n\n  const onChangeDepartment = (e) => {\n    setDepartment(e.target.value);\n  };\n\n  const checkAllTableField = () => {\n    let allFieldFilled = true;\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\n      if (!element.value) {\n        allFieldFilled = false;\n      }\n    });\n    return allFieldFilled;\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (checkAllTableField) {\n      let dataToSubmit;\n      if (department) {\n        dataToSubmit = {\n          email,\n          password,\n          firstname,\n          lastname,\n          role,\n          department,\n        };\n      } else {\n        dataToSubmit = {\n          email,\n          password,\n          firstname,\n          lastname,\n          role,\n        };\n      }\n\n      dispatch(registerUser(dataToSubmit)).then((response) => {\n        if (response.payload.success) {\n          history.push('/userlist');\n        } else {\n          alert(response.payload.err.errmsg);\n        }\n      });\n    }\n  };\n\n  return (\n    <div style={{\n      display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%',\n    }}\n    >\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n        <Title level={2}>Nhập thông tin người dùng</Title>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                value={email}\n                onChange={onChangeEmail}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"firstname\">Họ:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"firstname\"\n                value={firstname}\n                onChange={onChangeFirstname}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"lastname\">Tên:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"lastname\"\n                value={lastname}\n                onChange={onChangeLastname}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"password\">Mật khẩu:</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={password}\n                onChange={onChangePassword}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <label htmlFor=\"role\">Vai trò:</label>\n              <select\n                name=\"role\"\n                className=\"form-control\"\n                value={role}\n                onChange={onChangeRole}\n                required\n              >\n                <option value=\"\">Chọn vai trò người dùng</option>\n                <option value=\"admin\">Admin</option>\n                <option value=\"doctor\">Bác sĩ</option>\n                <option value=\"laboratory staff\">Nhân viên xét nghiệm</option>\n                <option value=\"imaging staff\">Nhân viên chụp chẩn đoán hình ảnh</option>\n                <option value=\"staff\">Nhân viên</option>\n              </select>\n            </div>\n          </div>\n\n          {role === 'doctor' && (\n          <div className=\"form-row justify-content-center\">\n            <div className=\"form-group col-md-5\">\n              <h6 className=\"mb-3\">Phòng khám:</h6>\n              <select\n                name=\"department\"\n                className=\"form-control\"\n                value={department}\n                onChange={onChangeDepartment}\n                required\n              >\n                <option value=\"\">Chọn phòng khám</option>\n                {\n                  SCHEDULE.map((item) => (\n                    <option key={item.PK} value={item.PK}>\n                      PK\n                      {item.PK}\n                    </option>\n                  ))\n                }\n              </select>\n            </div>\n          </div>\n          )}\n          <br />\n\n          <div className=\"form-row justify-content-center\">\n            <button className=\"btn btn-primary btn-block form-group col-md-2\">\n              Thêm thông tin người dùng\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default UserInput;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Admin\\UserList.js",["301","302"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserList.css';\n\nfunction UserList() {\n  const [users, setUsers] = useState();\n  const [showTable, setShowTable] = useState(false);\n  let count = 0;\n\n  useEffect(() => {\n    axios.get('/api/users/getAllUsers').then((response) => {\n      if (response.data.success) {\n        setShowTable(true);\n        setUsers(response.data.users);\n      } else {\n        setShowTable(false);\n        alert('Không thể tải danh sách người dùng');\n      }\n    });\n  }, []);\n\n  const search = () => {\n    // Declare variables\n    let td; let i; let txtValue;\n    const input = document.getElementById('searchInput');\n    const filter = input.value.toUpperCase();\n    const table = document.getElementById('myTable');\n    const tr = table.getElementsByTagName('tr');\n\n    // Loop through all table rows, and hide those who don't match the search query\n    for (i = 0; i < tr.length; i += 1) {\n      td = tr[i].getElementsByTagName('td')[4];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = '';\n        } else {\n          tr[i].style.display = 'none';\n        }\n      }\n    }\n  };\n\n  const onDeleteClick = (e) => {\n    let id = e.target.id;\n    id = id.substring(6);\n\n    axios.get(`/api/users/deleteUserById?id=${id}`).then((response) => {\n      if (response.data.success) {\n        // console.log(response.data.result);\n      } else {\n        alert('Xóa người dùng lỗi, vui lòng thử lại sau');\n      }\n    });\n\n    const tr = document.getElementById(id);\n    tr.remove();\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div className=\"p-5 text-center\">\n        <h3 className=\"mb-3\">DANH SÁCH NGƯỜI DÙNG HỆ THỐNG</h3>\n      </div>\n      {users && users.length > 0 && showTable && (\n        <div className=\"container-fluid\">\n          <div className=\"table-responsive\">\n            <div className=\"table-wrapper\">\n              <div className=\"table-title\">\n                <div className=\"row\">\n                  <div className=\"col-sm-8\" />\n                  <div className=\"col-sm-4\">\n                    <div className=\"search-box\" style={{ width: '70%' }}>\n                      <i className=\"material-icons\">&#xE8B6;</i>\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Tìm kiếm theo vai trò&hellip;\" id=\"searchInput\" onKeyUp={search} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <table\n                data-search=\"true\"\n                tabIndex={-1}\n                data-search-on-enter-key=\"true\"\n                className=\"table table-striped table-hover table-bordered\"\n                id=\"myTable\"\n              >\n                <thead>\n                  <tr>\n                    <th>STT</th>\n                    <th>\n                      Họ\n                    </th>\n                    <th>Tên</th>\n                    <th>\n                      Email\n                    </th>\n                    <th>Vai trò</th>\n                    <th>\n                      Trạng thái\n                    </th>\n                    <th>Hành động</th>\n                  </tr>\n                </thead>\n                <tbody>\n\n                  {\n                   users.map(((user) => {\n                     let role;\n                     switch (user.role) {\n                       case 'admin':\n                         role = 'Admin';\n                         break;\n                       case 'staff':\n                         role = 'Nhân viên';\n                         break;\n                       case 'laboratory staff':\n                         role = 'Nhân viên xét nghiệm';\n                         break;\n                       case 'imaging staff':\n                         role = 'Nhân viên chụp chẩn đoán hình ảnh';\n                         break;\n                       case 'doctor':\n                         role = 'Bác sĩ';\n                         break;\n                       default:\n                     }\n                     count += 1;\n                     return (\n                       <tr id={user._id}>\n                         <td>{count}</td>\n                         <td>{user.firstname}</td>\n                         <td>{user.lastname}</td>\n                         <td>{user.email}</td>\n                         <td>{role}</td>\n                         <td>{user.token ? 'Đang hoạt động' : 'Đang không hoạt động'}</td>\n                         <td>\n                           <a href={`/useredit/${user._id}`} className=\"edit\" title=\"Sửa\" data-toggle=\"tooltip\">\n                             <i\n                               className=\"material-icons\"\n                             >\n                               &#xE254;\n                             </i>\n                           </a>\n                           <a\n                             className=\"delete\"\n                             title=\"Xóa\"\n                             data-toggle=\"tooltip\"\n                             onClick={onDeleteClick}\n                           >\n                             <i className=\"material-icons\" id={`delete${user._id}`}>&#xE872;</i>\n                           </a>\n                         </td>\n                       </tr>\n                     );\n                   }))\n                 }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      ) }\n    </div>\n  );\n}\n\nexport default React.memo(UserList);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\Admin\\UserEdit.js",["303","304"],"/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from 'antd';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport SCHEDULE from '../../../constant/Constant';\n\nconst { Title } = Typography;\n\nfunction UserEdit(props) {\n  const history = useHistory();\n  const userId = props.match.params.id;\n\n  const [email, setEmail] = useState();\n  const [firstname, setFirstname] = useState();\n  const [lastname, setLastname] = useState();\n  const [role, setRole] = useState();\n  const [password, setPassword] = useState();\n  const [department, setDepartment] = useState();\n  const [done, setDone] = useState(false);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangeFirstname = (e) => {\n    setFirstname(e.target.value);\n  };\n\n  const onChangeLastname = (e) => {\n    setLastname(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangeRole = (e) => {\n    setRole(e.target.value);\n  };\n\n  const onChangeDepartment = (e) => {\n    setDepartment(e.target.value);\n  };\n\n  useEffect(() => {\n    if (userId) {\n      axios.get(`/api/users/getUserById?id=${userId}`)\n        .then((response) => {\n          if (response.data.success) {\n            setEmail(response.data.user[0].email);\n            setFirstname(response.data.user[0].firstname);\n            setLastname(response.data.user[0].lastname);\n            setRole(response.data.user[0].role);\n            setDone(true);\n          } else {\n            alert('Không thể tải thông tin của tài khoản');\n          }\n        });\n    }\n  }, []);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    let dataToSubmit;\n    if (department) {\n      dataToSubmit = {\n        userId,\n        email,\n        password,\n        firstname,\n        lastname,\n        role,\n        department,\n      };\n    } else {\n      dataToSubmit = {\n        userId,\n        email,\n        password,\n        firstname,\n        lastname,\n        role,\n      };\n    }\n\n    axios.post('/api/users/updateInformation', dataToSubmit).then((response) => {\n      if (response.data.success) {\n        history.push('/userlist');\n      } else {\n        alert('Cập nhật thông tin tài khoản lỗi');\n      }\n    });\n  };\n\n  return (\n    <div style={{\n      display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%',\n    }}\n    >\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n        <Title level={2}>Chỉnh sửa thông tin người dùng</Title>\n      </div>\n      {done ? (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"firstname\">Họ:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"firstname\"\n                  value={firstname}\n                  onChange={onChangeFirstname}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"lastname\">Tên:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastname\"\n                  value={lastname}\n                  onChange={onChangeLastname}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"password\">Mật khẩu:</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={password}\n                  onChange={onChangePassword}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"role\">Vai trò:</label>\n                <select\n                  name=\"role\"\n                  className=\"form-control\"\n                  value={role}\n                  onChange={onChangeRole}\n                >\n                  <option value=\"\">Chọn vai trò người dùng</option>\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"doctor\">Bác sĩ</option>\n                  <option value=\"laboratory staff\">Nhân viên xét nghiệm</option>\n                  <option value=\"imaging staff\">Nhân viên chụp chẩn đoán hình ảnh</option>\n                  <option value=\"staff\">Nhân viên</option>\n                </select>\n              </div>\n            </div>\n\n            {role === 'doctor' && (\n            <div className=\"form-row justify-content-center\">\n              <div className=\"form-group col-md-5\">\n                <h6 className=\"mb-3\">Phòng khám:</h6>\n                <select\n                  name=\"department\"\n                  className=\"form-control\"\n                  value={department}\n                  onChange={onChangeDepartment}\n                  required\n                >\n                  <option value=\"\">Chọn phòng khám</option>\n                  {\n                  SCHEDULE.map((item) => (\n                    <option key={item.PK} value={item.PK}>\n                      PK\n                      {item.PK}\n                    </option>\n                  ))\n                }\n                </select>\n              </div>\n            </div>\n            )}\n            <br />\n\n            <div className=\"form-row justify-content-center\">\n              <button className=\"btn btn-primary btn-block form-group col-md-2\">\n                Cập nhật thông tin người dùng\n              </button>\n            </div>\n          </div>\n        </form>\n      ) : (\n        <div className=\"p-5 text-center\">\n          <h6 className=\"mb-3\">Đang tải thông tin người dùng...</h6>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserEdit;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FormFooter.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",["305"],"/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { USER_SERVER } from '../../../Config';\n\nconst { SubMenu } = Menu;\n\nfunction RightMenu(props) {\n  const user = useSelector((state) => state.user);\n  let name;\n  if (user !== undefined) {\n    if (user.userData !== undefined) {\n      name = `${user.userData.firstname} ${user.userData.lastname}`;\n    }\n  }\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\n      if (response.status === 200) {\n        props.history.push('/login');\n      } else {\n        alert('Failed to log out');\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"signin\">\n          <a href=\"/login\" style={{ textDecoration: 'none' }}>Đăng nhập</a>\n        </Menu.Item>\n        {/* <Menu.Item key=\"signup\">\n          <a href=\"/register\" style={{ textDecoration: 'none' }}>Đăng ký</a>\n        </Menu.Item> */}\n      </Menu>\n    );\n  }\n  return (\n    <>\n      {user !== undefined && user.userData !== undefined && (\n      <Menu mode={props.mode}>\n        <SubMenu title={(\n          <span>\n            {' '}\n            Xin chào,\n            {' '}\n            {name}\n          </span>\n    )}\n        >\n          <Menu.Item key=\"logout\">\n            <a onClick={logoutHandler}>Đăng xuất</a>\n          </Menu.Item>\n        </SubMenu>\n      </Menu>\n      )}\n    </>\n\n  );\n}\n\nexport default withRouter(RightMenu);\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\utils\\FileUpload.js",["306"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Icon } from 'antd';\nimport Axios from 'axios';\n\nfunction FileUpload(props) {\n  const [images, setImages] = useState([]);\n\n  const onDrop = (files) => {\n    const formData = new FormData();\n    const config = {\n      header: { 'content-type': 'multipart/form-data' },\n    };\n    formData.append('file', files[0]);\n    Axios.post('/api/patients/uploadImage', formData, config).then(\n      (response) => {\n        if (response.data.success) {\n          setImages([...images, response.data.image]);\n          props.refreshFunction([...images, response.data.image]);\n        } else {\n          alert('Không thể tải ảnh lên');\n        }\n      },\n    );\n  };\n\n  const onDelete = (image) => {\n    const currentIndex = images.indexOf(image);\n\n    const newImages = [...images];\n    newImages.splice(currentIndex, 1);\n\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\n        {({ getRootProps, getInputProps }) => (\n          <div\n            style={{\n              width: '35%',\n              height: '400px',\n              border: '1px solid lightgray',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            {...getRootProps()}\n          >\n            <input {...getInputProps()} />\n            <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\n          </div>\n        )}\n      </Dropzone>\n\n      <div\n        style={{\n          display: 'flex',\n          width: '60%',\n          height: '400px',\n          border: '1px solid lightgray',\n          overflowX: 'scroll',\n          overflowY: 'hidden',\n        }}\n      >\n        {images.map((image, index) => (\n          <div key={`diagnosis-${image}}`} onClick={() => onDelete(image)}>\n            <img\n              style={{ minWidth: '512px', width: '285px', height: '400px' }}\n              src={`http://localhost:8000/${image}`}\n              alt={`patientImage-${index}`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FileUpload;\n","C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\constant\\Constant.js",[],"C:\\Users\\Admin\\Desktop\\DATN\\code\\client\\src\\components\\Config.js",[],{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","severity":1,"message":"318","line":39,"column":15,"nodeType":"319","messageId":"320","endLine":39,"endColumn":26},{"ruleId":"317","severity":1,"message":"318","line":52,"column":15,"nodeType":"319","messageId":"320","endLine":52,"endColumn":26},{"ruleId":"317","severity":1,"message":"318","line":64,"column":7,"nodeType":"319","messageId":"320","endLine":64,"endColumn":20},{"ruleId":"317","severity":1,"message":"318","line":90,"column":7,"nodeType":"319","messageId":"320","endLine":90,"endColumn":18},{"ruleId":"317","severity":1,"message":"318","line":117,"column":11,"nodeType":"319","messageId":"320","endLine":117,"endColumn":22},{"ruleId":"321","severity":1,"message":"322","line":4,"column":8,"nodeType":"323","messageId":"324","endLine":4,"endColumn":14},{"ruleId":"321","severity":1,"message":"325","line":69,"column":21,"nodeType":"323","messageId":"324","endLine":69,"endColumn":24},{"ruleId":"321","severity":1,"message":"326","line":86,"column":11,"nodeType":"323","messageId":"324","endLine":86,"endColumn":16},{"ruleId":"321","severity":1,"message":"327","line":91,"column":11,"nodeType":"323","messageId":"324","endLine":91,"endColumn":22},{"ruleId":"328","severity":1,"message":"329","line":20,"column":9,"nodeType":"330","messageId":"320","endLine":20,"endColumn":51},{"ruleId":"321","severity":1,"message":"331","line":7,"column":27,"nodeType":"323","messageId":"324","endLine":7,"endColumn":33},{"ruleId":"321","severity":1,"message":"332","line":22,"column":10,"nodeType":"323","messageId":"324","endLine":22,"endColumn":20},{"ruleId":"321","severity":1,"message":"333","line":11,"column":24,"nodeType":"323","messageId":"324","endLine":11,"endColumn":39},{"ruleId":"321","severity":1,"message":"334","line":12,"column":27,"nodeType":"323","messageId":"324","endLine":12,"endColumn":45},{"ruleId":"321","severity":1,"message":"335","line":13,"column":15,"nodeType":"323","messageId":"324","endLine":13,"endColumn":21},{"ruleId":"328","severity":1,"message":"329","line":24,"column":9,"nodeType":"330","messageId":"320","endLine":24,"endColumn":51},{"ruleId":"328","severity":1,"message":"329","line":60,"column":13,"nodeType":"330","messageId":"320","endLine":60,"endColumn":69},{"ruleId":"328","severity":1,"message":"329","line":81,"column":13,"nodeType":"330","messageId":"320","endLine":81,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":107,"column":11,"nodeType":"330","messageId":"320","endLine":107,"endColumn":58},{"ruleId":"328","severity":1,"message":"329","line":96,"column":11,"nodeType":"330","messageId":"320","endLine":96,"endColumn":52},{"ruleId":"328","severity":1,"message":"329","line":46,"column":11,"nodeType":"330","messageId":"320","endLine":46,"endColumn":53},{"ruleId":"317","severity":1,"message":"318","line":107,"column":11,"nodeType":"319","messageId":"320","endLine":107,"endColumn":22},{"ruleId":"321","severity":1,"message":"333","line":14,"column":24,"nodeType":"323","messageId":"324","endLine":14,"endColumn":39},{"ruleId":"321","severity":1,"message":"336","line":15,"column":28,"nodeType":"323","messageId":"324","endLine":15,"endColumn":47},{"ruleId":"321","severity":1,"message":"337","line":16,"column":34,"nodeType":"323","messageId":"324","endLine":16,"endColumn":59},{"ruleId":"321","severity":1,"message":"338","line":17,"column":40,"nodeType":"323","messageId":"324","endLine":17,"endColumn":71},{"ruleId":"321","severity":1,"message":"339","line":18,"column":23,"nodeType":"323","messageId":"324","endLine":18,"endColumn":37},{"ruleId":"321","severity":1,"message":"340","line":19,"column":25,"nodeType":"323","messageId":"324","endLine":19,"endColumn":41},{"ruleId":"321","severity":1,"message":"335","line":20,"column":15,"nodeType":"323","messageId":"324","endLine":20,"endColumn":21},{"ruleId":"328","severity":1,"message":"329","line":35,"column":11,"nodeType":"330","messageId":"320","endLine":35,"endColumn":63},{"ruleId":"328","severity":1,"message":"329","line":106,"column":13,"nodeType":"330","messageId":"320","endLine":106,"endColumn":65},{"ruleId":"321","severity":1,"message":"341","line":24,"column":10,"nodeType":"323","messageId":"324","endLine":24,"endColumn":18},{"ruleId":"328","severity":1,"message":"329","line":76,"column":11,"nodeType":"330","messageId":"320","endLine":76,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":119,"column":11,"nodeType":"330","messageId":"320","endLine":119,"endColumn":53},{"ruleId":"321","severity":1,"message":"334","line":12,"column":27,"nodeType":"323","messageId":"324","endLine":12,"endColumn":45},{"ruleId":"321","severity":1,"message":"336","line":13,"column":28,"nodeType":"323","messageId":"324","endLine":13,"endColumn":47},{"ruleId":"321","severity":1,"message":"337","line":14,"column":34,"nodeType":"323","messageId":"324","endLine":14,"endColumn":59},{"ruleId":"321","severity":1,"message":"338","line":15,"column":40,"nodeType":"323","messageId":"324","endLine":15,"endColumn":71},{"ruleId":"321","severity":1,"message":"339","line":16,"column":23,"nodeType":"323","messageId":"324","endLine":16,"endColumn":37},{"ruleId":"321","severity":1,"message":"335","line":17,"column":15,"nodeType":"323","messageId":"324","endLine":17,"endColumn":21},{"ruleId":"328","severity":1,"message":"329","line":28,"column":9,"nodeType":"330","messageId":"320","endLine":28,"endColumn":51},{"ruleId":"328","severity":1,"message":"329","line":91,"column":13,"nodeType":"330","messageId":"320","endLine":91,"endColumn":69},{"ruleId":"321","severity":1,"message":"342","line":32,"column":20,"nodeType":"323","messageId":"324","endLine":32,"endColumn":31},{"ruleId":"321","severity":1,"message":"343","line":33,"column":20,"nodeType":"323","messageId":"324","endLine":33,"endColumn":31},{"ruleId":"321","severity":1,"message":"344","line":34,"column":17,"nodeType":"323","messageId":"324","endLine":34,"endColumn":25},{"ruleId":"321","severity":1,"message":"345","line":35,"column":18,"nodeType":"323","messageId":"324","endLine":35,"endColumn":27},{"ruleId":"321","severity":1,"message":"346","line":36,"column":21,"nodeType":"323","messageId":"324","endLine":36,"endColumn":33},{"ruleId":"321","severity":1,"message":"347","line":37,"column":19,"nodeType":"323","messageId":"324","endLine":37,"endColumn":29},{"ruleId":"321","severity":1,"message":"348","line":38,"column":16,"nodeType":"323","messageId":"324","endLine":38,"endColumn":23},{"ruleId":"321","severity":1,"message":"349","line":39,"column":17,"nodeType":"323","messageId":"324","endLine":39,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":65,"column":11,"nodeType":"330","messageId":"320","endLine":65,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":269,"column":15,"nodeType":"330","messageId":"320","endLine":269,"endColumn":64},{"ruleId":"321","severity":1,"message":"342","line":31,"column":20,"nodeType":"323","messageId":"324","endLine":31,"endColumn":31},{"ruleId":"321","severity":1,"message":"350","line":32,"column":18,"nodeType":"323","messageId":"324","endLine":32,"endColumn":27},{"ruleId":"321","severity":1,"message":"351","line":33,"column":22,"nodeType":"323","messageId":"324","endLine":33,"endColumn":35},{"ruleId":"321","severity":1,"message":"352","line":34,"column":16,"nodeType":"323","messageId":"324","endLine":34,"endColumn":23},{"ruleId":"321","severity":1,"message":"353","line":35,"column":16,"nodeType":"323","messageId":"324","endLine":35,"endColumn":23},{"ruleId":"321","severity":1,"message":"354","line":36,"column":19,"nodeType":"323","messageId":"324","endLine":36,"endColumn":29},{"ruleId":"328","severity":1,"message":"329","line":58,"column":11,"nodeType":"330","messageId":"320","endLine":58,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":194,"column":15,"nodeType":"330","messageId":"320","endLine":194,"endColumn":64},{"ruleId":"321","severity":1,"message":"342","line":33,"column":20,"nodeType":"323","messageId":"324","endLine":33,"endColumn":31},{"ruleId":"321","severity":1,"message":"343","line":34,"column":20,"nodeType":"323","messageId":"324","endLine":34,"endColumn":31},{"ruleId":"321","severity":1,"message":"344","line":35,"column":17,"nodeType":"323","messageId":"324","endLine":35,"endColumn":25},{"ruleId":"321","severity":1,"message":"345","line":36,"column":18,"nodeType":"323","messageId":"324","endLine":36,"endColumn":27},{"ruleId":"321","severity":1,"message":"346","line":37,"column":21,"nodeType":"323","messageId":"324","endLine":37,"endColumn":33},{"ruleId":"321","severity":1,"message":"347","line":38,"column":19,"nodeType":"323","messageId":"324","endLine":38,"endColumn":29},{"ruleId":"321","severity":1,"message":"348","line":39,"column":16,"nodeType":"323","messageId":"324","endLine":39,"endColumn":23},{"ruleId":"321","severity":1,"message":"349","line":40,"column":17,"nodeType":"323","messageId":"324","endLine":40,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":66,"column":11,"nodeType":"330","messageId":"320","endLine":66,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":275,"column":15,"nodeType":"330","messageId":"320","endLine":275,"endColumn":64},{"ruleId":"328","severity":1,"message":"329","line":122,"column":11,"nodeType":"330","messageId":"320","endLine":122,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":147,"column":11,"nodeType":"330","messageId":"320","endLine":147,"endColumn":94},{"ruleId":"328","severity":1,"message":"329","line":123,"column":11,"nodeType":"330","messageId":"320","endLine":123,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":149,"column":11,"nodeType":"330","messageId":"320","endLine":149,"endColumn":87},{"ruleId":"321","severity":1,"message":"342","line":33,"column":20,"nodeType":"323","messageId":"324","endLine":33,"endColumn":31},{"ruleId":"321","severity":1,"message":"343","line":34,"column":20,"nodeType":"323","messageId":"324","endLine":34,"endColumn":31},{"ruleId":"321","severity":1,"message":"344","line":35,"column":17,"nodeType":"323","messageId":"324","endLine":35,"endColumn":25},{"ruleId":"321","severity":1,"message":"345","line":36,"column":18,"nodeType":"323","messageId":"324","endLine":36,"endColumn":27},{"ruleId":"321","severity":1,"message":"346","line":37,"column":21,"nodeType":"323","messageId":"324","endLine":37,"endColumn":33},{"ruleId":"321","severity":1,"message":"347","line":38,"column":19,"nodeType":"323","messageId":"324","endLine":38,"endColumn":29},{"ruleId":"321","severity":1,"message":"348","line":39,"column":16,"nodeType":"323","messageId":"324","endLine":39,"endColumn":23},{"ruleId":"321","severity":1,"message":"349","line":40,"column":17,"nodeType":"323","messageId":"324","endLine":40,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":66,"column":11,"nodeType":"330","messageId":"320","endLine":66,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":275,"column":15,"nodeType":"330","messageId":"320","endLine":275,"endColumn":64},{"ruleId":"321","severity":1,"message":"332","line":24,"column":10,"nodeType":"323","messageId":"324","endLine":24,"endColumn":20},{"ruleId":"321","severity":1,"message":"355","line":24,"column":22,"nodeType":"323","messageId":"324","endLine":24,"endColumn":35},{"ruleId":"328","severity":1,"message":"329","line":84,"column":11,"nodeType":"330","messageId":"320","endLine":84,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":106,"column":11,"nodeType":"330","messageId":"320","endLine":106,"endColumn":67},{"ruleId":"328","severity":1,"message":"329","line":18,"column":11,"nodeType":"330","messageId":"320","endLine":18,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":26,"column":9,"nodeType":"330","messageId":"320","endLine":26,"endColumn":65},{"ruleId":"328","severity":1,"message":"329","line":123,"column":11,"nodeType":"330","messageId":"320","endLine":123,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":149,"column":11,"nodeType":"330","messageId":"320","endLine":149,"endColumn":96},{"ruleId":"321","severity":1,"message":"356","line":11,"column":10,"nodeType":"323","messageId":"324","endLine":11,"endColumn":19},{"ruleId":"321","severity":1,"message":"357","line":17,"column":17,"nodeType":"323","messageId":"324","endLine":17,"endColumn":25},{"ruleId":"321","severity":1,"message":"358","line":18,"column":20,"nodeType":"323","messageId":"324","endLine":18,"endColumn":31},{"ruleId":"321","severity":1,"message":"359","line":19,"column":23,"nodeType":"323","messageId":"324","endLine":19,"endColumn":37},{"ruleId":"328","severity":1,"message":"329","line":33,"column":13,"nodeType":"330","messageId":"320","endLine":33,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":43,"column":11,"nodeType":"330","messageId":"320","endLine":43,"endColumn":67},{"ruleId":"328","severity":1,"message":"329","line":63,"column":21,"nodeType":"330","messageId":"320","endLine":63,"endColumn":63},{"ruleId":"328","severity":1,"message":"329","line":69,"column":11,"nodeType":"330","messageId":"320","endLine":69,"endColumn":63},{"ruleId":"321","severity":1,"message":"331","line":4,"column":27,"nodeType":"323","messageId":"324","endLine":4,"endColumn":33},{"ruleId":"328","severity":1,"message":"329","line":87,"column":11,"nodeType":"330","messageId":"320","endLine":87,"endColumn":45},{"ruleId":"328","severity":1,"message":"329","line":20,"column":9,"nodeType":"330","messageId":"320","endLine":20,"endColumn":52},{"ruleId":"328","severity":1,"message":"329","line":55,"column":9,"nodeType":"330","messageId":"320","endLine":55,"endColumn":58},{"ruleId":"328","severity":1,"message":"329","line":60,"column":13,"nodeType":"330","messageId":"320","endLine":60,"endColumn":59},{"ruleId":"328","severity":1,"message":"329","line":95,"column":9,"nodeType":"330","messageId":"320","endLine":95,"endColumn":50},{"ruleId":"328","severity":1,"message":"329","line":26,"column":9,"nodeType":"330","messageId":"320","endLine":26,"endColumn":35},{"ruleId":"328","severity":1,"message":"329","line":21,"column":11,"nodeType":"330","messageId":"320","endLine":21,"endColumn":41},"lines-around-directive",["360"],"no-spaced-func",["361"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'err' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","'useRef' is defined but never used.","'successful' is assigned a value but never used.","'setImagingState' is assigned a value but never used.","'setDoctorDiagnosis' is assigned a value but never used.","'setPId' is assigned a value but never used.","'setBioChemicalCheck' is assigned a value but never used.","'setFungusAndParasiteCheck' is assigned a value but never used.","'setHematologyAndImmunologyCheck' is assigned a value but never used.","'setResultCheck' is assigned a value but never used.","'setDoneDiagnosis' is assigned a value but never used.","'notFound' is assigned a value but never used.","'setTestName' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setInsurance' is assigned a value but never used.","'setPayment' is assigned a value but never used.","'setDiff' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'setResult' is assigned a value but never used.","'setNormalRate' is assigned a value but never used.","'setUnit' is assigned a value but never used.","'setNote' is assigned a value but never used.","'setMachine' is assigned a value but never used.","'setSuccessful' is assigned a value but never used.","'patientId' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setPostSize' is assigned a value but never used.","'setSearchTerms' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]