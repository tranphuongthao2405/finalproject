[{"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\serviceWorker.js":"2","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\index.js":"3","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\user_reducer.js":"4","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\types.js":"5","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\App.js":"6","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\hoc\\auth.js":"7","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"8","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\NavBar.js":"9","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"10","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"11","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Footer\\Footer.js":"12","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js":"13","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js":"14","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js":"15","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js":"16","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js":"17","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js":"18","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js":"19","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js":"20","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js":"21","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js":"22","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js":"23","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js":"24","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js":"25","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js":"26","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\user_actions.js":"27","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"28","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"29","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\utils\\FileUpload.js":"30","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\constant\\Constant.js":"31","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\Config.js":"32","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientList.js":"33","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserList.js":"34","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsInfoInput.js":"35","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorDiagnosis.js":"36","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserInput.js":"37","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserEdit.js":"38","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsUpdate.js":"39"},{"size":1236,"mtime":1619097284399,"results":"40","hashOfConfig":"41"},{"size":5141,"mtime":1619642245986,"results":"42","hashOfConfig":"41"},{"size":164,"mtime":1619081029908,"results":"43","hashOfConfig":"41"},{"size":538,"mtime":1619082122146,"results":"44","hashOfConfig":"41"},{"size":200,"mtime":1619081920602,"results":"45","hashOfConfig":"41"},{"size":4562,"mtime":1623937566191,"results":"46","hashOfConfig":"41"},{"size":859,"mtime":1619081029921,"results":"47","hashOfConfig":"41"},{"size":132,"mtime":1619082457302,"results":"48","hashOfConfig":"41"},{"size":1662,"mtime":1621331699498,"results":"49","hashOfConfig":"41"},{"size":6389,"mtime":1623922365516,"results":"50","hashOfConfig":"41"},{"size":8495,"mtime":1623509341650,"results":"51","hashOfConfig":"41"},{"size":348,"mtime":1619899400108,"results":"52","hashOfConfig":"41"},{"size":3631,"mtime":1623562533330,"results":"53","hashOfConfig":"41"},{"size":5096,"mtime":1623921981946,"results":"54","hashOfConfig":"41"},{"size":10644,"mtime":1623582695294,"results":"55","hashOfConfig":"41"},{"size":8751,"mtime":1623921949670,"results":"56","hashOfConfig":"41"},{"size":10103,"mtime":1623921995534,"results":"57","hashOfConfig":"41"},{"size":20666,"mtime":1622182229256,"results":"58","hashOfConfig":"41"},{"size":19441,"mtime":1622181350232,"results":"59","hashOfConfig":"41"},{"size":16089,"mtime":1623037325495,"results":"60","hashOfConfig":"41"},{"size":17155,"mtime":1622187561382,"results":"61","hashOfConfig":"41"},{"size":7327,"mtime":1623581722335,"results":"62","hashOfConfig":"41"},{"size":16523,"mtime":1623085344882,"results":"63","hashOfConfig":"41"},{"size":12810,"mtime":1623037936191,"results":"64","hashOfConfig":"41"},{"size":20145,"mtime":1622182811461,"results":"65","hashOfConfig":"41"},{"size":16543,"mtime":1623037409392,"results":"66","hashOfConfig":"41"},{"size":1040,"mtime":1619081967816,"results":"67","hashOfConfig":"41"},{"size":1808,"mtime":1623926782717,"results":"68","hashOfConfig":"41"},{"size":2364,"mtime":1623926313813,"results":"69","hashOfConfig":"41"},{"size":2346,"mtime":1621543688165,"results":"70","hashOfConfig":"41"},{"size":4390,"mtime":1620125079976,"results":"71","hashOfConfig":"41"},{"size":60,"mtime":1619081029909,"results":"72","hashOfConfig":"41"},{"size":5420,"mtime":1623940141191,"results":"73","hashOfConfig":"41"},{"size":5892,"mtime":1623937198611,"results":"74","hashOfConfig":"41"},{"size":8748,"mtime":1623719909374,"results":"75","hashOfConfig":"41"},{"size":9889,"mtime":1623726316817,"results":"76","hashOfConfig":"41"},{"size":6534,"mtime":1623928277581,"results":"77","hashOfConfig":"41"},{"size":6963,"mtime":1623938732885,"results":"78","hashOfConfig":"41"},{"size":9522,"mtime":1623940385666,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1hq94k9",{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\index.js",[],["178","179","180","181","182"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\serviceWorker.js",["183","184","185","186","187"],"/* eslint-disable no-param-reassign */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\index.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\types.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\App.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\hoc\\auth.js",["188"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { auth } from '../_actions/user_actions';\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(auth()).then((response) => {\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push('/login');\r\n          }\r\n        } else if (adminRoute && !response.payload.isAdmin) {\r\n          props.history.push('/');\r\n        } else if (option === false) {\r\n          props.history.push('/');\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent {...props} user={user} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["189","190"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction LandingPage() {\r\n  return <></>;\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\NavBar.js",["191"],"import React, { useState } from 'react';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport './Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  // TODO: only show right nav bar\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: 'fixed', zIndex: 999, width: '100%' }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a\r\n          href=\"/\"\r\n          style={{ display: 'flex', justifyContent: 'space-between', textDecoration: 'none' }}\r\n        >\r\n          Trang chủ\r\n        </a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["192","193","194"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["195","196","197"],"/* eslint-disable no-shadow */\r\nimport React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Input, Button, Select,\r\n} from 'antd';\r\nimport { registerUser } from '../../../_actions/user_actions';\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        firstName: Yup.string().required('Vui lòng nhập họ'),\r\n        lastName: Yup.string().required('Vui lòng nhập tên'),\r\n        email: Yup.string()\r\n          .email('Email không hợp lệ')\r\n          .required('Vui lòng nhập email'),\r\n        password: Yup.string()\r\n          .min(6, 'Mật khẩu phải có tối thiểu 6 ký tự')\r\n          .required('Vui lòng nhập mật khẩu'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Mật khẩu phải khớp')\r\n          .required('Vui lòng nhập lại mật khẩu xác nhận'),\r\n        role: Yup.string().required('Vui lòng chọn vai trò'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          const dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            firstname: values.firstName,\r\n            lastname: values.lastName,\r\n            role: values.role,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push('/login');\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <Form\r\n              style={{ minWidth: '550px' }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n              className=\"form\"\r\n            >\r\n              <Form.Item style={{ textAlign: 'end' }}>\r\n                <h2>Đăng ký</h2>\r\n              </Form.Item>\r\n              <Form.Item required label=\"Họ\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  placeholder=\"Nhập họ\"\r\n                  type=\"text\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.firstName && touched.firstName\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.firstName && touched.firstName && (\r\n                  <div className=\"input-feedback\">{errors.firstName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Tên\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Nhập tên\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Nhập email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Mật khẩu\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Nhập mật khẩu\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Xác nhận mật khẩu\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Nhập mật khẩu xác nhận\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Vai trò\" hasFeedback>\r\n                <Select\r\n                  id=\"role\"\r\n                  placeholder=\"Chọn vai trò\"\r\n                  value={values.role}\r\n                  onChange={(selectedOption) => handleChange('role')(selectedOption)}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.role && touched.role\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                >\r\n                  <Option value=\"admin\">Admin</Option>\r\n                  <Option value=\"doctor\">Bác sĩ</Option>\r\n                  <Option value=\"laboratory staff\">Nhân viên xét nghiệm</Option>\r\n                  <Option value=\"imaging staff\">Nhân viên chụp chẩn đoán hình ảnh</Option>\r\n                  <Option value=\"staff\">Nhân viên</Option>\r\n                </Select>\r\n                {errors.role && touched.role && (\r\n                  <div className=\"input-feedback\">{errors.role}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: 'center' }} {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Đăng ký\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js",["198","199"],"/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable no-lonely-if */\r\n/* eslint-disable no-console */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport FileUpload from '../../utils/FileUpload';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction ImagingStaffBoard(props) {\r\n  const pId = props.match.params.id;\r\n\r\n  const history = useHistory();\r\n  const [images, setImages] = useState([]);\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (images && images.length > 0) {\r\n      const imagesArr = [];\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      images\r\n        // eslint-disable-next-line array-callback-return\r\n        && images.map((item) => {\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${item}`,\r\n            thumbnail: `http://localhost:5000/${item}`,\r\n          });\r\n        });\r\n      setImagesArray(imagesArr);\r\n    }\r\n  }, [images]);\r\n\r\n  const updateImages = (newImage) => {\r\n    setImages(newImage);\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setSuccessful(false);\r\n    if (images.length !== []) {\r\n      const dataToSubmit = {\r\n        pId,\r\n        images,\r\n      };\r\n\r\n      axios.post('/api/diagnosis/imagingDiagnosis/saveImage', dataToSubmit).then((response) => {\r\n        if (response.data.success) {\r\n          // alert('Save images successfully');\r\n          axios.post('/api/diagnosis/imagingDiagnosis/uploadImage', dataToSubmit).then((res) => {\r\n            if (res.data.success) {\r\n              // alert('Update images successfully');\r\n              history.push(`/imageProcessing/${pId}`);\r\n            } else {\r\n              // do something\r\n            }\r\n          });\r\n        } else {\r\n          alert('Failed to update information');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '90%', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Tải ảnh chụp chẩn đoán của bệnh nhân</Title>\r\n      </div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group form-row justify-content-center\">\r\n          <label\r\n            style={{ display: 'inline-block', marginTop: 10 }}\r\n            className=\"col-md-1\"\r\n          >\r\n            Mã BN:\r\n          </label>\r\n          {pId && (\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-md-1\"\r\n              name=\"patientId\"\r\n              value={pId}\r\n              disabled\r\n            />\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        {imagesArray && imagesArray.length > 0 && (\r\n          <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10%' }}>\r\n            <ImageGallery items={imagesArray} />\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary btn-block form-group col-md-3\">\r\n            Tiến hành phân tích ảnh\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagingStaffBoard;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js",["200","201"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js",["202","203","204"],"/* eslint-disable new-cap */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { useState, useEffect } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Logo from '../LaboratoryStaffBoard/medicalTests/images/logo.jpg';\r\n\r\nfunction ImageProcessing(props) {\r\n  const patientId = props.match.params.id;\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [imageProcessing, setImageProcessing] = useState([]);\r\n  const [done, setDone] = useState(false);\r\n  let tempCount = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (images && images.length > 0) {\r\n      const imagesArr = [];\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      images\r\n        // eslint-disable-next-line array-callback-return\r\n        && images.map((item) => {\r\n          const folder = item.substring(0, 8);\r\n          const mimage = `m${item.substring(8)}`;\r\n          const mitem = folder + mimage;\r\n          const dimage = `d${item.substring(8)}`;\r\n          const ditem = folder + dimage;\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${item}`,\r\n            thumbnail: `http://localhost:5000/${item}`,\r\n          });\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${mitem}`,\r\n            thumbnail: `http://localhost:5000/${mitem}`,\r\n          });\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${ditem}`,\r\n            thumbnail: `http://localhost:5000/${ditem}`,\r\n          });\r\n        });\r\n      setImagesArray(imagesArr);\r\n    }\r\n  }, [images]);\r\n\r\n  useEffect(() => {\r\n    const dataToSubmit = {\r\n      patientId,\r\n    };\r\n\r\n    axios.post('/api/diagnosis/imagingDiagnosis/getImagingDiagnosisById', dataToSubmit)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.doc[0] !== undefined) {\r\n            setImages(response.data.doc[0].images);\r\n            setImageProcessing(response.data.doc[0].imagingDiagnosis);\r\n            const dataToSubmit2 = {\r\n              patientId,\r\n              imaging: 'done',\r\n            };\r\n\r\n            axios.post('/api/diagnosis/updateImagingDiagnosis', dataToSubmit2).then((res) => {\r\n              if (res.data.success) {\r\n                // alert('Update information successfully');\r\n                setDone(true);\r\n              } else {\r\n                alert('Failed to update information');\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          console.log(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const downloadForm = () => {\r\n    const divToDownload = document.getElementById('download-form');\r\n    html2canvas(divToDownload, {\r\n      scrollY: -window.scrollY,\r\n      useCORS: true,\r\n    }).then((canvas) => {\r\n      const divImage = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const imgProps = pdf.getImageProperties(divImage);\r\n      const width = 210;\r\n      const height = (imgProps.height * width) / imgProps.width;\r\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\r\n      const title = `${patientId}_chandoanhinhanh.pdf`;\r\n      pdf.save(title);\r\n    });\r\n  };\r\n\r\n  const imgType = (value) => {\r\n    let returnType;\r\n    if (value % 3 === 1) {\r\n      returnType = 'Ảnh gốc';\r\n    } else if (value % 3 === 2) {\r\n      returnType = 'Ảnh mask';\r\n    } else if (value % 3 === 0) {\r\n      returnType = 'Ảnh so sánh';\r\n    }\r\n    return returnType;\r\n  };\r\n\r\n  const returnPercentage = (value) => {\r\n    let percentage;\r\n    let returnString;\r\n    if (value % 3 === 1) {\r\n      percentage = parseFloat(imageProcessing[value - 1]) % 100;\r\n      returnString = `${percentage}%`;\r\n    } else {\r\n      returnString = '';\r\n    }\r\n    return returnString;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {done && images && images.length > 0 && imagesArray && user.userData ? (\r\n        <div className=\"outer-form\">\r\n          <div className=\"laboratory-form\" id=\"download-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU CHỤP CHẨN ĐOÁN HÌNH ẢNH</b>\r\n                </p>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"username\">\r\n                  Họ tên người bệnh:\r\n                  {' '}\r\n                  {name}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">\r\n                  Năm sinh:\r\n                  {' '}\r\n                  {birthDate}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"gender\">\r\n                  Giới tính:\r\n                  {' '}\r\n                  {gender}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">\r\n                Địa chỉ:\r\n                {' '}\r\n                {address}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"patientType\">\r\n                Đối tượng:\r\n                {' '}\r\n                {patientType}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\">\r\n                Khoa phòng:\r\n                {' '}\r\n                PK\r\n                {department}\r\n              </label>\r\n            </div>\r\n            <p style={{ textAlign: 'center', fontSize: '18px' }}>\r\n              <b>KẾT QUẢ PHÂN TÍCH HÌNH ẢNH</b>\r\n            </p>\r\n            {imagesArray && imagesArray.length > 0 && (\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <th scope=\"col\" className=\"text-center\">STT</th>\r\n                <th scope=\"col\" className=\"text-center\">Ảnh</th>\r\n                <th scope=\"col\" className=\"text-center\">Loại ảnh</th>\r\n                <th scope=\"col\" className=\"text-center\">Tỉ lệ bị Melanoma</th>\r\n              </thead>\r\n                {imagesArray.map((img) => {\r\n                  tempCount += 1;\r\n                  return (\r\n                    <tbody>\r\n                      <td className=\"text-center\">{tempCount}</td>\r\n                      <td className=\"text-center\"><img style={{ width: 256, height: 256 }} src={img.original} alt=\"img-diagnosis\" /></td>\r\n                      <td className=\"text-center\">{imgType(tempCount)}</td>\r\n                      <td className=\"text-center\">{returnPercentage(tempCount)}</td>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n            </table>\r\n            )}\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"col\" />\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  NHÂN VIÊN CHỤP CHẨN ĐOÁN HÌNH ẢNH\r\n                  <br />\r\n                  {user.userData.firstname}\r\n                  {' '}\r\n                  {user.userData.lastname}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : ((\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải phiếu chẩn đoán hình ảnh...</h6>\r\n        </div>\r\n      ))}\r\n\r\n      {done && images && images.length > 0 && imagesArray && (\r\n      <div>\r\n        <br />\r\n        <br />\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '25%' }} className=\"not-download\">\r\n          <ImageGallery items={imagesArray} />\r\n        </div>\r\n\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\r\n            Tải kết quả chẩn đoán hình ảnh\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageProcessing;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js",["205","206","207","208","209"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js",["210","211","212","213","214","215","216"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js",["217","218","219","220","221","222","223","224","225","226","227"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction Biochemical(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  // const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const [caseType, setCaseType] = useState();\r\n  const [initialSample, setInitialSample] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n  const [checkForm, setCheckForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeCaseType = (e) => {\r\n    setCaseType(e.target.value);\r\n  };\r\n\r\n  const onChangeInitialSample = (e) => {\r\n    setInitialSample(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeQuantity = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    quantity[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePrice = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    price[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    amount[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeInsurance = (e) => {\r\n    const cntStr = e.target.name.substring(9);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    insurance[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePayment = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    payment[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeDiff = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    diff[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeTotal = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    total[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\r\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\r\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\r\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\r\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\r\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\r\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell2.onchange = onChangeTestName;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell3.onchange = onChangeQuantity;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell4.onchange = onChangePrice;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell5.onchange = onChangeAmount;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell6.onchange = onChangeInsurance;\r\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell7.onchange = onChangePayment;\r\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\r\n      newCell8.onchange = onChangeDiff;\r\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\r\n      newCell9.onchange = onChangeTotal;\r\n    }\r\n  };\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (checkAllTableField) {\r\n      if (amount.length >= 1) {\r\n        setAmountSum(calculateSum(amount));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (checkAllTableField) {\r\n      if (payment.length >= 1) {\r\n        setPaymentSum(calculateSum(payment));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (checkAllTableField) {\r\n      if (total.length >= 1) {\r\n        setTotalSum(calculateSum(total));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      setCheckForm(true);\r\n      // if true then save to database\r\n\r\n      if (checkForm && checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          initialSample,\r\n          caseType,\r\n          diagnosis,\r\n          testName,\r\n          quantity,\r\n          price,\r\n          amount,\r\n          insurance,\r\n          payment,\r\n          diff,\r\n          total,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/biochemicalDiagnosis/saveBiochemicalForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                biochemical: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateBiochemicalDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/biochemicalForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n          <div>\r\n            {/* form header */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU SINH HÓA MÁU</b>\r\n                </p>\r\n\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div\r\n                    className=\"form-check form-check-inline\"\r\n                    onChange={onChangeCaseType}\r\n                  >\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"casetype\"\r\n                      value=\"Thường\"\r\n                      required\r\n                    />\r\n                    Thường\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"form-check form-check-inline\"\r\n                    onChange={onChangeCaseType}\r\n                  >\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"form-check-input\"\r\n                      name=\"casetype\"\r\n                      value=\"Cấp cứu\"\r\n                      required\r\n                    />\r\n                    Cấp cứu\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n              <div className=\"form-group row justify-content-center\">\r\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\r\n                  Mẫu ban đầu:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-md-2\"\r\n                  name=\"initialSample\"\r\n                  value={initialSample}\r\n                  onChange={onChangeInitialSample}\r\n                  required\r\n                />\r\n              </div>\r\n              <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"birthDate\"\r\n                  value={birthDate}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"gender\">Giới tính:</label>\r\n                <select\r\n                  name=\"gender\"\r\n                  className=\"form-control\"\r\n                  value={gender}\r\n                  disabled\r\n                >\r\n                  <option value=\"Nam\">Nam</option>\r\n                  <option value=\"Nữ\">Nữ</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"patientType\">Đối tượng:</label>\r\n                <select\r\n                  name=\"patientType\"\r\n                  className=\"form-control\"\r\n                  value={patientType}\r\n                  disabled\r\n                >\r\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"department\">Khoa phòng:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"department\"\r\n                  value={department}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"diagnosis\"\r\n                value={diagnosis}\r\n                onChange={onChangeDiagnosis}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    STT\r\n                    <br />\r\n                    {' '}\r\n                    (1)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '25%' }}>\r\n                    Tên xét nghiệm\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (2)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    S.L\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (3)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Đơn giá\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (4)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Thành tiền\r\n                    <br />\r\n                    {' '}\r\n                    (5)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Bảo hiểm\r\n                    <br />\r\n                    {' '}\r\n                    (6)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN chi trả\r\n                    <br />\r\n                    {' '}\r\n                    (7)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Chênh lệch\r\n                    <br />\r\n                    {' '}\r\n                    (8)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN phải trả\r\n                    <br />\r\n                    {' '}\r\n                    (7+8)\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                {/* add row button */}\r\n                <tr>\r\n                  <td colSpan=\"9\" className=\"text-center\">\r\n                    <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                      <i className=\"bi bi-plus-square\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                        </svg>\r\n                        {' '}\r\n                      </i>\r\n                      <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                        Thêm dòng\r\n                      </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                {/* TODO: complete function to count total amount */}\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                    Tổng\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    {amountSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {paymentSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {totalSum}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Biochemical;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js",["228","229","230","231","232","233","234","235","236","237","238"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction FungusAndParasite(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  // const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const [caseType, setCaseType] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n  const [checkForm, setCheckForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeCaseType = (e) => {\r\n    setCaseType(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeQuantity = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    quantity[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePrice = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    price[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    amount[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeInsurance = (e) => {\r\n    const cntStr = e.target.name.substring(9);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    insurance[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePayment = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    payment[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeDiff = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    diff[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeTotal = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    total[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\r\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\r\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\r\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\r\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\r\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\r\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell2.onchange = onChangeTestName;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell3.onchange = onChangeQuantity;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell4.onchange = onChangePrice;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell5.onchange = onChangeAmount;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell6.onchange = onChangeInsurance;\r\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell7.onchange = onChangePayment;\r\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\r\n      newCell8.onchange = onChangeDiff;\r\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\r\n      newCell9.onchange = onChangeTotal;\r\n    }\r\n  };\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (checkAllTableField) {\r\n      if (amount.length >= 1) {\r\n        setAmountSum(calculateSum(amount));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (checkAllTableField) {\r\n      if (payment.length >= 1) {\r\n        setPaymentSum(calculateSum(payment));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (checkAllTableField) {\r\n      if (total.length >= 1) {\r\n        setTotalSum(calculateSum(total));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      setCheckForm(true);\r\n      // if true then save to database\r\n\r\n      if (checkForm && checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          caseType,\r\n          diagnosis,\r\n          testName,\r\n          quantity,\r\n          price,\r\n          amount,\r\n          insurance,\r\n          payment,\r\n          diff,\r\n          total,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/fungusAndParasiteDiagnosis/saveFungusAndParasiteForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                fungusAndParasite: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateFungusDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/fungusForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n        <div>\r\n          {/* form header */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-2\">\r\n              <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n            </div>\r\n            <div className=\"form-group col-md-8\">\r\n              <p>\r\n                <b>\r\n                  Bệnh viện Da liễu Trung ương\r\n                  <br />\r\n                  15A Phương Mai - Đống Đa - Hà Nội\r\n                  <br />\r\n                  Website:\r\n                  {' '}\r\n                  <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                    http://dalieu.vn\r\n                  </a>\r\n                </b>\r\n              </p>\r\n              <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                <b>PHIẾU NẤM - KÝ SINH TRÙNG</b>\r\n              </p>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Thường\"\r\n                    required\r\n                  />\r\n                  Thường\r\n                </div>\r\n\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Cấp cứu\"\r\n                    required\r\n                  />\r\n                  Cấp cứu\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"patientId\">\r\n                Mã BN:\r\n                {' '}\r\n                {patientId}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n            <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\r\n          </div>\r\n\r\n          {/* form fields */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"birthDate\"\r\n                value={birthDate}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                disabled\r\n              >\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"address\">Địa chỉ:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              value={address}\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                disabled\r\n              >\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-8\">\r\n              <label htmlFor=\"department\">Khoa phòng:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"department\"\r\n                value={department}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"diagnosis\"\r\n              value={diagnosis}\r\n              onChange={onChangeDiagnosis}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* TODO: add rows to table */}\r\n          <table className=\"table table-bordered\" id=\"myTable\">\r\n            <thead>\r\n              <tr style={{ textAlign: 'center' }}>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  STT\r\n                  <br />\r\n                  {' '}\r\n                  (1)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '25%' }}>\r\n                  Tên xét nghiệm\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (2)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  S.L\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (3)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Đơn giá\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (4)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Thành tiền\r\n                  <br />\r\n                  {' '}\r\n                  (5)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Bảo hiểm\r\n                  <br />\r\n                  {' '}\r\n                  (6)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN chi trả\r\n                  <br />\r\n                  {' '}\r\n                  (7)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Chênh lệch\r\n                  <br />\r\n                  {' '}\r\n                  (8)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN phải trả\r\n                  <br />\r\n                  {' '}\r\n                  (7+8)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody />\r\n            <tfoot>\r\n              {/* add row button */}\r\n              <tr>\r\n                <td colSpan=\"9\" className=\"text-center\">\r\n                  <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                    <i className=\"bi bi-plus-square\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                      </svg>\r\n                      {' '}\r\n                    </i>\r\n                    <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                      Thêm dòng\r\n                    </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {/* TODO: complete function to count total amount */}\r\n              <tr>\r\n                <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Tổng\r\n                </td>\r\n                <td className=\"text-center\">\r\n                  {amountSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {paymentSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {totalSum}\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          {/* TODO: update time realtime */}\r\n          <div className=\"form-row\">\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                Chỉ định ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                In phiếu ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n              <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                BÁC SĨ ĐIỀU TRỊ\r\n              </p>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FungusAndParasite;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js",["239","240"],"/* eslint-disable new-cap */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/button-has-type */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction FungusForm(props) {\r\n// eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.id;\r\n  const date = new Date().toLocaleString('en-GB');\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n\r\n  const [caseType, setCaseType] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [done, setDone] = useState(false);\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (amount.length >= 1) {\r\n      setAmountSum(calculateSum(amount));\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (payment.length >= 1) {\r\n      setPaymentSum(calculateSum(payment));\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (total.length >= 1) {\r\n      setTotalSum(calculateSum(total));\r\n    }\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    for (let i = 0; i < testName.length; i += 1) {\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[i];\r\n      const value2 = quantity[i];\r\n      const value3 = price[i];\r\n      const value4 = amount[i];\r\n      const value5 = insurance[i] === undefined ? '' : insurance[i];\r\n      const value6 = payment[i];\r\n      const value7 = diff[i] === undefined ? '' : diff[i];\r\n      const value8 = total[i];\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${i + 1}</div>`;\r\n      newCell2.innerHTML = `<div class=\"text-center\">${value1}</div>`;\r\n      newCell3.innerHTML = `<div class=\"text-center\">${value2}</div>`;\r\n      newCell4.innerHTML = `<div class=\"text-center\">${value3}</div>`;\r\n      newCell5.innerHTML = `<div class=\"text-center\">${value4}</div>`;\r\n      newCell6.innerHTML = `<div class=\"text-center\">${value5}</div>`;\r\n      newCell7.innerHTML = `<div class=\"text-center\">${value6}</div>`;\r\n      newCell8.innerHTML = `<div class=\"text-center\">${value7}</div>`;\r\n      newCell9.innerHTML = `<div class=\"text-center\">${value8}</div>`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n\r\n    const dataToSubmit = {\r\n      patientId,\r\n    };\r\n\r\n    axios.post('/api/diagnosis/fungusAndParasiteDiagnosis/getFungusDiagnosisById', dataToSubmit)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.doc[0] !== undefined) {\r\n            setCaseType(response.data.doc[0].caseType);\r\n            setDiagnosis(response.data.doc[0].fungusDiagnosis);\r\n            setTestName(response.data.doc[0].testname);\r\n            setQuantity(response.data.doc[0].quantity);\r\n            setPrice(response.data.doc[0].price);\r\n            setAmount(response.data.doc[0].amount);\r\n            setInsurance(response.data.doc[0].insurance);\r\n            setPayment(response.data.doc[0].payment);\r\n            setDiff(response.data.doc[0].diff);\r\n            setTotal(response.data.doc[0].total);\r\n            setDone(true);\r\n          }\r\n        } else {\r\n          console.log(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (done) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      onAddRow();\r\n      setShowForm(true);\r\n    }\r\n  }, [done]);\r\n\r\n  const downloadForm = () => {\r\n    const divToDownload = document.getElementById('download-form');\r\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\r\n      const divImage = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const imgProps = pdf.getImageProperties(divImage);\r\n      const width = 210;\r\n      const height = (imgProps.height * width) / imgProps.width;\r\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\r\n      const title = `${patientId}_phieunamkisinhtrung.pdf`;\r\n      pdf.save(title);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {done ? (\r\n        <div className=\"outer-form\">\r\n          <div className=\"laboratory-form\" id=\"download-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU NẤM - KÍ SINH TRÙNG</b>\r\n                </p>\r\n\r\n                <div style={{ textAlign: 'center' }}>\r\n                  {caseType === 'Thường' ? (\r\n                    <>\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          defaultChecked\r\n                          value=\"Thường\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Thường\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          value=\"Cấp cứu\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Cấp cứu\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          value=\"Thường\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Thường\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          defaultChecked\r\n                          value=\"Cấp cứu\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Cấp cứu\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"username\">\r\n                  - Họ tên người bệnh:\r\n                  {' '}\r\n                  {name}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">\r\n                  Năm sinh:\r\n                  {' '}\r\n                  {birthDate}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"gender\">\r\n                  Giới tính:\r\n                  {' '}\r\n                  {gender}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">\r\n                - Địa chỉ:\r\n                {' '}\r\n                {address}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"patientType\">\r\n                - Đối tượng:\r\n                {' '}\r\n                {patientType}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\">\r\n                - Khoa phòng:\r\n                {' '}\r\n                PK\r\n                {department}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"diagnosis\">\r\n                - Chẩn đoán:\r\n                {' '}\r\n                {diagnosis}\r\n              </label>\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    STT\r\n                    <br />\r\n                    {' '}\r\n                    (1)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '25%' }}>\r\n                    Tên xét nghiệm\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (2)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    S.L\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (3)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Đơn giá\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (4)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Thành tiền\r\n                    <br />\r\n                    {' '}\r\n                    (5)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Bảo hiểm\r\n                    <br />\r\n                    {' '}\r\n                    (6)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN chi trả\r\n                    <br />\r\n                    {' '}\r\n                    (7)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Chênh lệch\r\n                    <br />\r\n                    {' '}\r\n                    (8)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN phải trả\r\n                    <br />\r\n                    {' '}\r\n                    (7+8)\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                <tr />\r\n                {/* TODO: complete function to count total amount */}\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                    Tổng\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    {amountSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {paymentSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {totalSum}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : ((\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\r\n        </div>\r\n      ))}\r\n\r\n      {done && showForm && (\r\n      <div>\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n\r\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\r\n            Tải phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FungusForm;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js",["241","242","243","244","245","246","247","248","249"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction Result(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [normalRate, setNormalRate] = useState([]);\r\n  const [unit, setUnit] = useState([]);\r\n  const [note, setNote] = useState([]);\r\n  const [machine, setMachine] = useState([]);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n          setDoctor(response.data.patient[0].doctor);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeResult = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    result[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeNormalRate = (e) => {\r\n    const cntStr = e.target.name.substring(10);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    normalRate[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeUnit = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    unit[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeNote = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    note[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeMachine = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    machine[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = result[tempCount - 1] ? result[tempCount - 1] : '';\r\n      const value3 = normalRate[tempCount - 1] ? normalRate[tempCount - 1] : '';\r\n      const value4 = unit[tempCount - 1] ? unit[tempCount - 1] : '';\r\n      const value5 = note[tempCount - 1] ? note[tempCount - 1] : '';\r\n      const value6 = machine[tempCount - 1] ? machine[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell1.onchange = onChangeTestName;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"result${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell2.onchange = onChangeResult;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"normalrate${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell3.onchange = onChangeNormalRate;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"unit${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell4.onchange = onChangeUnit;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"note${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell5.onchange = onChangeNote;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"machine${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell6.onchange = onChangeMachine;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      if (checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          diagnosis,\r\n          testName,\r\n          result,\r\n          normalRate,\r\n          unit,\r\n          note,\r\n          machine,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/result/saveResultForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                result: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateResultDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/resultForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n          <div>\r\n            {/* form header */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU KẾT QUẢ XÉT NGHIỆM</b>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <div>\r\n                  <label htmlFor=\"patientId\">\r\n                    Mã BN:\r\n                    {' '}\r\n                    {patientId}\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Ngày NM:\r\n                    {' '}\r\n                    {date.substring(0, 10)}\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Giờ NM:\r\n                    {' '}\r\n                    {date.substring(11)}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"birthDate\"\r\n                  value={birthDate}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"gender\">Giới tính:</label>\r\n                <select\r\n                  name=\"gender\"\r\n                  className=\"form-control\"\r\n                  value={gender}\r\n                  disabled\r\n                >\r\n                  <option value=\"Nam\">Nam</option>\r\n                  <option value=\"Nữ\">Nữ</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"diagnosis\"\r\n                  value={diagnosis}\r\n                  onChange={onChangeDiagnosis}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"number\">Số BHYT:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"number\"\r\n                  value=\"\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"patientType\">Đối tượng:</label>\r\n                <select\r\n                  name=\"patientType\"\r\n                  className=\"form-control\"\r\n                  value={patientType}\r\n                  disabled\r\n                >\r\n                  <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                  <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"department\">Khoa phòng:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"department\"\r\n                  value={department}\r\n                  disabled\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"doctor\">Bác sĩ chỉ định:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"doctor\"\r\n                  value={doctor}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"getPerson\">Người lấy mẫu:</label>\r\n              </div>\r\n\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"get\">\r\n                  Thời gian lấy mẫu:\r\n                  {date.substring(11)}\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                  {date.substring(0, 10)}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"receivePerson\">Người nhận mẫu: Administrator</label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"receive\">\r\n                  {' '}\r\n                  Thời gian nhận mẫu:\r\n                  {date.substring(11)}\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                  {date.substring(0, 10)}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '10%' }}>\r\n                    TÊN XÉT NGHIỆM\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '10%' }}>\r\n                    KẾT QUẢ\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '15%' }}>\r\n                    TRỊ SỐ BÌNH THƯỜNG\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    ĐƠN VỊ\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    GHI CHÚ\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    MÁY XÉT NGHIỆM\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                {/* add row button */}\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"text-center\">\r\n                    <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                      <i className=\"bi bi-plus-square\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                        </svg>\r\n                        {' '}\r\n                      </i>\r\n                      <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                        Thêm dòng\r\n                      </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js",["250","251","252","253","254"],"/* eslint-disable prefer-destructuring */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/button-has-type */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Typography } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction PatientProfile() {\r\n  const [patientId, setPatientId] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [patients, setPatients] = useState([]);\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  const [postSize, setPostSize] = useState(0);\r\n  const [searchTerms, setSearchTerms] = useState({\r\n    diagnosis: '',\r\n    patientId: '',\r\n  });\r\n\r\n  const [noInfo, setNoInfo] = useState(false);\r\n\r\n  const getPatients = (variables) => {\r\n    if (variables.searchTerm !== undefined && variables.searchTerm.patientId !== '') {\r\n      axios.get(`/api/patients/getPatientById?id=${variables.searchTerm.patientId}`)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            setPatients(response.data.patient);\r\n          } else {\r\n            alert(response.data.err);\r\n          }\r\n        });\r\n\r\n      axios.get(`/api/diagnosis/getDiagnosisById?patientId=${variables.searchTerm.patientId}`).then((response) => {\r\n        if (response.data.success) {\r\n          setDiagnosis(response.data.doc[0].doctorDiagnosis);\r\n          setShowInfo(true);\r\n        } else {\r\n          setShowInfo(false);\r\n          // do something\r\n        }\r\n      });\r\n    } else if (variables.searchTerm !== undefined && variables.searchTerm.patientId === '' && variables.searchTerm.diagnosis !== '') {\r\n      const dataToSubmit = {\r\n        diagnosis: variables.searchTerm.diagnosis,\r\n      };\r\n      axios.post('/api/diagnosis/getDiagnosis', dataToSubmit).then((response) => {\r\n        if (response.data.success) {\r\n          for (let i = 0; i < response.data.doc.length; i += 1) {\r\n            if (response.data.doc[i] !== undefined) {\r\n              axios.get(`/api/patients/getPatientById?id=${response.data.doc[i].patientId}`)\r\n                .then((res) => {\r\n                  if (res.data.success) {\r\n                    patients[i] = res.data.patient[0];\r\n                    if (i === response.data.doc.length - 1) {\r\n                      setShowInfo(true);\r\n                    }\r\n                  } else {\r\n                    setShowInfo(false);\r\n                    // alert(res.data.err);\r\n                  }\r\n                });\r\n            }\r\n          }\r\n        } else {\r\n          // do something\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      skip,\r\n      limit,\r\n    };\r\n\r\n    if (variables.searchTerm === undefined) {\r\n      setNoInfo(true);\r\n    }\r\n    getPatients(variables);\r\n  }, []);\r\n\r\n  const onChangePatientId = (e) => {\r\n    setPatientId(e.target.value);\r\n    searchTerms.patientId = e.target.value;\r\n    setShowInfo(false);\r\n  };\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n    searchTerms.diagnosis = e.target.value;\r\n    setShowInfo(false);\r\n  };\r\n\r\n  const search = () => {\r\n    const variables = {\r\n      skip: 0,\r\n      limit,\r\n      searchTerm: searchTerms,\r\n    };\r\n    if (searchTerms.patientId === '' && searchTerms.diagnosis === '') {\r\n      setNoInfo(true);\r\n    }\r\n    setSkip(0);\r\n    getPatients(variables);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    const skipTemp = skip + limit;\r\n    const variables = {\r\n      skip: skipTemp,\r\n      limit,\r\n      loadMore: true,\r\n      searchTerm: searchTerms,\r\n    };\r\n    getPatients(variables);\r\n    setSkip(skipTemp);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"search-box\"\r\n        style={{\r\n          backgroundColor: '#eeeeee', padding: 30, borderRadius: '10px', width: '100%',\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n          <Title level={2}>Tìm kiếm thông tin bệnh nhân</Title>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <label className=\"col-md-4\" htmlFor=\"patientId\" style={{ marginTop: 5, marginLeft: 10 }}>\r\n                Mã bệnh nhân:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-md-7\"\r\n                patientId=\"patientId\"\r\n                value={searchTerms.patientId}\r\n                onChange={onChangePatientId}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <label className=\"col-md-4\" htmlFor=\"diagnosis\" style={{ marginTop: 5, marginLeft: 10 }}>\r\n                Chẩn đoán bệnh:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-md-7\"\r\n                patientId=\"diagnosis\"\r\n                value={searchTerms.diagnosis}\r\n                onChange={onChangeDiagnosis}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={search}>\r\n            Tìm kiếm\r\n          </button>\r\n        </div>\r\n\r\n        {postSize >= limit && (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <button className=\"btn btn-primary\" onClick={onLoadMore}>Tải thêm</button>\r\n        </div>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <br />\r\n\r\n      {patients && patients.length > 0 && showInfo ? patients.map((patient) => (\r\n        <div>\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              backgroundColor: '#eeeeee',\r\n              borderRadius: '10px',\r\n              width: '100%',\r\n              marginLeft: 2,\r\n              paddingLeft: 10,\r\n            }}\r\n          >\r\n\r\n            <div className=\"col-md-9\">\r\n              <p style={{ paddingTop: 10 }}>\r\n                Họ tên bệnh nhân:\r\n                {' '}\r\n                {patient.name}\r\n              </p>\r\n              <p>\r\n                Chẩn đoán:\r\n                {' '}\r\n                {diagnosis}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-md-2\" style={{ marginTop: '4%' }}>\r\n              <a href={`/imageProcessing/${patient.patientId}`} style={{ textDecoration: 'none' }}>Xem chi tiết</a>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      )) : (\r\n        <div>\r\n          {noInfo ? (\r\n            <div className=\"p-5 text-center\">\r\n              <h6 className=\"mb-3\" style={{ fontStyle: 'italic' }}>\r\n                Vui lòng nhập ít nhất một trong hai trường thông tin để tìm kiếm\r\n                <br />\r\n                {' '}\r\n                thông tin bệnh nhân...\r\n              </h6>\r\n              {' '}\r\n            </div>\r\n          ) : (\r\n            <div className=\"p-5 text-center\">\r\n              <h6 className=\"mb-3\">Đang tải thông tin bệnh nhân...</h6>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientProfile;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js",["255","256"],"/* eslint-disable new-cap */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/button-has-type */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction BiochemicalForm(props) {\r\n// eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.id;\r\n  const date = new Date().toLocaleString('en-GB');\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n\r\n  const [caseType, setCaseType] = useState();\r\n  const [initialSample, setInitialSample] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [done, setDone] = useState(false);\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (amount.length >= 1) {\r\n      setAmountSum(calculateSum(amount));\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (payment.length >= 1) {\r\n      setPaymentSum(calculateSum(payment));\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (total.length >= 1) {\r\n      setTotalSum(calculateSum(total));\r\n    }\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    for (let i = 0; i < testName.length; i += 1) {\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[i];\r\n      const value2 = quantity[i];\r\n      const value3 = price[i];\r\n      const value4 = amount[i];\r\n      const value5 = insurance[i] === undefined ? '' : insurance[i];\r\n      const value6 = payment[i];\r\n      const value7 = diff[i] === undefined ? '' : diff[i];\r\n      const value8 = total[i];\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${i + 1}</div>`;\r\n      newCell2.innerHTML = `<div class=\"text-center\">${value1}</div>`;\r\n      newCell3.innerHTML = `<div class=\"text-center\">${value2}</div>`;\r\n      newCell4.innerHTML = `<div class=\"text-center\">${value3}</div>`;\r\n      newCell5.innerHTML = `<div class=\"text-center\">${value4}</div>`;\r\n      newCell6.innerHTML = `<div class=\"text-center\">${value5}</div>`;\r\n      newCell7.innerHTML = `<div class=\"text-center\">${value6}</div>`;\r\n      newCell8.innerHTML = `<div class=\"text-center\">${value7}</div>`;\r\n      newCell9.innerHTML = `<div class=\"text-center\">${value8}</div>`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n\r\n    const dataToSubmit = {\r\n      patientId,\r\n    };\r\n\r\n    axios.post('/api/diagnosis/biochemicalDiagnosis/getBiochemicalDiagnosisById', dataToSubmit)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.doc[0] !== undefined) {\r\n            setCaseType(response.data.doc[0].caseType);\r\n            setInitialSample(response.data.doc[0].initialSample);\r\n            setDiagnosis(response.data.doc[0].biochemicalDiagnosis);\r\n            setTestName(response.data.doc[0].testname);\r\n            setQuantity(response.data.doc[0].quantity);\r\n            setPrice(response.data.doc[0].price);\r\n            setAmount(response.data.doc[0].amount);\r\n            setInsurance(response.data.doc[0].insurance);\r\n            setPayment(response.data.doc[0].payment);\r\n            setDiff(response.data.doc[0].diff);\r\n            setTotal(response.data.doc[0].total);\r\n            setDone(true);\r\n          }\r\n        } else {\r\n          console.log(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (done) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      onAddRow();\r\n      setShowForm(true);\r\n    }\r\n  }, [done]);\r\n\r\n  const downloadForm = () => {\r\n    const divToDownload = document.getElementById('download-form');\r\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\r\n      const divImage = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const imgProps = pdf.getImageProperties(divImage);\r\n      const width = 210;\r\n      const height = (imgProps.height * width) / imgProps.width;\r\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\r\n      const title = `${patientId}_phieusinhhoamau.pdf`;\r\n      pdf.save(title);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {done ? (\r\n        <div className=\"outer-form\">\r\n          <div className=\"laboratory-form\" id=\"download-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU SINH HÓA MÁU</b>\r\n                </p>\r\n\r\n                <div style={{ textAlign: 'center' }}>\r\n                  {caseType === 'Thường' ? (\r\n                    <>\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          defaultChecked\r\n                          value=\"Thường\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Thường\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          value=\"Cấp cứu\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Cấp cứu\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          value=\"Thường\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Thường\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          defaultChecked\r\n                          value=\"Cấp cứu\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Cấp cứu\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n              <div className=\"form-group row justify-content-center\">\r\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\r\n                  Mẫu ban đầu:\r\n                  {' '}\r\n                  {initialSample}\r\n                </label>\r\n              </div>\r\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"username\">\r\n                  - Họ tên người bệnh:\r\n                  {' '}\r\n                  {name}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">\r\n                  Năm sinh:\r\n                  {' '}\r\n                  {birthDate}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"gender\">\r\n                  Giới tính:\r\n                  {' '}\r\n                  {gender}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">\r\n                - Địa chỉ:\r\n                {' '}\r\n                {address}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"patientType\">\r\n                - Đối tượng:\r\n                {' '}\r\n                {patientType}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\">\r\n                - Khoa phòng:\r\n                {' '}\r\n                PK\r\n                {department}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"diagnosis\">\r\n                - Chẩn đoán:\r\n                {' '}\r\n                {diagnosis}\r\n              </label>\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    STT\r\n                    <br />\r\n                    {' '}\r\n                    (1)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '25%' }}>\r\n                    Tên xét nghiệm\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (2)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    S.L\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (3)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Đơn giá\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (4)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Thành tiền\r\n                    <br />\r\n                    {' '}\r\n                    (5)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Bảo hiểm\r\n                    <br />\r\n                    {' '}\r\n                    (6)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN chi trả\r\n                    <br />\r\n                    {' '}\r\n                    (7)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Chênh lệch\r\n                    <br />\r\n                    {' '}\r\n                    (8)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN phải trả\r\n                    <br />\r\n                    {' '}\r\n                    (7+8)\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                <tr />\r\n                {/* TODO: complete function to count total amount */}\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                    Tổng\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    {amountSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {paymentSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {totalSum}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : ((\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\r\n        </div>\r\n      ))}\r\n\r\n      {done && showForm && (\r\n      <div>\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\r\n            Tải phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BiochemicalForm;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js",["257","258","259","260"],"/* eslint-disable new-cap */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/button-has-type */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction ResultForm(props) {\r\n// eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.id;\r\n  const date = new Date().toLocaleString('en-GB');\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [normalRate, setNormalRate] = useState([]);\r\n  const [unit, setUnit] = useState([]);\r\n  const [note, setNote] = useState([]);\r\n  const [machine, setMachine] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [done, setDone] = useState(false);\r\n\r\n  const onAddRow = () => {\r\n    for (let i = 0; i < testName.length; i += 1) {\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n\r\n      const value1 = testName[i];\r\n      const value2 = result[i];\r\n      const value3 = normalRate[i];\r\n      const value4 = unit[i];\r\n      const value5 = note[i] === undefined ? ' ' : note[i];\r\n      const value6 = machine[i];\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${value1}</div>`;\r\n      newCell2.innerHTML = `<div class=\"text-center\">${value2}</div>`;\r\n      newCell3.innerHTML = `<div class=\"text-center\">${value3}</div>`;\r\n      newCell4.innerHTML = `<div class=\"text-center\">${value4}</div>`;\r\n      newCell5.innerHTML = `<div class=\"text-center\">${value5}</div>`;\r\n      newCell6.innerHTML = `<div class=\"text-center\">${value6}</div>`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n          setDoctor(response.data.patient[0].doctor);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n\r\n    const dataToSubmit = {\r\n      patientId,\r\n    };\r\n\r\n    axios.post('/api/diagnosis/result/getResultDiagnosisById', dataToSubmit)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.doc[0] !== undefined) {\r\n            setDiagnosis(response.data.doc[0].diagnosis);\r\n            setTestName(response.data.doc[0].testname);\r\n            setResult(response.data.doc[0].result);\r\n            setNormalRate(response.data.doc[0].normalRate);\r\n            setUnit(response.data.doc[0].unit);\r\n            setNote(response.data.doc[0].note);\r\n            setMachine(response.data.doc[0].machine);\r\n            setDone(true);\r\n          }\r\n        } else {\r\n          console.log(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (done) {\r\n      onAddRow();\r\n      setShowForm(true);\r\n    }\r\n  }, [done]);\r\n\r\n  const downloadForm = () => {\r\n    const divToDownload = document.getElementById('download-form');\r\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\r\n      const divImage = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const imgProps = pdf.getImageProperties(divImage);\r\n      const width = 210;\r\n      const height = (imgProps.height * width) / imgProps.width;\r\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\r\n      const title = `${patientId}_phieuxetnghiem.pdf`;\r\n      pdf.save(title);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {done ? (\r\n        <div className=\"outer-form\">\r\n          <div className=\"laboratory-form\" id=\"download-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU KẾT QUẢ XÉT NGHIỆM</b>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <div>\r\n                  <label htmlFor=\"patientId\">\r\n                    Mã BN:\r\n                    {' '}\r\n                    {patientId}\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Ngày NM:\r\n                    {' '}\r\n                    {date.substring(0, 10)}\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Giờ NM:\r\n                    {' '}\r\n                    {date.substring(11)}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"username\">\r\n                  Họ tên người bệnh:\r\n                  {' '}\r\n                  {name}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"birthDate\">\r\n                  Năm sinh:\r\n                  {' '}\r\n                  {birthDate}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"gender\">\r\n                  Giới tính:\r\n                  {' '}\r\n                  {gender}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-7\">\r\n                <label htmlFor=\"address\">\r\n                  Địa chỉ:\r\n                  {' '}\r\n                  {address}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-5\">\r\n                <label htmlFor=\"patientType\">\r\n                  Đối tượng:\r\n                  {' '}\r\n                  {patientType}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-7\">\r\n                <label htmlFor=\"diagnosis\">\r\n                  Chẩn đoán:\r\n                  {' '}\r\n                  {diagnosis}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group col-md-5\">\r\n                <label htmlFor=\"number\">\r\n                  Số BHYT:\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-7\">\r\n                <label htmlFor=\"department\">\r\n                  Khoa phòng:\r\n                  {' '}\r\n                  PK\r\n                  {department}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group col-md-5\">\r\n                <label htmlFor=\"doctor\">\r\n                  Bác sĩ:\r\n                  {' '}\r\n                  {doctor}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-7\">\r\n                <label htmlFor=\"getPerson\">Người lấy mẫu:</label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-5\">\r\n                <label htmlFor=\"get\">\r\n                  Thời gian lấy mẫu:\r\n                  {date.substring(11)}\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                  {date.substring(0, 10)}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-7\">\r\n                <label htmlFor=\"receivePerson\">Người nhận mẫu: Administrator</label>\r\n              </div>\r\n              <div className=\"form-group col-md-5\">\r\n                <label htmlFor=\"receive\">\r\n                  {' '}\r\n                  Thời gian nhận mẫu:\r\n                  {date.substring(11)}\r\n                  {' '}\r\n                  {' '}\r\n                  {' '}\r\n                  {date.substring(0, 10)}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '10%' }}>\r\n                    TÊN XÉT NGHIỆM\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '10%' }}>\r\n                    KẾT QUẢ\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '15%' }}>\r\n                    TRỊ SỐ BÌNH THƯỜNG\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    ĐƠN VỊ\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    GHI CHÚ\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    MÁY XÉT NGHIỆM\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n            </table>\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      ) : ((\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\r\n        </div>\r\n      ))}\r\n\r\n      {done && showForm && (\r\n      <div>\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n\r\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\r\n            Tải phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultForm;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js",["261","262","263","264","265","266","267","268","269","270","271"],"/* eslint-disable max-len */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction HematologyAndImmunology(props) {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.patientId;\r\n  const form = useRef();\r\n  const history = useHistory();\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  // const [doctor, setDoctor] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const [caseType, setCaseType] = useState();\r\n  const [initialSample, setInitialSample] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [checkLine, setCheckLine] = useState(false);\r\n  const [checkForm, setCheckForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onChangeDiagnosis = (e) => {\r\n    setDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeCaseType = (e) => {\r\n    setCaseType(e.target.value);\r\n  };\r\n\r\n  const onChangeInitialSample = (e) => {\r\n    setInitialSample(e.target.value);\r\n  };\r\n\r\n  const onSubmitClick = () => {\r\n    setSubmit(true);\r\n    if (count === 0) {\r\n      setCheckLine(false);\r\n    } else {\r\n      setCheckLine(true);\r\n    }\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('myTable').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onChangeTestName = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    testName[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeQuantity = (e) => {\r\n    const cntStr = e.target.name.substring(8);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    quantity[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePrice = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    price[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeAmount = (e) => {\r\n    const cntStr = e.target.name.substring(6);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    amount[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeInsurance = (e) => {\r\n    const cntStr = e.target.name.substring(9);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    insurance[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangePayment = (e) => {\r\n    const cntStr = e.target.name.substring(7);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    payment[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeDiff = (e) => {\r\n    const cntStr = e.target.name.substring(4);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    diff[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onChangeTotal = (e) => {\r\n    const cntStr = e.target.name.substring(5);\r\n    const cntNum = parseInt(cntStr, 10);\r\n    total[cntNum - 1] = e.target.value;\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    if (checkAllTableField()) {\r\n      const tempCount = count + 1;\r\n      setCount(tempCount);\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[tempCount - 1] ? testName[tempCount - 1] : '';\r\n      const value2 = quantity[tempCount - 1] ? quantity[tempCount - 1] : '';\r\n      const value3 = price[tempCount - 1] ? price[tempCount - 1] : '';\r\n      const value4 = amount[tempCount - 1] ? amount[tempCount - 1] : '';\r\n      const value5 = insurance[tempCount - 1] ? insurance[tempCount - 1] : '';\r\n      const value6 = payment[tempCount - 1] ? payment[tempCount - 1] : '';\r\n      const value7 = diff[tempCount - 1] ? diff[tempCount - 1] : '';\r\n      const value8 = total[tempCount - 1] ? total[tempCount - 1] : '';\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${tempCount}</div>`;\r\n      newCell2.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"testName${tempCount}\" onchange=\"\" value=\"${value1}\" required />`;\r\n      newCell2.onchange = onChangeTestName;\r\n      newCell3.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"quantity${tempCount}\" onchange=\"\" value=\"${value2}\" required />`;\r\n      newCell3.onchange = onChangeQuantity;\r\n      newCell4.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"price${tempCount}\" onchange=\"\" value=\"${value3}\" required />`;\r\n      newCell4.onchange = onChangePrice;\r\n      newCell5.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"amount${tempCount}\" onchange=\"\" value=\"${value4}\" required />`;\r\n      newCell5.onchange = onChangeAmount;\r\n      newCell6.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"insurance${tempCount}\" onchange=\"\" value=\"${value5}\" />`;\r\n      newCell6.onchange = onChangeInsurance;\r\n      newCell7.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"payment${tempCount}\" onchange=\"\" value=\"${value6}\" required />`;\r\n      newCell7.onchange = onChangePayment;\r\n      newCell8.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"diff${tempCount}\" onchange=\"\" value=\"${value7}\" />`;\r\n      newCell8.onchange = onChangeDiff;\r\n      newCell9.innerHTML = `<input type=\"text\" class=\"form-control col\" name=\"total${tempCount}\" onchange=\"\" value=\"${value8}\" required/>`;\r\n      newCell9.onchange = onChangeTotal;\r\n    }\r\n  };\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (checkAllTableField) {\r\n      if (amount.length >= 1) {\r\n        setAmountSum(calculateSum(amount));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (checkAllTableField) {\r\n      if (payment.length >= 1) {\r\n        setPaymentSum(calculateSum(payment));\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (checkAllTableField) {\r\n      if (total.length >= 1) {\r\n        setTotalSum(calculateSum(total));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSuccessful(false);\r\n\r\n    if (submit) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      setCheckForm(true);\r\n      // if true then save to database\r\n\r\n      if (checkForm && checkLine) {\r\n        const dataToSubmit = {\r\n          patientId,\r\n          initialSample,\r\n          caseType,\r\n          diagnosis,\r\n          testName,\r\n          quantity,\r\n          price,\r\n          amount,\r\n          insurance,\r\n          payment,\r\n          diff,\r\n          total,\r\n        };\r\n\r\n        axios.post('/api/diagnosis/hematologyDiagnosis/saveHematologyForm', dataToSubmit)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              const dataToSubmit2 = {\r\n                patientId,\r\n                hematologyAndImmunology: 'done',\r\n              };\r\n\r\n              axios.post('/api/diagnosis/updateHematologyDiagnosis', dataToSubmit2).then((res) => {\r\n                if (res.data.success) {\r\n                  // alert('Update information successfully');\r\n                  history.push(`/hematologyForm/${patientId}`);\r\n                } else {\r\n                  alert('Failed to update information');\r\n                }\r\n              });\r\n            } else {\r\n              console.log(response.data.err);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"laboratory-form\">\r\n      <form onSubmit={handleSubmit} ref={form}>\r\n        {!successful && (\r\n        <div>\r\n          {/* form header */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-2\">\r\n              <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n            </div>\r\n            <div className=\"form-group col-md-8\">\r\n              <p>\r\n                <b>\r\n                  Bệnh viện Da liễu Trung ương\r\n                  <br />\r\n                  15A Phương Mai - Đống Đa - Hà Nội\r\n                  <br />\r\n                  Website:\r\n                  {' '}\r\n                  <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                    http://dalieu.vn\r\n                  </a>\r\n                </b>\r\n              </p>\r\n              <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                <b>PHIẾU HUYẾT HỌC - MIỄN DỊCH</b>\r\n              </p>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Thường\"\r\n                    required\r\n                  />\r\n                  Thường\r\n                </div>\r\n\r\n                <div\r\n                  className=\"form-check form-check-inline\"\r\n                  onChange={onChangeCaseType}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"casetype\"\r\n                    value=\"Cấp cứu\"\r\n                    required\r\n                  />\r\n                  Cấp cứu\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"patientId\">\r\n                Mã BN:\r\n                {' '}\r\n                {patientId}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n            <div className=\"form-group row justify-content-center\">\r\n              <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\r\n                Mẫu ban đầu:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-md-2\"\r\n                name=\"initialSample\"\r\n                value={initialSample}\r\n                onChange={onChangeInitialSample}\r\n                required\r\n              />\r\n            </div>\r\n            <p>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</p>\r\n          </div>\r\n\r\n          {/* form fields */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"birthDate\">Năm sinh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"birthDate\"\r\n                value={birthDate}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                disabled\r\n              >\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"address\">Địa chỉ:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"address\"\r\n              value={address}\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                disabled\r\n              >\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-8\">\r\n              <label htmlFor=\"department\">Khoa phòng:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"department\"\r\n                value={department}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"diagnosis\">Chẩn đoán:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"diagnosis\"\r\n              value={diagnosis}\r\n              onChange={onChangeDiagnosis}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* TODO: add rows to table */}\r\n          <table className=\"table table-bordered\" id=\"myTable\">\r\n            <thead>\r\n              <tr style={{ textAlign: 'center' }}>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  STT\r\n                  <br />\r\n                  {' '}\r\n                  (1)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '25%' }}>\r\n                  Tên xét nghiệm\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (2)\r\n                </th>\r\n                <th scope=\"col\" style={{ width: '5%' }}>\r\n                  S.L\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (3)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Đơn giá\r\n                  {' '}\r\n                  <br />\r\n                  {' '}\r\n                  (4)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Thành tiền\r\n                  <br />\r\n                  {' '}\r\n                  (5)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Bảo hiểm\r\n                  <br />\r\n                  {' '}\r\n                  (6)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN chi trả\r\n                  <br />\r\n                  {' '}\r\n                  (7)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  Chênh lệch\r\n                  <br />\r\n                  {' '}\r\n                  (8)\r\n                </th>\r\n                <th scope=\"col\">\r\n                  BN phải trả\r\n                  <br />\r\n                  {' '}\r\n                  (7+8)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody />\r\n            <tfoot>\r\n              {/* add row button */}\r\n              <tr>\r\n                <td colSpan=\"9\" className=\"text-center\">\r\n                  <button className=\"btn btn-primary\" onClick={onAddRow}>\r\n                    <i className=\"bi bi-plus-square\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-lg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n                      </svg>\r\n                      {' '}\r\n                    </i>\r\n                    <span style={{ marginTop: 8, marginLeft: 5 }}>\r\n                      Thêm dòng\r\n                    </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {/* TODO: complete function to count total amount */}\r\n              <tr>\r\n                <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Tổng\r\n                </td>\r\n                <td className=\"text-center\">\r\n                  {amountSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {paymentSum}\r\n                </td>\r\n                <td />\r\n                <td className=\"text-center\">\r\n                  {totalSum}\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          {/* TODO: update time realtime */}\r\n          <div className=\"form-row\">\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                Chỉ định ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                In phiếu ngày\r\n                {' '}\r\n                {date}\r\n              </p>\r\n              <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                BÁC SĨ ĐIỀU TRỊ\r\n              </p>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={onSubmitClick}>\r\n            Xem phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HematologyAndImmunology;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js",["272","273"],"/* eslint-disable new-cap */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/button-has-type */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport Logo from './images/logo.jpg';\r\n\r\nfunction BiochemicalForm(props) {\r\n// eslint-disable-next-line react/destructuring-assignment\r\n  const patientId = props.match.params.id;\r\n  const date = new Date().toLocaleString('en-GB');\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [diagnosis, setDiagnosis] = useState();\r\n\r\n  const [caseType, setCaseType] = useState();\r\n  const [initialSample, setInitialSample] = useState();\r\n\r\n  // state for form field\r\n  const [testName, setTestName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [amount, setAmount] = useState([]);\r\n  const [insurance, setInsurance] = useState([]);\r\n  const [payment, setPayment] = useState([]);\r\n  const [diff, setDiff] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [amountSum, setAmountSum] = useState(0);\r\n  const [paymentSum, setPaymentSum] = useState(0);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [done, setDone] = useState(false);\r\n\r\n  const calculateSum = (valueArr) => {\r\n    let sum = 0;\r\n    valueArr.forEach((value) => {\r\n      const intValue = (value !== '') ? parseInt(value, 10) : 0;\r\n      sum += intValue;\r\n    });\r\n    return sum;\r\n  };\r\n\r\n  const calculateAmountSum = () => {\r\n    if (amount.length >= 1) {\r\n      setAmountSum(calculateSum(amount));\r\n    }\r\n  };\r\n\r\n  const calculatePaymentSum = () => {\r\n    if (payment.length >= 1) {\r\n      setPaymentSum(calculateSum(payment));\r\n    }\r\n  };\r\n\r\n  const calculateTotalSum = () => {\r\n    if (total.length >= 1) {\r\n      setTotalSum(calculateSum(total));\r\n    }\r\n  };\r\n\r\n  const onAddRow = () => {\r\n    for (let i = 0; i < testName.length; i += 1) {\r\n      const tableRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];\r\n      const newRow = tableRef.insertRow(tableRef.rows.length);\r\n\r\n      // Insert a cell in the row at index 0\r\n      const newCell1 = newRow.insertCell(0);\r\n      const newCell2 = newRow.insertCell(1);\r\n      const newCell3 = newRow.insertCell(2);\r\n      const newCell4 = newRow.insertCell(3);\r\n      const newCell5 = newRow.insertCell(4);\r\n      const newCell6 = newRow.insertCell(5);\r\n      const newCell7 = newRow.insertCell(6);\r\n      const newCell8 = newRow.insertCell(7);\r\n      const newCell9 = newRow.insertCell(8);\r\n\r\n      const value1 = testName[i];\r\n      const value2 = quantity[i];\r\n      const value3 = price[i];\r\n      const value4 = amount[i];\r\n      const value5 = insurance[i] === undefined ? '' : insurance[i];\r\n      const value6 = payment[i];\r\n      const value7 = diff[i] === undefined ? '' : diff[i];\r\n      const value8 = total[i];\r\n\r\n      // Append a text node to the cell\r\n      newCell1.innerHTML = `<div class=\"text-center\">${i + 1}</div>`;\r\n      newCell2.innerHTML = `<div class=\"text-center\">${value1}</div>`;\r\n      newCell3.innerHTML = `<div class=\"text-center\">${value2}</div>`;\r\n      newCell4.innerHTML = `<div class=\"text-center\">${value3}</div>`;\r\n      newCell5.innerHTML = `<div class=\"text-center\">${value4}</div>`;\r\n      newCell6.innerHTML = `<div class=\"text-center\">${value5}</div>`;\r\n      newCell7.innerHTML = `<div class=\"text-center\">${value6}</div>`;\r\n      newCell8.innerHTML = `<div class=\"text-center\">${value7}</div>`;\r\n      newCell9.innerHTML = `<div class=\"text-center\">${value8}</div>`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n\r\n    const dataToSubmit = {\r\n      patientId,\r\n    };\r\n\r\n    axios.post('/api/diagnosis/hematologyDiagnosis/getHematologyDiagnosisById', dataToSubmit)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.doc[0] !== undefined) {\r\n            setCaseType(response.data.doc[0].caseType);\r\n            setInitialSample(response.data.doc[0].initialSample);\r\n            setDiagnosis(response.data.doc[0].hematologyDiagnosis);\r\n            setTestName(response.data.doc[0].testname);\r\n            setQuantity(response.data.doc[0].quantity);\r\n            setPrice(response.data.doc[0].price);\r\n            setAmount(response.data.doc[0].amount);\r\n            setInsurance(response.data.doc[0].insurance);\r\n            setPayment(response.data.doc[0].payment);\r\n            setDiff(response.data.doc[0].diff);\r\n            setTotal(response.data.doc[0].total);\r\n            setDone(true);\r\n          }\r\n        } else {\r\n          console.log(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (done) {\r\n      calculateAmountSum();\r\n      calculatePaymentSum();\r\n      calculateTotalSum();\r\n      onAddRow();\r\n      setShowForm(true);\r\n    }\r\n  }, [done]);\r\n\r\n  const downloadForm = () => {\r\n    const divToDownload = document.getElementById('download-form');\r\n    html2canvas(divToDownload, { scrollY: -window.scrollY }).then((canvas) => {\r\n      const divImage = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const imgProps = pdf.getImageProperties(divImage);\r\n      const width = 210;\r\n      const height = (imgProps.height * width) / imgProps.width;\r\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\r\n      const title = `${patientId}_phieuhuyethocmiendich.pdf`;\r\n      pdf.save(title);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {done ? (\r\n        <div className=\"outer-form\">\r\n          <div className=\"laboratory-form\" id=\"download-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU HUYẾT HỌC - MIỄN DỊCH</b>\r\n                </p>\r\n\r\n                <div style={{ textAlign: 'center' }}>\r\n                  {caseType === 'Thường' ? (\r\n                    <>\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          defaultChecked\r\n                          value=\"Thường\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Thường\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          value=\"Cấp cứu\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Cấp cứu\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          value=\"Thường\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Thường\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"form-check form-check-inline\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"form-check-input\"\r\n                          name=\"casetype\"\r\n                          defaultChecked\r\n                          value=\"Cấp cứu\"\r\n                          required\r\n                          disabled\r\n                        />\r\n                        Cấp cứu\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n              <div className=\"form-group row justify-content-center\">\r\n                <label htmlFor=\"initialSample\" className=\"col-md-2\" style={{ marginTop: 5 }}>\r\n                  Mẫu ban đầu:\r\n                  {' '}\r\n                  {initialSample}\r\n                </label>\r\n              </div>\r\n              <h4>THỰC HIỆN XÉT NGHIỆM TẠI KHU LẤY BỆNH PHẨM</h4>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"username\">\r\n                  - Họ tên người bệnh:\r\n                  {' '}\r\n                  {name}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">\r\n                  Năm sinh:\r\n                  {' '}\r\n                  {birthDate}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"gender\">\r\n                  Giới tính:\r\n                  {' '}\r\n                  {gender}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">\r\n                - Địa chỉ:\r\n                {' '}\r\n                {address}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"patientType\">\r\n                - Đối tượng:\r\n                {' '}\r\n                {patientType}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\">\r\n                - Khoa phòng:\r\n                {' '}\r\n                PK\r\n                {department}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"diagnosis\">\r\n                - Chẩn đoán:\r\n                {' '}\r\n                {diagnosis}\r\n              </label>\r\n            </div>\r\n\r\n            {/* TODO: add rows to table */}\r\n            <table className=\"table table-bordered\" id=\"myTable\">\r\n              <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    STT\r\n                    <br />\r\n                    {' '}\r\n                    (1)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '25%' }}>\r\n                    Tên xét nghiệm\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (2)\r\n                  </th>\r\n                  <th scope=\"col\" style={{ width: '5%' }}>\r\n                    S.L\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (3)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Đơn giá\r\n                    {' '}\r\n                    <br />\r\n                    {' '}\r\n                    (4)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Thành tiền\r\n                    <br />\r\n                    {' '}\r\n                    (5)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Bảo hiểm\r\n                    <br />\r\n                    {' '}\r\n                    (6)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN chi trả\r\n                    <br />\r\n                    {' '}\r\n                    (7)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    Chênh lệch\r\n                    <br />\r\n                    {' '}\r\n                    (8)\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    BN phải trả\r\n                    <br />\r\n                    {' '}\r\n                    (7+8)\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody />\r\n              <tfoot>\r\n                <tr />\r\n                {/* TODO: complete function to count total amount */}\r\n                <tr>\r\n                  <td colSpan=\"4\" style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                    Tổng\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    {amountSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {paymentSum}\r\n                  </td>\r\n                  <td />\r\n                  <td className=\"text-center\">\r\n                    {totalSum}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n\r\n            {/* TODO: update time realtime */}\r\n            <div className=\"form-row\">\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', fontWeight: 'bold', textAlign: 'center' }}>\r\n                  Chỉ định ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  BÁC SĨ ĐIỀU TRỊ\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : ((\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải phiếu xét nghiệm...</h6>\r\n        </div>\r\n      ))}\r\n\r\n      {done && showForm && (\r\n      <div>\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n\r\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\r\n            Tải phiếu xét nghiệm\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BiochemicalForm;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",["274","275","276"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",["277","278"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\utils\\FileUpload.js",["279"],"import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const onDrop = (files) => {\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    Axios.post('/api/patients/uploadImage', formData, config).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          setImages([...images, response.data.image]);\r\n          props.refreshFunction([...images, response.data.image]);\r\n        } else {\r\n          alert('Failed to save images');\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = images.indexOf(image);\r\n\r\n    const newImages = [...images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: '35%',\r\n              height: '400px',\r\n              border: '1px solid lightgray',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '60%',\r\n          height: '400px',\r\n          border: '1px solid lightgray',\r\n          overflowX: 'scroll',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {images.map((image, index) => (\r\n          <div key={`diagnosis-${image}}`} onClick={() => onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: '512px', width: '285px', height: '400px' }}\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`patientImage-${index}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\constant\\Constant.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\Config.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientList.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserList.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsInfoInput.js",["280","281","282"],"/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport SCHEDULE from '../../../constant/Constant';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction PatientsInfoInput(props) {\r\n  const history = useHistory();\r\n  let doctors = [];\r\n\r\n  const [patientId, setPatientId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [birthDate, setBirthDate] = useState(new Date());\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState('');\r\n  const [patientType, setPatientType] = useState('');\r\n  const [doctor, setDoctor] = useState();\r\n  const [department, setDepartment] = useState();\r\n\r\n  const onChangePatientId = (e) => {\r\n    setPatientId(e.target.value);\r\n  };\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeDate = (value) => {\r\n    setBirthDate(value);\r\n  };\r\n\r\n  const onChangeAddress = (e) => {\r\n    setAddress(e.target.value);\r\n  };\r\n\r\n  const onChangeGender = (e) => {\r\n    setGender(e.target.value);\r\n  };\r\n\r\n  const onChangePatientType = (e) => {\r\n    setPatientType(e.target.value);\r\n  };\r\n\r\n  const onChangeDepartment = (e) => {\r\n    setDepartment(e.target.value);\r\n  };\r\n\r\n  const onChangeDoctor = (e) => {\r\n    setDoctor(e.target.value);\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (checkAllTableField) {\r\n      const values = {\r\n        writer: props.user.userData._id,\r\n        patientId,\r\n        name,\r\n        birthDate,\r\n        gender,\r\n        address,\r\n        patientType,\r\n        doctor,\r\n        department,\r\n      };\r\n      axios.post('/api/patients/uploadInfo', values).then((response) => {\r\n        if (response.data.success) {\r\n          const data = {\r\n            patientId,\r\n          };\r\n          axios.post('/api/diagnosis/putDiagnosis', data).then((res) => {\r\n            if (res.data.success) {\r\n              history.push('/patientsList');\r\n            } else {\r\n              alert('Failed to put primary information');\r\n            }\r\n          });\r\n        } else {\r\n          alert('Failed to upload information');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%',\r\n    }}\r\n    >\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Nhập thông tin bệnh nhân</Title>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"patientId\">Mã BN:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"patientId\"\r\n                value={patientId}\r\n                onChange={onChangePatientId}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={onChangeName}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"datebirth\">Năm sinh:</label>\r\n              <br />\r\n              <DatePicker\r\n                className=\"form-control\"\r\n                mode=\"date\"\r\n                format=\"YYYY-MM-DD\"\r\n                selected={birthDate}\r\n                onChange={onChangeDate}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                onChange={onChangeGender}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn giới tính bệnh nhân</option>\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={onChangeAddress}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                onChange={onChangePatientType}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn đối tượng</option>\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <h6 className=\"mb-3\">Phòng khám:</h6>\r\n              <select\r\n                name=\"department\"\r\n                className=\"form-control\"\r\n                value={department}\r\n                onChange={onChangeDepartment}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn phòng khám</option>\r\n                {\r\n                  SCHEDULE.map((item) => (\r\n                    <option key={item.PK} value={item.PK}>\r\n                      PK\r\n                      {item.PK}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\r\n              <select\r\n                name=\"doctor\"\r\n                className=\"form-control\"\r\n                value={doctor}\r\n                onChange={onChangeDoctor}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn bác sĩ</option>\r\n                {SCHEDULE.forEach((item) => {\r\n                  if (item.PK === department) {\r\n                    doctors = item.doctor;\r\n                  }\r\n                })}\r\n                {\r\n                  doctors !== [] && doctors.map((dr) => (\r\n                    <option key={`${dr.name}${dr.level}`} value={dr.name}>\r\n                      {dr.level}\r\n                      .\r\n                      {' '}\r\n                      {dr.name}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <button className=\"btn btn-primary btn-block form-group col-md-2\">\r\n              Thêm thông tin bệnh nhân\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful ? 'alert alert-success' : 'alert alert-danger'\r\n              }\r\n              role=\"alert\"\r\n              style={{ textAlign: 'center', margin: 10 }}\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientsInfoInput;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorDiagnosis.js",["283","284"],"/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SCHEDULE from '../../../constant/Constant';\r\n\r\nfunction DoctorDiagnosis(props) {\r\n  const history = useHistory();\r\n  const patientId = props.match.params.id;\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [primaryDiagnosis, setPrimaryDiagnosis] = useState();\r\n  const [necessaryWork, setNecessaryWork] = useState([]);\r\n\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  // state to check process\r\n  const [imagingCheck, setImagingCheck] = useState(false);\r\n  const [biochemicalCheck, setBioChemicalCheck] = useState(false);\r\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState(false);\r\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState(false);\r\n\r\n  const onChangePrimaryDiagnosis = (e) => {\r\n    setPrimaryDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeNecessaryWork = (e) => {\r\n    setNecessaryWork([...necessaryWork, e.target.value]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (necessaryWork.includes('Chụp chẩn đoán hình ảnh')) {\r\n      setImagingCheck(true);\r\n    }\r\n    if (necessaryWork.includes('Xét nghiệm sinh hóa máu')) {\r\n      setBioChemicalCheck(true);\r\n    }\r\n    if (necessaryWork.includes('Xét nghiệm nấm - kí sinh trùng')) {\r\n      setFungusAndParasiteCheck(true);\r\n    }\r\n    if (necessaryWork.includes('Xét nghiệm huyết học - miễn dịch')) {\r\n      setHematologyAndImmunologyCheck(true);\r\n    }\r\n  }, [necessaryWork]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setBirthDate(time);\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setPatientType(response.data.patient[0].patientType);\r\n          setDoctor(response.data.patient[0].doctor);\r\n          setDepartment(response.data.patient[0].department);\r\n          setShowInfo(true);\r\n          setNotFound(false);\r\n        } else {\r\n          setShowInfo(false);\r\n          setNotFound(true);\r\n          // alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n\r\n      if (element.type === 'radio') {\r\n        let radioValueCheck = false;\r\n        document.getElementById('checkForm').querySelectorAll(`[name=${element.name}]`).forEach((r) => {\r\n          if (r.checked) radioValueCheck = true;\r\n        });\r\n        allFieldFilled = radioValueCheck;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (checkAllTableField) {\r\n      const value1 = imagingCheck ? 'pending' : '';\r\n      const value2 = biochemicalCheck ? 'pending' : '';\r\n      const value3 = fungusAndParasiteCheck ? 'pending' : '';\r\n      const value4 = hematologyAndImmunologyCheck ? 'pending' : '';\r\n      const dataToUpdate2 = {\r\n        patientId,\r\n        value1,\r\n        value2,\r\n        value3,\r\n        value4,\r\n        primaryDiagnosis,\r\n      };\r\n      axios.post('/api/diagnosis/updateDiagnosis', dataToUpdate2).then((response) => {\r\n        if (response.data.success) {\r\n          // do something\r\n          history.push('/doctorPatientList');\r\n        } else {\r\n          // do something\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* show information of patient */}\r\n      {showInfo && (\r\n      <div>\r\n        <div className=\"p-5 text-center\">\r\n          <h3 className=\"mb-3\">THÔNG TIN BỆNH NHÂN</h3>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th scope=\"col\">\r\n                Họ tên\r\n              </th>\r\n              <th scope=\"col\">\r\n                Mã bệnh nhân\r\n              </th>\r\n              <th scope=\"col\">\r\n                Ngày sinh\r\n              </th>\r\n              <th scope=\"col\">\r\n                Giới tính\r\n              </th>\r\n              <th scope=\"col\">\r\n                Địa chỉ\r\n              </th>\r\n              <th scope=\"col\">\r\n                Đối tượng\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"text-center\">{name}</td>\r\n              <td className=\"text-center\">{patientId}</td>\r\n              <td className=\"text-center\">{birthDate}</td>\r\n              <td className=\"text-center\">{gender}</td>\r\n              <td className=\"text-center\">{address}</td>\r\n              <td className=\"text-center\">{patientType}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"p-5 text-center\">\r\n          <h3 className=\"mb-3\">PHẦN DÀNH CHO BÁC SĨ</h3>\r\n        </div>\r\n\r\n        {/* assign imaging */}\r\n        {/* assign labratory */}\r\n        <form id=\"checkForm\" onSubmit={onSubmit}>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-6\">\r\n              <h6 className=\"mb-3\">Phòng khám:</h6>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"department\"\r\n                value={department}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-6\">\r\n              <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\r\n              <input\r\n                type=\"text\"\r\n                name=\"doctor\"\r\n                className=\"form-control\"\r\n                value={doctor}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-12\">\r\n              <h6 className=\"mb-3\">\r\n                Chẩn đoán ban đầu:\r\n              </h6>\r\n              <textarea\r\n                placeholder=\"Nhập chẩn đoán ban đầu của bệnh nhân\"\r\n                className=\"form-control \"\r\n                name=\"primaryDiagnosis\"\r\n                value={primaryDiagnosis}\r\n                onChange={onChangePrimaryDiagnosis}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <h6 className=\"mb-3\">Các chẩn đoán và xét nghiệm cần thiết:</h6>\r\n          <div>\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Chụp chẩn đoán hình ảnh\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Chụp chẩn đoán hình ảnh</label>\r\n            </div>\r\n            <br />\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Xét nghiệm sinh hóa máu\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm sinh hóa máu</label>\r\n            </div>\r\n            <br />\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Xét nghiệm nấm - kí sinh trùng\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm nấm - kí sinh trùng</label>\r\n            </div>\r\n            <br />\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Xét nghiệm huyết học - miễn dịch\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm huyết học - miễn dịch</label>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <button className=\"btn btn-primary btn-block form-group col-md-3\">\r\n              Tiếp tục\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorDiagnosis;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserInput.js",["285","286"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserEdit.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsUpdate.js",["287"],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":39,"column":15,"nodeType":"300","messageId":"301","endLine":39,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":52,"column":15,"nodeType":"300","messageId":"301","endLine":52,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":64,"column":7,"nodeType":"300","messageId":"301","endLine":64,"endColumn":20},{"ruleId":"298","severity":1,"message":"299","line":90,"column":7,"nodeType":"300","messageId":"301","endLine":90,"endColumn":18},{"ruleId":"298","severity":1,"message":"299","line":117,"column":11,"nodeType":"300","messageId":"301","endLine":117,"endColumn":22},{"ruleId":"302","severity":1,"message":"303","line":5,"column":16,"nodeType":"304","messageId":"305","endLine":5,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":1,"column":17,"nodeType":"308","messageId":"309","endLine":1,"endColumn":25},{"ruleId":"306","severity":1,"message":"310","line":1,"column":27,"nodeType":"308","messageId":"309","endLine":1,"endColumn":36},{"ruleId":"306","severity":1,"message":"311","line":10,"column":9,"nodeType":"308","messageId":"309","endLine":10,"endColumn":13},{"ruleId":"306","severity":1,"message":"312","line":69,"column":21,"nodeType":"308","messageId":"309","endLine":69,"endColumn":24},{"ruleId":"306","severity":1,"message":"313","line":86,"column":11,"nodeType":"308","messageId":"309","endLine":86,"endColumn":16},{"ruleId":"306","severity":1,"message":"314","line":91,"column":11,"nodeType":"308","messageId":"309","endLine":91,"endColumn":22},{"ruleId":"315","severity":1,"message":"316","line":77,"column":15,"nodeType":"317","messageId":"301","endLine":77,"endColumn":49},{"ruleId":"306","severity":1,"message":"313","line":90,"column":11,"nodeType":"308","messageId":"309","endLine":90,"endColumn":16},{"ruleId":"306","severity":1,"message":"314","line":95,"column":11,"nodeType":"308","messageId":"309","endLine":95,"endColumn":22},{"ruleId":"306","severity":1,"message":"318","line":7,"column":27,"nodeType":"308","messageId":"309","endLine":7,"endColumn":33},{"ruleId":"306","severity":1,"message":"319","line":22,"column":10,"nodeType":"308","messageId":"309","endLine":22,"endColumn":20},{"ruleId":"306","severity":1,"message":"320","line":10,"column":24,"nodeType":"308","messageId":"309","endLine":10,"endColumn":39},{"ruleId":"306","severity":1,"message":"321","line":11,"column":27,"nodeType":"308","messageId":"309","endLine":11,"endColumn":45},{"ruleId":"315","severity":1,"message":"316","line":46,"column":11,"nodeType":"317","messageId":"301","endLine":46,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":102,"column":17,"nodeType":"317","messageId":"301","endLine":102,"endColumn":54},{"ruleId":"298","severity":1,"message":"299","line":107,"column":11,"nodeType":"300","messageId":"301","endLine":107,"endColumn":22},{"ruleId":"306","severity":1,"message":"321","line":11,"column":27,"nodeType":"308","messageId":"309","endLine":11,"endColumn":45},{"ruleId":"306","severity":1,"message":"322","line":12,"column":28,"nodeType":"308","messageId":"309","endLine":12,"endColumn":47},{"ruleId":"306","severity":1,"message":"323","line":13,"column":34,"nodeType":"308","messageId":"309","endLine":13,"endColumn":59},{"ruleId":"306","severity":1,"message":"324","line":14,"column":40,"nodeType":"308","messageId":"309","endLine":14,"endColumn":71},{"ruleId":"306","severity":1,"message":"325","line":15,"column":23,"nodeType":"308","messageId":"309","endLine":15,"endColumn":37},{"ruleId":"306","severity":1,"message":"320","line":13,"column":24,"nodeType":"308","messageId":"309","endLine":13,"endColumn":39},{"ruleId":"306","severity":1,"message":"322","line":14,"column":28,"nodeType":"308","messageId":"309","endLine":14,"endColumn":47},{"ruleId":"306","severity":1,"message":"323","line":15,"column":34,"nodeType":"308","messageId":"309","endLine":15,"endColumn":59},{"ruleId":"306","severity":1,"message":"324","line":16,"column":40,"nodeType":"308","messageId":"309","endLine":16,"endColumn":71},{"ruleId":"306","severity":1,"message":"325","line":17,"column":23,"nodeType":"308","messageId":"309","endLine":17,"endColumn":37},{"ruleId":"306","severity":1,"message":"326","line":18,"column":25,"nodeType":"308","messageId":"309","endLine":18,"endColumn":41},{"ruleId":"298","severity":1,"message":"299","line":33,"column":11,"nodeType":"300","messageId":"301","endLine":33,"endColumn":22},{"ruleId":"306","severity":1,"message":"327","line":33,"column":20,"nodeType":"308","messageId":"309","endLine":33,"endColumn":31},{"ruleId":"306","severity":1,"message":"328","line":34,"column":20,"nodeType":"308","messageId":"309","endLine":34,"endColumn":31},{"ruleId":"306","severity":1,"message":"329","line":35,"column":17,"nodeType":"308","messageId":"309","endLine":35,"endColumn":25},{"ruleId":"306","severity":1,"message":"330","line":36,"column":18,"nodeType":"308","messageId":"309","endLine":36,"endColumn":27},{"ruleId":"306","severity":1,"message":"331","line":37,"column":21,"nodeType":"308","messageId":"309","endLine":37,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":38,"column":19,"nodeType":"308","messageId":"309","endLine":38,"endColumn":29},{"ruleId":"306","severity":1,"message":"333","line":39,"column":16,"nodeType":"308","messageId":"309","endLine":39,"endColumn":23},{"ruleId":"306","severity":1,"message":"334","line":40,"column":17,"nodeType":"308","messageId":"309","endLine":40,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":66,"column":11,"nodeType":"317","messageId":"301","endLine":66,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":271,"column":19,"nodeType":"317","messageId":"301","endLine":271,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":275,"column":15,"nodeType":"300","messageId":"301","endLine":275,"endColumn":26},{"ruleId":"306","severity":1,"message":"327","line":32,"column":20,"nodeType":"308","messageId":"309","endLine":32,"endColumn":31},{"ruleId":"306","severity":1,"message":"328","line":33,"column":20,"nodeType":"308","messageId":"309","endLine":33,"endColumn":31},{"ruleId":"306","severity":1,"message":"329","line":34,"column":17,"nodeType":"308","messageId":"309","endLine":34,"endColumn":25},{"ruleId":"306","severity":1,"message":"330","line":35,"column":18,"nodeType":"308","messageId":"309","endLine":35,"endColumn":27},{"ruleId":"306","severity":1,"message":"331","line":36,"column":21,"nodeType":"308","messageId":"309","endLine":36,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":37,"column":19,"nodeType":"308","messageId":"309","endLine":37,"endColumn":29},{"ruleId":"306","severity":1,"message":"333","line":38,"column":16,"nodeType":"308","messageId":"309","endLine":38,"endColumn":23},{"ruleId":"306","severity":1,"message":"334","line":39,"column":17,"nodeType":"308","messageId":"309","endLine":39,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":65,"column":11,"nodeType":"317","messageId":"301","endLine":65,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":265,"column":19,"nodeType":"317","messageId":"301","endLine":265,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":269,"column":15,"nodeType":"300","messageId":"301","endLine":269,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":122,"column":11,"nodeType":"317","messageId":"301","endLine":122,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":147,"column":11,"nodeType":"300","messageId":"301","endLine":147,"endColumn":22},{"ruleId":"306","severity":1,"message":"327","line":30,"column":20,"nodeType":"308","messageId":"309","endLine":30,"endColumn":31},{"ruleId":"306","severity":1,"message":"335","line":31,"column":18,"nodeType":"308","messageId":"309","endLine":31,"endColumn":27},{"ruleId":"306","severity":1,"message":"336","line":32,"column":22,"nodeType":"308","messageId":"309","endLine":32,"endColumn":35},{"ruleId":"306","severity":1,"message":"337","line":33,"column":16,"nodeType":"308","messageId":"309","endLine":33,"endColumn":23},{"ruleId":"306","severity":1,"message":"338","line":34,"column":16,"nodeType":"308","messageId":"309","endLine":34,"endColumn":23},{"ruleId":"306","severity":1,"message":"339","line":35,"column":19,"nodeType":"308","messageId":"309","endLine":35,"endColumn":29},{"ruleId":"315","severity":1,"message":"316","line":57,"column":11,"nodeType":"317","messageId":"301","endLine":57,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":189,"column":19,"nodeType":"317","messageId":"301","endLine":189,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":193,"column":15,"nodeType":"300","messageId":"301","endLine":193,"endColumn":26},{"ruleId":"306","severity":1,"message":"340","line":11,"column":10,"nodeType":"308","messageId":"309","endLine":11,"endColumn":19},{"ruleId":"306","severity":1,"message":"341","line":17,"column":17,"nodeType":"308","messageId":"309","endLine":17,"endColumn":25},{"ruleId":"306","severity":1,"message":"342","line":18,"column":20,"nodeType":"308","messageId":"309","endLine":18,"endColumn":31},{"ruleId":"306","severity":1,"message":"343","line":19,"column":23,"nodeType":"308","messageId":"309","endLine":19,"endColumn":37},{"ruleId":"315","severity":1,"message":"316","line":33,"column":13,"nodeType":"317","messageId":"301","endLine":33,"endColumn":37},{"ruleId":"315","severity":1,"message":"316","line":123,"column":11,"nodeType":"317","messageId":"301","endLine":123,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":149,"column":11,"nodeType":"300","messageId":"301","endLine":149,"endColumn":22},{"ruleId":"306","severity":1,"message":"319","line":23,"column":10,"nodeType":"308","messageId":"309","endLine":23,"endColumn":20},{"ruleId":"306","severity":1,"message":"344","line":23,"column":22,"nodeType":"308","messageId":"309","endLine":23,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":83,"column":11,"nodeType":"317","messageId":"301","endLine":83,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":105,"column":11,"nodeType":"300","messageId":"301","endLine":105,"endColumn":22},{"ruleId":"306","severity":1,"message":"327","line":33,"column":20,"nodeType":"308","messageId":"309","endLine":33,"endColumn":31},{"ruleId":"306","severity":1,"message":"328","line":34,"column":20,"nodeType":"308","messageId":"309","endLine":34,"endColumn":31},{"ruleId":"306","severity":1,"message":"329","line":35,"column":17,"nodeType":"308","messageId":"309","endLine":35,"endColumn":25},{"ruleId":"306","severity":1,"message":"330","line":36,"column":18,"nodeType":"308","messageId":"309","endLine":36,"endColumn":27},{"ruleId":"306","severity":1,"message":"331","line":37,"column":21,"nodeType":"308","messageId":"309","endLine":37,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":38,"column":19,"nodeType":"308","messageId":"309","endLine":38,"endColumn":29},{"ruleId":"306","severity":1,"message":"333","line":39,"column":16,"nodeType":"308","messageId":"309","endLine":39,"endColumn":23},{"ruleId":"306","severity":1,"message":"334","line":40,"column":17,"nodeType":"308","messageId":"309","endLine":40,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":66,"column":11,"nodeType":"317","messageId":"301","endLine":66,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":271,"column":19,"nodeType":"317","messageId":"301","endLine":271,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":275,"column":15,"nodeType":"300","messageId":"301","endLine":275,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":123,"column":11,"nodeType":"317","messageId":"301","endLine":123,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":149,"column":11,"nodeType":"300","messageId":"301","endLine":149,"endColumn":22},{"ruleId":"306","severity":1,"message":"345","line":4,"column":16,"nodeType":"308","messageId":"309","endLine":4,"endColumn":20},{"ruleId":"306","severity":1,"message":"346","line":11,"column":7,"nodeType":"308","messageId":"309","endLine":11,"endColumn":20},{"ruleId":"315","severity":1,"message":"316","line":27,"column":9,"nodeType":"317","messageId":"301","endLine":27,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":2,"column":17,"nodeType":"308","messageId":"309","endLine":2,"endColumn":25},{"ruleId":"306","severity":1,"message":"310","line":2,"column":27,"nodeType":"308","messageId":"309","endLine":2,"endColumn":36},{"ruleId":"315","severity":1,"message":"316","line":21,"column":11,"nodeType":"317","messageId":"301","endLine":21,"endColumn":41},{"ruleId":"306","severity":1,"message":"318","line":3,"column":27,"nodeType":"308","messageId":"309","endLine":3,"endColumn":33},{"ruleId":"315","severity":1,"message":"316","line":92,"column":15,"nodeType":"317","messageId":"301","endLine":92,"endColumn":57},{"ruleId":"315","severity":1,"message":"316","line":96,"column":11,"nodeType":"317","messageId":"301","endLine":96,"endColumn":48},{"ruleId":"306","severity":1,"message":"347","line":8,"column":8,"nodeType":"308","messageId":"309","endLine":8,"endColumn":16},{"ruleId":"306","severity":1,"message":"348","line":25,"column":10,"nodeType":"308","messageId":"309","endLine":25,"endColumn":18},{"ruleId":"306","severity":1,"message":"318","line":4,"column":27,"nodeType":"308","messageId":"309","endLine":4,"endColumn":33},{"ruleId":"315","severity":1,"message":"316","line":87,"column":11,"nodeType":"317","messageId":"301","endLine":87,"endColumn":45},{"ruleId":"306","severity":1,"message":"318","line":4,"column":27,"nodeType":"308","messageId":"309","endLine":4,"endColumn":33},"lines-around-directive",["349"],"no-spaced-func",["350"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","func-names","Unexpected unnamed function.","FunctionDeclaration","unnamed","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'err' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","'useRef' is defined but never used.","'successful' is assigned a value but never used.","'setImagingState' is assigned a value but never used.","'setDoctorDiagnosis' is assigned a value but never used.","'setBioChemicalCheck' is assigned a value but never used.","'setFungusAndParasiteCheck' is assigned a value but never used.","'setHematologyAndImmunologyCheck' is assigned a value but never used.","'setResultCheck' is assigned a value but never used.","'setDoneDiagnosis' is assigned a value but never used.","'setTestName' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setInsurance' is assigned a value but never used.","'setPayment' is assigned a value but never used.","'setDiff' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'setResult' is assigned a value but never used.","'setNormalRate' is assigned a value but never used.","'setUnit' is assigned a value but never used.","'setNote' is assigned a value but never used.","'setMachine' is assigned a value but never used.","'patientId' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setPostSize' is assigned a value but never used.","'setSearchTerms' is assigned a value but never used.","'setSuccessful' is assigned a value but never used.","'Icon' is defined but never used.","'MenuItemGroup' is assigned a value but never used.","'SCHEDULE' is defined but never used.","'notFound' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]