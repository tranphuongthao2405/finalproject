[{"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\serviceWorker.js":"2","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\index.js":"3","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\user_reducer.js":"4","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\types.js":"5","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\App.js":"6","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\hoc\\auth.js":"7","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"8","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\NavBar.js":"9","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"10","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"11","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Footer\\Footer.js":"12","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js":"13","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js":"14","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js":"15","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js":"16","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js":"17","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js":"18","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js":"19","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js":"20","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js":"21","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js":"22","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js":"23","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js":"24","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js":"25","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js":"26","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\user_actions.js":"27","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"28","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"29","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\utils\\FileUpload.js":"30","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\constant\\Constant.js":"31","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\Config.js":"32","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientList.js":"33","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserList.js":"34","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsInfoInput.js":"35","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorDiagnosis.js":"36","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserInput.js":"37","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserEdit.js":"38","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsUpdate.js":"39","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FormFooter.js":"40"},{"size":1236,"mtime":1619097284399,"results":"41","hashOfConfig":"42"},{"size":5141,"mtime":1619642245986,"results":"43","hashOfConfig":"42"},{"size":164,"mtime":1619081029908,"results":"44","hashOfConfig":"42"},{"size":538,"mtime":1619082122146,"results":"45","hashOfConfig":"42"},{"size":200,"mtime":1619081920602,"results":"46","hashOfConfig":"42"},{"size":4562,"mtime":1623937566191,"results":"47","hashOfConfig":"42"},{"size":859,"mtime":1619081029921,"results":"48","hashOfConfig":"42"},{"size":132,"mtime":1619082457302,"results":"49","hashOfConfig":"42"},{"size":1662,"mtime":1621331699498,"results":"50","hashOfConfig":"42"},{"size":6389,"mtime":1623922365516,"results":"51","hashOfConfig":"42"},{"size":8495,"mtime":1623509341650,"results":"52","hashOfConfig":"42"},{"size":348,"mtime":1619899400108,"results":"53","hashOfConfig":"42"},{"size":3631,"mtime":1623562533330,"results":"54","hashOfConfig":"42"},{"size":7519,"mtime":1623948887570,"results":"55","hashOfConfig":"42"},{"size":10644,"mtime":1623582695294,"results":"56","hashOfConfig":"42"},{"size":11066,"mtime":1623948276334,"results":"57","hashOfConfig":"42"},{"size":12580,"mtime":1623948739266,"results":"58","hashOfConfig":"42"},{"size":19762,"mtime":1623941639148,"results":"59","hashOfConfig":"42"},{"size":18589,"mtime":1623941724034,"results":"60","hashOfConfig":"42"},{"size":15185,"mtime":1623941747010,"results":"61","hashOfConfig":"42"},{"size":16301,"mtime":1623941817527,"results":"62","hashOfConfig":"42"},{"size":7326,"mtime":1623948443061,"results":"63","hashOfConfig":"42"},{"size":15619,"mtime":1623941698953,"results":"64","hashOfConfig":"42"},{"size":11956,"mtime":1623941834146,"results":"65","hashOfConfig":"42"},{"size":19293,"mtime":1623941767933,"results":"66","hashOfConfig":"42"},{"size":15691,"mtime":1623941788473,"results":"67","hashOfConfig":"42"},{"size":1040,"mtime":1619081967816,"results":"68","hashOfConfig":"42"},{"size":1808,"mtime":1623926782717,"results":"69","hashOfConfig":"42"},{"size":2364,"mtime":1623926313813,"results":"70","hashOfConfig":"42"},{"size":2346,"mtime":1621543688165,"results":"71","hashOfConfig":"42"},{"size":4390,"mtime":1620125079976,"results":"72","hashOfConfig":"42"},{"size":60,"mtime":1619081029909,"results":"73","hashOfConfig":"42"},{"size":5426,"mtime":1623948094361,"results":"74","hashOfConfig":"42"},{"size":5892,"mtime":1623937198611,"results":"75","hashOfConfig":"42"},{"size":8748,"mtime":1623719909374,"results":"76","hashOfConfig":"42"},{"size":9889,"mtime":1623726316817,"results":"77","hashOfConfig":"42"},{"size":6534,"mtime":1623928277581,"results":"78","hashOfConfig":"42"},{"size":6963,"mtime":1623938732885,"results":"79","hashOfConfig":"42"},{"size":9514,"mtime":1623941234999,"results":"80","hashOfConfig":"42"},{"size":822,"mtime":1623941460235,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1hq94k9",{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\index.js",[],["173","174","175","176","177"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\serviceWorker.js",["178","179","180","181","182"],"/* eslint-disable no-param-reassign */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\index.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_reducers\\user_reducer.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\types.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\App.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\hoc\\auth.js",["183"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { auth } from '../_actions/user_actions';\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(auth()).then((response) => {\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push('/login');\r\n          }\r\n        } else if (adminRoute && !response.payload.isAdmin) {\r\n          props.history.push('/');\r\n        } else if (option === false) {\r\n          props.history.push('/');\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent {...props} user={user} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["184","185"],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction LandingPage() {\r\n  return <></>;\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\NavBar.js",["186"],"import React, { useState } from 'react';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport './Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  // TODO: only show right nav bar\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: 'fixed', zIndex: 999, width: '100%' }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a\r\n          href=\"/\"\r\n          style={{ display: 'flex', justifyContent: 'space-between', textDecoration: 'none' }}\r\n        >\r\n          Trang chủ\r\n        </a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["187","188","189"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["190","191","192"],"/* eslint-disable no-shadow */\r\nimport React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Form, Input, Button, Select,\r\n} from 'antd';\r\nimport { registerUser } from '../../../_actions/user_actions';\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        firstName: Yup.string().required('Vui lòng nhập họ'),\r\n        lastName: Yup.string().required('Vui lòng nhập tên'),\r\n        email: Yup.string()\r\n          .email('Email không hợp lệ')\r\n          .required('Vui lòng nhập email'),\r\n        password: Yup.string()\r\n          .min(6, 'Mật khẩu phải có tối thiểu 6 ký tự')\r\n          .required('Vui lòng nhập mật khẩu'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Mật khẩu phải khớp')\r\n          .required('Vui lòng nhập lại mật khẩu xác nhận'),\r\n        role: Yup.string().required('Vui lòng chọn vai trò'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          const dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            firstname: values.firstName,\r\n            lastname: values.lastName,\r\n            role: values.role,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push('/login');\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <Form\r\n              style={{ minWidth: '550px' }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n              className=\"form\"\r\n            >\r\n              <Form.Item style={{ textAlign: 'end' }}>\r\n                <h2>Đăng ký</h2>\r\n              </Form.Item>\r\n              <Form.Item required label=\"Họ\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  placeholder=\"Nhập họ\"\r\n                  type=\"text\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.firstName && touched.firstName\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.firstName && touched.firstName && (\r\n                  <div className=\"input-feedback\">{errors.firstName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Tên\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Nhập tên\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Nhập email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Mật khẩu\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Nhập mật khẩu\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Xác nhận mật khẩu\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Nhập mật khẩu xác nhận\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Vai trò\" hasFeedback>\r\n                <Select\r\n                  id=\"role\"\r\n                  placeholder=\"Chọn vai trò\"\r\n                  value={values.role}\r\n                  onChange={(selectedOption) => handleChange('role')(selectedOption)}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.role && touched.role\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                >\r\n                  <Option value=\"admin\">Admin</Option>\r\n                  <Option value=\"doctor\">Bác sĩ</Option>\r\n                  <Option value=\"laboratory staff\">Nhân viên xét nghiệm</Option>\r\n                  <Option value=\"imaging staff\">Nhân viên chụp chẩn đoán hình ảnh</Option>\r\n                  <Option value=\"staff\">Nhân viên</Option>\r\n                </Select>\r\n                {errors.role && touched.role && (\r\n                  <div className=\"input-feedback\">{errors.role}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: 'center' }} {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Đăng ký\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImagingStaffBoard.js",["193","194"],"/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable no-lonely-if */\r\n/* eslint-disable no-console */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport FileUpload from '../../utils/FileUpload';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction ImagingStaffBoard(props) {\r\n  const pId = props.match.params.id;\r\n\r\n  const history = useHistory();\r\n  const [images, setImages] = useState([]);\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (images && images.length > 0) {\r\n      const imagesArr = [];\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      images\r\n        // eslint-disable-next-line array-callback-return\r\n        && images.map((item) => {\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${item}`,\r\n            thumbnail: `http://localhost:5000/${item}`,\r\n          });\r\n        });\r\n      setImagesArray(imagesArr);\r\n    }\r\n  }, [images]);\r\n\r\n  const updateImages = (newImage) => {\r\n    setImages(newImage);\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setSuccessful(false);\r\n    if (images.length !== []) {\r\n      const dataToSubmit = {\r\n        pId,\r\n        images,\r\n      };\r\n\r\n      axios.post('/api/diagnosis/imagingDiagnosis/saveImage', dataToSubmit).then((response) => {\r\n        if (response.data.success) {\r\n          // alert('Save images successfully');\r\n          axios.post('/api/diagnosis/imagingDiagnosis/uploadImage', dataToSubmit).then((res) => {\r\n            if (res.data.success) {\r\n              // alert('Update images successfully');\r\n              history.push(`/imageProcessing/${pId}`);\r\n            } else {\r\n              // do something\r\n            }\r\n          });\r\n        } else {\r\n          alert('Failed to update information');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '90%', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Tải ảnh chụp chẩn đoán của bệnh nhân</Title>\r\n      </div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group form-row justify-content-center\">\r\n          <label\r\n            style={{ display: 'inline-block', marginTop: 10 }}\r\n            className=\"col-md-1\"\r\n          >\r\n            Mã BN:\r\n          </label>\r\n          {pId && (\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control col-md-1\"\r\n              name=\"patientId\"\r\n              value={pId}\r\n              disabled\r\n            />\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        {imagesArray && imagesArray.length > 0 && (\r\n          <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10%' }}>\r\n            <ImageGallery items={imagesArray} />\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n        <br />\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary btn-block form-group col-md-3\">\r\n            Tiến hành phân tích ảnh\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagingStaffBoard;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\PatientList.js",["195","196","197"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\ImagingStaffBoard\\ImageProcessing.js",["198","199","200"],"/* eslint-disable new-cap */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { useState, useEffect } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Logo from '../LaboratoryStaffBoard/medicalTests/images/logo.jpg';\r\n\r\nfunction ImageProcessing(props) {\r\n  const patientId = props.match.params.id;\r\n  const date = new Date().toLocaleString('en-GB');\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [department, setDepartment] = useState();\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [imageProcessing, setImageProcessing] = useState([]);\r\n  const [done, setDone] = useState(false);\r\n  let tempCount = 0;\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setBirthDate(time);\r\n          setDepartment(response.data.patient[0].department);\r\n          setPatientType(response.data.patient[0].patientType);\r\n        } else {\r\n          alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (images && images.length > 0) {\r\n      const imagesArr = [];\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      images\r\n        // eslint-disable-next-line array-callback-return\r\n        && images.map((item) => {\r\n          const folder = item.substring(0, 8);\r\n          const mimage = `m${item.substring(8)}`;\r\n          const mitem = folder + mimage;\r\n          const dimage = `d${item.substring(8)}`;\r\n          const ditem = folder + dimage;\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${item}`,\r\n            thumbnail: `http://localhost:5000/${item}`,\r\n          });\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${mitem}`,\r\n            thumbnail: `http://localhost:5000/${mitem}`,\r\n          });\r\n          imagesArr.push({\r\n            original: `http://localhost:5000/${ditem}`,\r\n            thumbnail: `http://localhost:5000/${ditem}`,\r\n          });\r\n        });\r\n      setImagesArray(imagesArr);\r\n    }\r\n  }, [images]);\r\n\r\n  useEffect(() => {\r\n    const dataToSubmit = {\r\n      patientId,\r\n    };\r\n\r\n    axios.post('/api/diagnosis/imagingDiagnosis/getImagingDiagnosisById', dataToSubmit)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.doc[0] !== undefined) {\r\n            setImages(response.data.doc[0].images);\r\n            setImageProcessing(response.data.doc[0].imagingDiagnosis);\r\n            const dataToSubmit2 = {\r\n              patientId,\r\n              imaging: 'done',\r\n            };\r\n\r\n            axios.post('/api/diagnosis/updateImagingDiagnosis', dataToSubmit2).then((res) => {\r\n              if (res.data.success) {\r\n                // alert('Update information successfully');\r\n                setDone(true);\r\n              } else {\r\n                alert('Failed to update information');\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          console.log(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const downloadForm = () => {\r\n    const divToDownload = document.getElementById('download-form');\r\n    html2canvas(divToDownload, {\r\n      scrollY: -window.scrollY,\r\n      useCORS: true,\r\n    }).then((canvas) => {\r\n      const divImage = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const imgProps = pdf.getImageProperties(divImage);\r\n      const width = 210;\r\n      const height = (imgProps.height * width) / imgProps.width;\r\n      pdf.addImage(divImage, 'png', 0, 10, width, height);\r\n      const title = `${patientId}_chandoanhinhanh.pdf`;\r\n      pdf.save(title);\r\n    });\r\n  };\r\n\r\n  const imgType = (value) => {\r\n    let returnType;\r\n    if (value % 3 === 1) {\r\n      returnType = 'Ảnh gốc';\r\n    } else if (value % 3 === 2) {\r\n      returnType = 'Ảnh mask';\r\n    } else if (value % 3 === 0) {\r\n      returnType = 'Ảnh so sánh';\r\n    }\r\n    return returnType;\r\n  };\r\n\r\n  const returnPercentage = (value) => {\r\n    let percentage;\r\n    let returnString;\r\n    if (value % 3 === 1) {\r\n      percentage = parseFloat(imageProcessing[value - 1]) % 100;\r\n      returnString = `${percentage}%`;\r\n    } else {\r\n      returnString = '';\r\n    }\r\n    return returnString;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {done && images && images.length > 0 && imagesArray && user.userData ? (\r\n        <div className=\"outer-form\">\r\n          <div className=\"laboratory-form\" id=\"download-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-2\">\r\n                <img src={Logo} alt=\"logo\" width=\"100%\" height=\"90%\" />\r\n              </div>\r\n              <div className=\"form-group col-md-8\">\r\n                <p>\r\n                  <b>\r\n                    Bệnh viện Da liễu Trung ương\r\n                    <br />\r\n                    15A Phương Mai - Đống Đa - Hà Nội\r\n                    <br />\r\n                    Website:\r\n                    {' '}\r\n                    <a href=\"http://dalieu.vn\" style={{ color: 'black' }}>\r\n                      http://dalieu.vn\r\n                    </a>\r\n                  </b>\r\n                </p>\r\n                <p style={{ textAlign: 'center', fontSize: '24px' }}>\r\n                  <b>PHIẾU CHỤP CHẨN ĐOÁN HÌNH ẢNH</b>\r\n                </p>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"patientId\">\r\n                  Mã BN:\r\n                  {' '}\r\n                  {patientId}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* form fields */}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"username\">\r\n                  Họ tên người bệnh:\r\n                  {' '}\r\n                  {name}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"birthDate\">\r\n                  Năm sinh:\r\n                  {' '}\r\n                  {birthDate}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"gender\">\r\n                  Giới tính:\r\n                  {' '}\r\n                  {gender}\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">\r\n                Địa chỉ:\r\n                {' '}\r\n                {address}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"patientType\">\r\n                Đối tượng:\r\n                {' '}\r\n                {patientType}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\">\r\n                Khoa phòng:\r\n                {' '}\r\n                PK\r\n                {department}\r\n              </label>\r\n            </div>\r\n            <p style={{ textAlign: 'center', fontSize: '18px' }}>\r\n              <b>KẾT QUẢ PHÂN TÍCH HÌNH ẢNH</b>\r\n            </p>\r\n            {imagesArray && imagesArray.length > 0 && (\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <th scope=\"col\" className=\"text-center\">STT</th>\r\n                <th scope=\"col\" className=\"text-center\">Ảnh</th>\r\n                <th scope=\"col\" className=\"text-center\">Loại ảnh</th>\r\n                <th scope=\"col\" className=\"text-center\">Tỉ lệ bị Melanoma</th>\r\n              </thead>\r\n                {imagesArray.map((img) => {\r\n                  tempCount += 1;\r\n                  return (\r\n                    <tbody>\r\n                      <td className=\"text-center\">{tempCount}</td>\r\n                      <td className=\"text-center\"><img style={{ width: 256, height: 256 }} src={img.original} alt=\"img-diagnosis\" /></td>\r\n                      <td className=\"text-center\">{imgType(tempCount)}</td>\r\n                      <td className=\"text-center\">{returnPercentage(tempCount)}</td>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n            </table>\r\n            )}\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"col\" />\r\n              <div className=\"col\">\r\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\r\n                  In phiếu ngày\r\n                  {' '}\r\n                  {date}\r\n                </p>\r\n                <p style={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                  NHÂN VIÊN CHỤP CHẨN ĐOÁN HÌNH ẢNH\r\n                  <br />\r\n                  {user.userData.firstname}\r\n                  {' '}\r\n                  {user.userData.lastname}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : ((\r\n        <div className=\"p-5 text-center\">\r\n          <h6 className=\"mb-3\">Đang tải phiếu chẩn đoán hình ảnh...</h6>\r\n        </div>\r\n      ))}\r\n\r\n      {done && images && images.length > 0 && imagesArray && (\r\n      <div>\r\n        <br />\r\n        <br />\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '25%' }} className=\"not-download\">\r\n          <ImageGallery items={imagesArray} />\r\n        </div>\r\n\r\n        <div className=\"form-row justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={downloadForm}>\r\n            Tải kết quả chẩn đoán hình ảnh\r\n          </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageProcessing;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\PatientList.js",["201","202","203","204","205","206"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\PatientList.js",["207","208","209","210","211","212","213","214"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Biochemical.js",["215","216","217","218","219","220","221","222","223","224","225"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusAndParasite.js",["226","227","228","229","230","231","232","233","234","235","236"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FungusForm.js",["237","238"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\Result.js",["239","240","241","242","243","244","245","246","247"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\PatientProfile\\PatientProfile.js",["248","249","250","251","252"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\BiochemicalForm.js",["253","254"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\ResultForm.js",["255","256","257","258"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyAndImmunology.js",["259","260","261","262","263","264","265","266","267","268","269"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\HematologyForm.js",["270","271","272"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",["273","274","275"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",["276","277"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\utils\\FileUpload.js",["278"],"import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const onDrop = (files) => {\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n    Axios.post('/api/patients/uploadImage', formData, config).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          setImages([...images, response.data.image]);\r\n          props.refreshFunction([...images, response.data.image]);\r\n        } else {\r\n          alert('Failed to save images');\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = images.indexOf(image);\r\n\r\n    const newImages = [...images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: '35%',\r\n              height: '400px',\r\n              border: '1px solid lightgray',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '60%',\r\n          height: '400px',\r\n          border: '1px solid lightgray',\r\n          overflowX: 'scroll',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {images.map((image, index) => (\r\n          <div key={`diagnosis-${image}}`} onClick={() => onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: '512px', width: '285px', height: '400px' }}\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`patientImage-${index}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\constant\\Constant.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\Config.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientList.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserList.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsInfoInput.js",["279","280","281"],"/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport SCHEDULE from '../../../constant/Constant';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction PatientsInfoInput(props) {\r\n  const history = useHistory();\r\n  let doctors = [];\r\n\r\n  const [patientId, setPatientId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [birthDate, setBirthDate] = useState(new Date());\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState('');\r\n  const [patientType, setPatientType] = useState('');\r\n  const [doctor, setDoctor] = useState();\r\n  const [department, setDepartment] = useState();\r\n\r\n  const onChangePatientId = (e) => {\r\n    setPatientId(e.target.value);\r\n  };\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangeDate = (value) => {\r\n    setBirthDate(value);\r\n  };\r\n\r\n  const onChangeAddress = (e) => {\r\n    setAddress(e.target.value);\r\n  };\r\n\r\n  const onChangeGender = (e) => {\r\n    setGender(e.target.value);\r\n  };\r\n\r\n  const onChangePatientType = (e) => {\r\n    setPatientType(e.target.value);\r\n  };\r\n\r\n  const onChangeDepartment = (e) => {\r\n    setDepartment(e.target.value);\r\n  };\r\n\r\n  const onChangeDoctor = (e) => {\r\n    setDoctor(e.target.value);\r\n  };\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (checkAllTableField) {\r\n      const values = {\r\n        writer: props.user.userData._id,\r\n        patientId,\r\n        name,\r\n        birthDate,\r\n        gender,\r\n        address,\r\n        patientType,\r\n        doctor,\r\n        department,\r\n      };\r\n      axios.post('/api/patients/uploadInfo', values).then((response) => {\r\n        if (response.data.success) {\r\n          const data = {\r\n            patientId,\r\n          };\r\n          axios.post('/api/diagnosis/putDiagnosis', data).then((res) => {\r\n            if (res.data.success) {\r\n              history.push('/patientsList');\r\n            } else {\r\n              alert('Failed to put primary information');\r\n            }\r\n          });\r\n        } else {\r\n          alert('Failed to upload information');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%',\r\n    }}\r\n    >\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Nhập thông tin bệnh nhân</Title>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"patientId\">Mã BN:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"patientId\"\r\n                value={patientId}\r\n                onChange={onChangePatientId}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"username\">Họ tên người bệnh:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={onChangeName}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"datebirth\">Năm sinh:</label>\r\n              <br />\r\n              <DatePicker\r\n                className=\"form-control\"\r\n                mode=\"date\"\r\n                format=\"YYYY-MM-DD\"\r\n                selected={birthDate}\r\n                onChange={onChangeDate}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"gender\">Giới tính:</label>\r\n              <select\r\n                name=\"gender\"\r\n                className=\"form-control\"\r\n                value={gender}\r\n                onChange={onChangeGender}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn giới tính bệnh nhân</option>\r\n                <option value=\"Nam\">Nam</option>\r\n                <option value=\"Nữ\">Nữ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"address\">Địa chỉ:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={onChangeAddress}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <label htmlFor=\"patientType\">Đối tượng:</label>\r\n              <select\r\n                name=\"patientType\"\r\n                className=\"form-control\"\r\n                value={patientType}\r\n                onChange={onChangePatientType}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn đối tượng</option>\r\n                <option value=\"Khám trong giờ\">Khám trong giờ</option>\r\n                <option value=\"Khám ngoài giờ\">Khám ngoài giờ</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <h6 className=\"mb-3\">Phòng khám:</h6>\r\n              <select\r\n                name=\"department\"\r\n                className=\"form-control\"\r\n                value={department}\r\n                onChange={onChangeDepartment}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn phòng khám</option>\r\n                {\r\n                  SCHEDULE.map((item) => (\r\n                    <option key={item.PK} value={item.PK}>\r\n                      PK\r\n                      {item.PK}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-5\">\r\n              <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\r\n              <select\r\n                name=\"doctor\"\r\n                className=\"form-control\"\r\n                value={doctor}\r\n                onChange={onChangeDoctor}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn bác sĩ</option>\r\n                {SCHEDULE.forEach((item) => {\r\n                  if (item.PK === department) {\r\n                    doctors = item.doctor;\r\n                  }\r\n                })}\r\n                {\r\n                  doctors !== [] && doctors.map((dr) => (\r\n                    <option key={`${dr.name}${dr.level}`} value={dr.name}>\r\n                      {dr.level}\r\n                      .\r\n                      {' '}\r\n                      {dr.name}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <button className=\"btn btn-primary btn-block form-group col-md-2\">\r\n              Thêm thông tin bệnh nhân\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful ? 'alert alert-success' : 'alert alert-danger'\r\n              }\r\n              role=\"alert\"\r\n              style={{ textAlign: 'center', margin: 10 }}\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientsInfoInput;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\DoctorBoard\\DoctorDiagnosis.js",["282","283"],"/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SCHEDULE from '../../../constant/Constant';\r\n\r\nfunction DoctorDiagnosis(props) {\r\n  const history = useHistory();\r\n  const patientId = props.match.params.id;\r\n\r\n  const [name, setName] = useState();\r\n  const [birthDate, setBirthDate] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [patientType, setPatientType] = useState();\r\n  const [doctor, setDoctor] = useState();\r\n  const [department, setDepartment] = useState();\r\n  const [primaryDiagnosis, setPrimaryDiagnosis] = useState();\r\n  const [necessaryWork, setNecessaryWork] = useState([]);\r\n\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  // state to check process\r\n  const [imagingCheck, setImagingCheck] = useState(false);\r\n  const [biochemicalCheck, setBioChemicalCheck] = useState(false);\r\n  const [fungusAndParasiteCheck, setFungusAndParasiteCheck] = useState(false);\r\n  const [hematologyAndImmunologyCheck, setHematologyAndImmunologyCheck] = useState(false);\r\n\r\n  const onChangePrimaryDiagnosis = (e) => {\r\n    setPrimaryDiagnosis(e.target.value);\r\n  };\r\n\r\n  const onChangeNecessaryWork = (e) => {\r\n    setNecessaryWork([...necessaryWork, e.target.value]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (necessaryWork.includes('Chụp chẩn đoán hình ảnh')) {\r\n      setImagingCheck(true);\r\n    }\r\n    if (necessaryWork.includes('Xét nghiệm sinh hóa máu')) {\r\n      setBioChemicalCheck(true);\r\n    }\r\n    if (necessaryWork.includes('Xét nghiệm nấm - kí sinh trùng')) {\r\n      setFungusAndParasiteCheck(true);\r\n    }\r\n    if (necessaryWork.includes('Xét nghiệm huyết học - miễn dịch')) {\r\n      setHematologyAndImmunologyCheck(true);\r\n    }\r\n  }, [necessaryWork]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/patients/getPatientById?id=${patientId}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const fulltime = response.data.patient[0].birthDate;\r\n          const day = fulltime.substring(8, 10);\r\n          const month = fulltime.substring(5, 7);\r\n          const year = fulltime.substring(0, 4);\r\n          const time = `${day}/${month}/${year}`;\r\n          setBirthDate(time);\r\n          setName(response.data.patient[0].name);\r\n          setAddress(response.data.patient[0].address);\r\n          setGender(response.data.patient[0].gender);\r\n          setPatientType(response.data.patient[0].patientType);\r\n          setDoctor(response.data.patient[0].doctor);\r\n          setDepartment(response.data.patient[0].department);\r\n          setShowInfo(true);\r\n          setNotFound(false);\r\n        } else {\r\n          setShowInfo(false);\r\n          setNotFound(true);\r\n          // alert(response.data.err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const checkAllTableField = () => {\r\n    let allFieldFilled = true;\r\n    document.getElementById('checkForm').querySelectorAll('[required]').forEach((element) => {\r\n      if (!element.value) {\r\n        allFieldFilled = false;\r\n      }\r\n\r\n      if (element.type === 'radio') {\r\n        let radioValueCheck = false;\r\n        document.getElementById('checkForm').querySelectorAll(`[name=${element.name}]`).forEach((r) => {\r\n          if (r.checked) radioValueCheck = true;\r\n        });\r\n        allFieldFilled = radioValueCheck;\r\n      }\r\n    });\r\n    return allFieldFilled;\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (checkAllTableField) {\r\n      const value1 = imagingCheck ? 'pending' : '';\r\n      const value2 = biochemicalCheck ? 'pending' : '';\r\n      const value3 = fungusAndParasiteCheck ? 'pending' : '';\r\n      const value4 = hematologyAndImmunologyCheck ? 'pending' : '';\r\n      const dataToUpdate2 = {\r\n        patientId,\r\n        value1,\r\n        value2,\r\n        value3,\r\n        value4,\r\n        primaryDiagnosis,\r\n      };\r\n      axios.post('/api/diagnosis/updateDiagnosis', dataToUpdate2).then((response) => {\r\n        if (response.data.success) {\r\n          // do something\r\n          history.push('/doctorPatientList');\r\n        } else {\r\n          // do something\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* show information of patient */}\r\n      {showInfo && (\r\n      <div>\r\n        <div className=\"p-5 text-center\">\r\n          <h3 className=\"mb-3\">THÔNG TIN BỆNH NHÂN</h3>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th scope=\"col\">\r\n                Họ tên\r\n              </th>\r\n              <th scope=\"col\">\r\n                Mã bệnh nhân\r\n              </th>\r\n              <th scope=\"col\">\r\n                Ngày sinh\r\n              </th>\r\n              <th scope=\"col\">\r\n                Giới tính\r\n              </th>\r\n              <th scope=\"col\">\r\n                Địa chỉ\r\n              </th>\r\n              <th scope=\"col\">\r\n                Đối tượng\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"text-center\">{name}</td>\r\n              <td className=\"text-center\">{patientId}</td>\r\n              <td className=\"text-center\">{birthDate}</td>\r\n              <td className=\"text-center\">{gender}</td>\r\n              <td className=\"text-center\">{address}</td>\r\n              <td className=\"text-center\">{patientType}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"p-5 text-center\">\r\n          <h3 className=\"mb-3\">PHẦN DÀNH CHO BÁC SĨ</h3>\r\n        </div>\r\n\r\n        {/* assign imaging */}\r\n        {/* assign labratory */}\r\n        <form id=\"checkForm\" onSubmit={onSubmit}>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-6\">\r\n              <h6 className=\"mb-3\">Phòng khám:</h6>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"department\"\r\n                value={department}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-6\">\r\n              <h6 className=\"mb-3\">Bác sĩ điều trị:</h6>\r\n              <input\r\n                type=\"text\"\r\n                name=\"doctor\"\r\n                className=\"form-control\"\r\n                value={doctor}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row justify-content-center\">\r\n            <div className=\"form-group col-md-12\">\r\n              <h6 className=\"mb-3\">\r\n                Chẩn đoán ban đầu:\r\n              </h6>\r\n              <textarea\r\n                placeholder=\"Nhập chẩn đoán ban đầu của bệnh nhân\"\r\n                className=\"form-control \"\r\n                name=\"primaryDiagnosis\"\r\n                value={primaryDiagnosis}\r\n                onChange={onChangePrimaryDiagnosis}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <h6 className=\"mb-3\">Các chẩn đoán và xét nghiệm cần thiết:</h6>\r\n          <div>\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Chụp chẩn đoán hình ảnh\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Chụp chẩn đoán hình ảnh</label>\r\n            </div>\r\n            <br />\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Xét nghiệm sinh hóa máu\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm sinh hóa máu</label>\r\n            </div>\r\n            <br />\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Xét nghiệm nấm - kí sinh trùng\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm nấm - kí sinh trùng</label>\r\n            </div>\r\n            <br />\r\n            <div\r\n              className=\"form-check form-check-inline\"\r\n              onChange={onChangeNecessaryWork}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                name=\"necessaryWork\"\r\n                value=\"Xét nghiệm huyết học - miễn dịch\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"necessaryWork\">Xét nghiệm huyết học - miễn dịch</label>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n\r\n          <div className=\"form-row justify-content-center\">\r\n            <button className=\"btn btn-primary btn-block form-group col-md-3\">\r\n              Tiếp tục\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorDiagnosis;\r\n","C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserInput.js",["284","285"],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Admin\\UserEdit.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\Staff\\PatientsUpdate.js",[],"C:\\Users\\Admin\\Desktop\\Đồ án tốt nghiệp\\code\\client\\src\\components\\views\\LaboratoryStaffBoard\\medicalTests\\FormFooter.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":39,"column":15,"nodeType":"298","messageId":"299","endLine":39,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":52,"column":15,"nodeType":"298","messageId":"299","endLine":52,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":64,"column":7,"nodeType":"298","messageId":"299","endLine":64,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":90,"column":7,"nodeType":"298","messageId":"299","endLine":90,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":117,"column":11,"nodeType":"298","messageId":"299","endLine":117,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":5,"column":16,"nodeType":"302","messageId":"303","endLine":5,"endColumn":25},{"ruleId":"304","severity":1,"message":"305","line":1,"column":17,"nodeType":"306","messageId":"307","endLine":1,"endColumn":25},{"ruleId":"304","severity":1,"message":"308","line":1,"column":27,"nodeType":"306","messageId":"307","endLine":1,"endColumn":36},{"ruleId":"304","severity":1,"message":"309","line":10,"column":9,"nodeType":"306","messageId":"307","endLine":10,"endColumn":13},{"ruleId":"304","severity":1,"message":"310","line":69,"column":21,"nodeType":"306","messageId":"307","endLine":69,"endColumn":24},{"ruleId":"304","severity":1,"message":"311","line":86,"column":11,"nodeType":"306","messageId":"307","endLine":86,"endColumn":16},{"ruleId":"304","severity":1,"message":"312","line":91,"column":11,"nodeType":"306","messageId":"307","endLine":91,"endColumn":22},{"ruleId":"313","severity":1,"message":"314","line":77,"column":15,"nodeType":"315","messageId":"299","endLine":77,"endColumn":49},{"ruleId":"304","severity":1,"message":"311","line":90,"column":11,"nodeType":"306","messageId":"307","endLine":90,"endColumn":16},{"ruleId":"304","severity":1,"message":"312","line":95,"column":11,"nodeType":"306","messageId":"307","endLine":95,"endColumn":22},{"ruleId":"304","severity":1,"message":"316","line":7,"column":27,"nodeType":"306","messageId":"307","endLine":7,"endColumn":33},{"ruleId":"304","severity":1,"message":"317","line":22,"column":10,"nodeType":"306","messageId":"307","endLine":22,"endColumn":20},{"ruleId":"304","severity":1,"message":"318","line":11,"column":24,"nodeType":"306","messageId":"307","endLine":11,"endColumn":39},{"ruleId":"304","severity":1,"message":"319","line":12,"column":27,"nodeType":"306","messageId":"307","endLine":12,"endColumn":45},{"ruleId":"304","severity":1,"message":"320","line":13,"column":15,"nodeType":"306","messageId":"307","endLine":13,"endColumn":21},{"ruleId":"313","severity":1,"message":"314","line":46,"column":11,"nodeType":"315","messageId":"299","endLine":46,"endColumn":35},{"ruleId":"313","severity":1,"message":"314","line":102,"column":17,"nodeType":"315","messageId":"299","endLine":102,"endColumn":54},{"ruleId":"296","severity":1,"message":"297","line":107,"column":11,"nodeType":"298","messageId":"299","endLine":107,"endColumn":22},{"ruleId":"304","severity":1,"message":"319","line":12,"column":27,"nodeType":"306","messageId":"307","endLine":12,"endColumn":45},{"ruleId":"304","severity":1,"message":"321","line":13,"column":28,"nodeType":"306","messageId":"307","endLine":13,"endColumn":47},{"ruleId":"304","severity":1,"message":"322","line":14,"column":34,"nodeType":"306","messageId":"307","endLine":14,"endColumn":59},{"ruleId":"304","severity":1,"message":"323","line":15,"column":40,"nodeType":"306","messageId":"307","endLine":15,"endColumn":71},{"ruleId":"304","severity":1,"message":"324","line":16,"column":23,"nodeType":"306","messageId":"307","endLine":16,"endColumn":37},{"ruleId":"304","severity":1,"message":"320","line":17,"column":15,"nodeType":"306","messageId":"307","endLine":17,"endColumn":21},{"ruleId":"304","severity":1,"message":"318","line":14,"column":24,"nodeType":"306","messageId":"307","endLine":14,"endColumn":39},{"ruleId":"304","severity":1,"message":"321","line":15,"column":28,"nodeType":"306","messageId":"307","endLine":15,"endColumn":47},{"ruleId":"304","severity":1,"message":"322","line":16,"column":34,"nodeType":"306","messageId":"307","endLine":16,"endColumn":59},{"ruleId":"304","severity":1,"message":"323","line":17,"column":40,"nodeType":"306","messageId":"307","endLine":17,"endColumn":71},{"ruleId":"304","severity":1,"message":"324","line":18,"column":23,"nodeType":"306","messageId":"307","endLine":18,"endColumn":37},{"ruleId":"304","severity":1,"message":"325","line":19,"column":25,"nodeType":"306","messageId":"307","endLine":19,"endColumn":41},{"ruleId":"304","severity":1,"message":"320","line":20,"column":15,"nodeType":"306","messageId":"307","endLine":20,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":35,"column":11,"nodeType":"298","messageId":"299","endLine":35,"endColumn":22},{"ruleId":"304","severity":1,"message":"326","line":33,"column":20,"nodeType":"306","messageId":"307","endLine":33,"endColumn":31},{"ruleId":"304","severity":1,"message":"327","line":34,"column":20,"nodeType":"306","messageId":"307","endLine":34,"endColumn":31},{"ruleId":"304","severity":1,"message":"328","line":35,"column":17,"nodeType":"306","messageId":"307","endLine":35,"endColumn":25},{"ruleId":"304","severity":1,"message":"329","line":36,"column":18,"nodeType":"306","messageId":"307","endLine":36,"endColumn":27},{"ruleId":"304","severity":1,"message":"330","line":37,"column":21,"nodeType":"306","messageId":"307","endLine":37,"endColumn":33},{"ruleId":"304","severity":1,"message":"331","line":38,"column":19,"nodeType":"306","messageId":"307","endLine":38,"endColumn":29},{"ruleId":"304","severity":1,"message":"332","line":39,"column":16,"nodeType":"306","messageId":"307","endLine":39,"endColumn":23},{"ruleId":"304","severity":1,"message":"333","line":40,"column":17,"nodeType":"306","messageId":"307","endLine":40,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":66,"column":11,"nodeType":"315","messageId":"299","endLine":66,"endColumn":35},{"ruleId":"313","severity":1,"message":"314","line":271,"column":19,"nodeType":"315","messageId":"299","endLine":271,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":275,"column":15,"nodeType":"298","messageId":"299","endLine":275,"endColumn":26},{"ruleId":"304","severity":1,"message":"326","line":32,"column":20,"nodeType":"306","messageId":"307","endLine":32,"endColumn":31},{"ruleId":"304","severity":1,"message":"327","line":33,"column":20,"nodeType":"306","messageId":"307","endLine":33,"endColumn":31},{"ruleId":"304","severity":1,"message":"328","line":34,"column":17,"nodeType":"306","messageId":"307","endLine":34,"endColumn":25},{"ruleId":"304","severity":1,"message":"329","line":35,"column":18,"nodeType":"306","messageId":"307","endLine":35,"endColumn":27},{"ruleId":"304","severity":1,"message":"330","line":36,"column":21,"nodeType":"306","messageId":"307","endLine":36,"endColumn":33},{"ruleId":"304","severity":1,"message":"331","line":37,"column":19,"nodeType":"306","messageId":"307","endLine":37,"endColumn":29},{"ruleId":"304","severity":1,"message":"332","line":38,"column":16,"nodeType":"306","messageId":"307","endLine":38,"endColumn":23},{"ruleId":"304","severity":1,"message":"333","line":39,"column":17,"nodeType":"306","messageId":"307","endLine":39,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":65,"column":11,"nodeType":"315","messageId":"299","endLine":65,"endColumn":35},{"ruleId":"313","severity":1,"message":"314","line":265,"column":19,"nodeType":"315","messageId":"299","endLine":265,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":269,"column":15,"nodeType":"298","messageId":"299","endLine":269,"endColumn":26},{"ruleId":"313","severity":1,"message":"314","line":122,"column":11,"nodeType":"315","messageId":"299","endLine":122,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":147,"column":11,"nodeType":"298","messageId":"299","endLine":147,"endColumn":22},{"ruleId":"304","severity":1,"message":"326","line":31,"column":20,"nodeType":"306","messageId":"307","endLine":31,"endColumn":31},{"ruleId":"304","severity":1,"message":"334","line":32,"column":18,"nodeType":"306","messageId":"307","endLine":32,"endColumn":27},{"ruleId":"304","severity":1,"message":"335","line":33,"column":22,"nodeType":"306","messageId":"307","endLine":33,"endColumn":35},{"ruleId":"304","severity":1,"message":"336","line":34,"column":16,"nodeType":"306","messageId":"307","endLine":34,"endColumn":23},{"ruleId":"304","severity":1,"message":"337","line":35,"column":16,"nodeType":"306","messageId":"307","endLine":35,"endColumn":23},{"ruleId":"304","severity":1,"message":"338","line":36,"column":19,"nodeType":"306","messageId":"307","endLine":36,"endColumn":29},{"ruleId":"313","severity":1,"message":"314","line":58,"column":11,"nodeType":"315","messageId":"299","endLine":58,"endColumn":35},{"ruleId":"313","severity":1,"message":"314","line":190,"column":19,"nodeType":"315","messageId":"299","endLine":190,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":194,"column":15,"nodeType":"298","messageId":"299","endLine":194,"endColumn":26},{"ruleId":"304","severity":1,"message":"339","line":11,"column":10,"nodeType":"306","messageId":"307","endLine":11,"endColumn":19},{"ruleId":"304","severity":1,"message":"340","line":17,"column":17,"nodeType":"306","messageId":"307","endLine":17,"endColumn":25},{"ruleId":"304","severity":1,"message":"341","line":18,"column":20,"nodeType":"306","messageId":"307","endLine":18,"endColumn":31},{"ruleId":"304","severity":1,"message":"342","line":19,"column":23,"nodeType":"306","messageId":"307","endLine":19,"endColumn":37},{"ruleId":"313","severity":1,"message":"314","line":33,"column":13,"nodeType":"315","messageId":"299","endLine":33,"endColumn":37},{"ruleId":"313","severity":1,"message":"314","line":123,"column":11,"nodeType":"315","messageId":"299","endLine":123,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":149,"column":11,"nodeType":"298","messageId":"299","endLine":149,"endColumn":22},{"ruleId":"304","severity":1,"message":"317","line":24,"column":10,"nodeType":"306","messageId":"307","endLine":24,"endColumn":20},{"ruleId":"304","severity":1,"message":"343","line":24,"column":22,"nodeType":"306","messageId":"307","endLine":24,"endColumn":35},{"ruleId":"313","severity":1,"message":"314","line":84,"column":11,"nodeType":"315","messageId":"299","endLine":84,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":106,"column":11,"nodeType":"298","messageId":"299","endLine":106,"endColumn":22},{"ruleId":"304","severity":1,"message":"326","line":33,"column":20,"nodeType":"306","messageId":"307","endLine":33,"endColumn":31},{"ruleId":"304","severity":1,"message":"327","line":34,"column":20,"nodeType":"306","messageId":"307","endLine":34,"endColumn":31},{"ruleId":"304","severity":1,"message":"328","line":35,"column":17,"nodeType":"306","messageId":"307","endLine":35,"endColumn":25},{"ruleId":"304","severity":1,"message":"329","line":36,"column":18,"nodeType":"306","messageId":"307","endLine":36,"endColumn":27},{"ruleId":"304","severity":1,"message":"330","line":37,"column":21,"nodeType":"306","messageId":"307","endLine":37,"endColumn":33},{"ruleId":"304","severity":1,"message":"331","line":38,"column":19,"nodeType":"306","messageId":"307","endLine":38,"endColumn":29},{"ruleId":"304","severity":1,"message":"332","line":39,"column":16,"nodeType":"306","messageId":"307","endLine":39,"endColumn":23},{"ruleId":"304","severity":1,"message":"333","line":40,"column":17,"nodeType":"306","messageId":"307","endLine":40,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":66,"column":11,"nodeType":"315","messageId":"299","endLine":66,"endColumn":35},{"ruleId":"313","severity":1,"message":"314","line":271,"column":19,"nodeType":"315","messageId":"299","endLine":271,"endColumn":56},{"ruleId":"296","severity":1,"message":"297","line":275,"column":15,"nodeType":"298","messageId":"299","endLine":275,"endColumn":26},{"ruleId":"304","severity":1,"message":"344","line":14,"column":9,"nodeType":"306","messageId":"307","endLine":14,"endColumn":13},{"ruleId":"313","severity":1,"message":"314","line":124,"column":11,"nodeType":"315","messageId":"299","endLine":124,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":150,"column":11,"nodeType":"298","messageId":"299","endLine":150,"endColumn":22},{"ruleId":"304","severity":1,"message":"345","line":4,"column":16,"nodeType":"306","messageId":"307","endLine":4,"endColumn":20},{"ruleId":"304","severity":1,"message":"346","line":11,"column":7,"nodeType":"306","messageId":"307","endLine":11,"endColumn":20},{"ruleId":"313","severity":1,"message":"314","line":27,"column":9,"nodeType":"315","messageId":"299","endLine":27,"endColumn":35},{"ruleId":"304","severity":1,"message":"305","line":2,"column":17,"nodeType":"306","messageId":"307","endLine":2,"endColumn":25},{"ruleId":"304","severity":1,"message":"308","line":2,"column":27,"nodeType":"306","messageId":"307","endLine":2,"endColumn":36},{"ruleId":"313","severity":1,"message":"314","line":21,"column":11,"nodeType":"315","messageId":"299","endLine":21,"endColumn":41},{"ruleId":"304","severity":1,"message":"316","line":3,"column":27,"nodeType":"306","messageId":"307","endLine":3,"endColumn":33},{"ruleId":"313","severity":1,"message":"314","line":92,"column":15,"nodeType":"315","messageId":"299","endLine":92,"endColumn":57},{"ruleId":"313","severity":1,"message":"314","line":96,"column":11,"nodeType":"315","messageId":"299","endLine":96,"endColumn":48},{"ruleId":"304","severity":1,"message":"347","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":16},{"ruleId":"304","severity":1,"message":"348","line":25,"column":10,"nodeType":"306","messageId":"307","endLine":25,"endColumn":18},{"ruleId":"304","severity":1,"message":"316","line":4,"column":27,"nodeType":"306","messageId":"307","endLine":4,"endColumn":33},{"ruleId":"313","severity":1,"message":"314","line":87,"column":11,"nodeType":"315","messageId":"299","endLine":87,"endColumn":45},"lines-around-directive",["349"],"no-spaced-func",["350"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","func-names","Unexpected unnamed function.","FunctionDeclaration","unnamed","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'err' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","'useRef' is defined but never used.","'successful' is assigned a value but never used.","'setImagingState' is assigned a value but never used.","'setDoctorDiagnosis' is assigned a value but never used.","'setPId' is assigned a value but never used.","'setBioChemicalCheck' is assigned a value but never used.","'setFungusAndParasiteCheck' is assigned a value but never used.","'setHematologyAndImmunologyCheck' is assigned a value but never used.","'setResultCheck' is assigned a value but never used.","'setDoneDiagnosis' is assigned a value but never used.","'setTestName' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setInsurance' is assigned a value but never used.","'setPayment' is assigned a value but never used.","'setDiff' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'setResult' is assigned a value but never used.","'setNormalRate' is assigned a value but never used.","'setUnit' is assigned a value but never used.","'setNote' is assigned a value but never used.","'setMachine' is assigned a value but never used.","'patientId' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setPostSize' is assigned a value but never used.","'setSearchTerms' is assigned a value but never used.","'setSuccessful' is assigned a value but never used.","'date' is assigned a value but never used.","'Icon' is defined but never used.","'MenuItemGroup' is assigned a value but never used.","'SCHEDULE' is defined but never used.","'notFound' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]